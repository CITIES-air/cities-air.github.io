{"version":3,"file":"static/js/300.fb0548f4.chunk.js","mappings":"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","sources":["Components/CurrentAQIGrid.jsx","Components/UppercaseTitle.jsx","Pages/Home/About.jsx","IQAir_logo.svg","Pages/Home/Map.jsx","Pages/Home/GetInTouch.jsx","Pages/Home/Home.jsx","Pages/Project/ExpandableSection.jsx"],"sourcesContent":["// disable eslint for this file\n/* eslint-disable */\nimport { Box, Grid, Typography, Skeleton, Stack } from '@mui/material';\nimport ThermostatIcon from '@mui/icons-material/Thermostat';\nimport WaterDropIcon from '@mui/icons-material/WaterDrop';\nimport ErrorIcon from '@mui/icons-material/Error';\n\nimport { returnSensorStatus, SensorStatus, getFormattedElapsedTimeFromNow } from '../Pages/Screen/ScreenUtils';\nimport { TemperatureUnits, getFormattedTemperature, calculateHeatIndex } from \"../Pages/Screen/TemperatureUtils\";\n\nimport AQIdatabase from '../Utils/AirQualityIndexHelper';\n\nimport CustomThemes from '../Themes/CustomThemes';\n\nconst CurrentAQIGrid = (props) => {\n  const { currentSensorsData, temperatureUnitPreference, isScreen = true } = props;\n\n  const getGridItemSize = (numOfItems) => {\n    return {\n      xs: Math.max(12 / numOfItems, 6),\n      sm: Math.max(12 / numOfItems, 4),\n      lg: isScreen ? (12 / numOfItems) : Math.min(5, Math.max(12 / numOfItems, 2))\n    }\n  }\n\n  return (\n    <Grid\n      container\n      justifyContent=\"center\"\n      sx={{\n        '& .MuiSvgIcon-root': {\n          verticalAlign: 'sub',\n          fontSize: isScreen ? null : '1rem'\n        },\n        '& *': {\n          fontWeight: '500'\n        },\n        '& .condensedFont': {\n          fontFamily: 'IBM Plex Sans Condensed, sans-serif !important',\n          '& *': {\n            fontFamily: 'IBM Plex Sans Condensed, sans-serif !important'\n          }\n        }\n      }}\n    >\n      {\n        currentSensorsData ?\n\n          (Object.entries(currentSensorsData).map(([key, sensorData], index) => (\n            <Grid\n              item\n              key={key}\n              {...getGridItemSize(Object.keys(currentSensorsData).length)}\n              sx={\n                sensorData.current?.sensor_status !== SensorStatus.active &&\n                { '& *': { color: `${CustomThemes.universal.palette.inactiveSensor}` } }\n              }\n            >\n              <Box sx={{ '& *': { color: sensorData.current?.color } }}>\n                <Typography variant={isScreen ? \"h4\" : 'h5'} fontWeight=\"500\" className='condensedFont'>\n                  {sensorData.sensor?.location_long || sensorData.sensor?.location_short || 'No Location Name'}\n                </Typography>\n                <Typography variant={isScreen ? \"h1\" : 'h2'} fontWeight=\"500\" lineHeight={isScreen ? 0.8 : 0.9}>\n                  {sensorData.current?.aqi || '--'}\n                </Typography>\n                <Typography variant={isScreen ? \"h4\" : 'h5'} fontWeight=\"500\" className='condensedFont'>\n                  {sensorData.current?.category || '--'}\n                </Typography>\n              </Box>\n\n              <Box sx={{\n                '& *': {\n                  color:\n                    isScreen ? (\n                      sensorData.current?.sensor_status === SensorStatus.active ?\n                        '#c8dcff' : CustomThemes.universal.palette.inactiveSensor\n                    )\n                      : 'text.secondary'\n                }, mt: isScreen ? 2 : 1\n              }} className='condensedFont'>\n                <Typography variant={isScreen ? \"h6\" : 'body1'}>\n                  <ThermostatIcon />\n                  {\n                    getFormattedTemperature({\n                      rawTemp: sensorData.current?.temperature,\n                      currentUnit: TemperatureUnits.celsius,\n                      returnUnit: temperatureUnitPreference\n                    })\n                  }\n                  &nbsp;&nbsp;-&nbsp;\n                  <WaterDropIcon sx={{ transform: 'scaleX(0.9)' }} />\n                  {sensorData.current?.rel_humidity ? Math.round(sensorData.current?.rel_humidity) : \"--\"}%\n                </Typography>\n                {\n                  // Show heat index for selected location types\n                  ['outdoors', 'indoors_gym'].includes(sensorData.sensor?.location_type) &&\n                  <Typography variant={isScreen ? \"body1\" : 'body2'} sx={{ fontWeight: '300 !important' }}>\n                    {calculateHeatIndex({\n                      rawTemp: sensorData.current?.temperature,\n                      currentUnit: TemperatureUnits.celsius,\n                      rel_humidity: sensorData.current?.rel_humidity,\n                      returnUnit: temperatureUnitPreference\n                    })}\n                  </Typography>\n                }\n                {\n                  displayLastUpdateAndSensorStatus({ sensorData, isScreen })\n                }\n              </Box>\n\n              {\n                // Display outdoor-indoor comparison if both sensors are active\n                sensorData.sensor_status !== SensorStatus.active &&\n                <Typography variant={isScreen ? \"h6\" : 'body1'} className=\"condensedFont\">\n                  {returnSensorStatus(sensorData)}\n                </Typography>\n              }\n            </Grid>\n          ))\n          )\n          :\n          (\n            <Stack direction=\"column\" alignItems=\"center\" justifyContent=\"center\">\n              <Skeleton variant='text' sx={{ width: '15rem', fontSize: '2rem' }} />\n              <Skeleton variant='text' sx={{ width: '5rem', fontSize: '4rem', my: -1.5 }} />\n              <Skeleton variant='text' sx={{ width: '10rem', fontSize: '2rem' }} />\n              <Skeleton variant='text' sx={{ width: '7.5rem', fontSize: '1rem' }} />\n              <Skeleton variant='text' sx={{ width: '7.5rem', fontSize: '1rem' }} />\n            </Stack>\n          )\n      }\n    </Grid>\n  );\n};\n\nconst displayLastUpdateAndSensorStatus = ({ sensorData, isScreen }) => {\n  if (isScreen && sensorData.current.sensor_status === SensorStatus.active) return null;\n  else\n    return (\n      <Typography\n        variant={isScreen ? 'h6' : 'caption'}\n        sx={{\n          mt: 0,\n          fontWeight: isScreen && '500 !important'\n        }}\n      >\n        {\n          sensorData.current?.sensor_status !== SensorStatus.active\n          &&\n          <>\n            <ErrorIcon\n              sx={{\n                '& *': {\n                  color: `${AQIdatabase[3].lightThemeColor} !important`\n                },\n                mr: 0.5\n              }} />\n            Offline.&nbsp;\n          </>\n        }\n        Last update:\n        {(sensorData.current?.timestamp || sensorData.sensor?.last_seen)\n          ? ` ${getFormattedElapsedTimeFromNow(sensorData.current?.timestamp || sensorData.sensor?.last_seen)} ago`\n          : '--'}\n      </Typography>\n    )\n}\n\nexport default CurrentAQIGrid;\n","import { Skeleton, Typography } from '@mui/material';\n\nexport default function UppercaseTitle({ text }) {\n  return (\n    <Typography\n      variant=\"h4\"\n      color=\"text.primary\"\n      sx={{\n        fontWeight: 'medium',\n        display: 'block',\n        textTransform: 'uppercase',\n        pb: 3,\n        lineHeight: 1\n      }}\n    >\n      {text || <Skeleton variant='text' />}\n    </Typography>\n  );\n}\n","import { Stack, Typography, Paper } from '@mui/material';\n\nimport parse from 'html-react-parser';\nimport UppercaseTitle from '../../Components/UppercaseTitle';\nimport ExpandableSection from '../Project/ExpandableSection';\n\nimport jsonData from '../../section_data.json';\nimport { replacePlainHTMLWithMuiComponents, capitalizePhrase } from '../../Utils/Utils';\n\nfunction About() {\n  return (\n    <>\n      <UppercaseTitle text={capitalizePhrase(jsonData.about.id)} />\n      <Stack spacing={3}>\n        {jsonData.about.content.map((element, index) => (\n          <Paper key={index} elevation={2} sx={{ p: 3 }}>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              {parse(element.mainText, {\n                replace: replacePlainHTMLWithMuiComponents,\n              })}\n            </Typography>\n            {\n              element.reference && (\n                <ExpandableSection\n                  title={\"Reference\"}\n                  content={(\n                    <Typography variant=\"caption\" color=\"text.secondary\">\n                      {parse(element.reference, {\n                        replace: replacePlainHTMLWithMuiComponents,\n                      })}\n                    </Typography>\n                  )}\n                />\n              )\n            }\n          </Paper>\n        ))}\n        <Typography variant=\"caption\" color=\"text.secondary\" sx={{ px: 3 }}>\n          {parse(jsonData.disclaimer.content, {\n            replace: replacePlainHTMLWithMuiComponents,\n          })}\n        </Typography>\n      </Stack>\n    </>\n  );\n}\n\nexport default About;\n","var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgIqAirLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 77,\n    height: 29,\n    viewBox: \"0 0 77 29\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"none\",\n    fillRule: \"evenodd\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 28.988h76.999V0H0z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#4e8abe\",\n    d: \"M25.789 19.005c0 2.573.218 2.646 1.36 2.792l.534.073c.17.17.146.608-.049.703a74.045 74.045 0 0 0-6.506 0c-.194-.095-.219-.533-.048-.703l.533-.073c1.142-.146 1.36-.22 1.36-2.792v-9.03c0-2.574-.218-2.647-1.36-2.794l-.533-.072c-.171-.17-.146-.607.048-.704a71.547 71.547 0 0 0 6.507-.001c.194.098.218.535.048.705l-.534.072c-1.142.147-1.36.22-1.36 2.794v9.03zM51.372 16.35h4.257l-.78-6.33h-.044l-3.433 6.33zm2.318-9.763h3.589L59.93 22.5h-3.476l-.514-3.543h-5.95L47.985 22.5h-3.7L53.69 6.587zM66.995 9.195h-3.187l.58-2.607h3.186l-.579 2.607zm-3.543 1.783h3.187l-2.452 11.523H61l2.452-11.523zM69.18 10.978h3.009l-.47 2.072.046.045c.714-1.583 2.274-2.429 3.967-2.429.335 0 .647.023.98.067l-.645 3.075c-.446-.089-.892-.2-1.338-.2-2.43 0-3.298 1.827-3.722 3.79l-1.07 5.102h-3.164l2.407-11.522z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#4e8abe\",\n    d: \"M31.508 14.004c0 3.35 1.433 7.915 5.584 7.915 2.767 0 5.002-2.064 5.002-6.943 0-3.666-1.65-7.915-5.512-7.915-2.428 0-5.074 1.772-5.074 6.943m13.887.534c0 3.787-2.282 6.822-5.487 7.843-.145.097-.049.29.22.509 1.383 1.214 3.543 3.132 5.364 3.666.583.17 1.165.267 1.748.267a3.36 3.36 0 0 0 1.214-.243c.146.073.22.34.146.486-.729.557-1.99.752-3.035.752-3.253 0-6.604-1.942-8.983-4.467-.437-.437-.606-.51-.898-.534-4.418-.365-7.477-3.958-7.477-8.11 0-4.952 3.592-8.618 8.691-8.618 5.608 0 8.497 4.079 8.497 8.449\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D9272E\",\n    d: \"M15.984 21.264a1.22 1.22 0 0 1-1.22 1.221H1.218A1.22 1.22 0 0 1 0 21.265V7.72c0-.674.546-1.219 1.22-1.219h13.543a1.22 1.22 0 0 1 1.221 1.22v13.543z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FFF\",\n    d: \"M9.735 12.91V9.418H6.369v3.494l-3.495-.006v3.36h3.495v3.496h3.366v-3.497h3.494V12.91z\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIqAirLogo);\nexport default __webpack_public_path__ + \"static/media/IQAir_logo.6664e0a790249b05f736fb791effaaf3.svg\";\nexport { ForwardRef as ReactComponent };","// disable eslint for this file\n/* eslint-disable */\nimport { useState, useEffect, useMemo, useCallback } from 'react';\nimport { Box, Typography, Stack, Link } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport { MapContainer, TileLayer, Marker, Popup, useMap, AttributionControl, useMapEvent, Rectangle, CircleMarker } from 'react-leaflet';\nimport { useEventHandlers } from '@react-leaflet/core';\nimport L from 'leaflet';\n\nimport LaunchIcon from '@mui/icons-material/Launch';\n\nimport IQAir_Logo from '../../IQAir_logo.svg';\n\nimport { SensorStatus, calculateSensorStatus, getFormattedElapsedTimeFromNow } from '../Screen/ScreenUtils';\n\nimport { fetchDataFromURL } from '../../Components/DatasetDownload/DatasetFetcher';\n\nimport { getFormattedTemperature, TemperatureUnits } from '../Screen/TemperatureUtils';\n\nimport AQIdatabase from '../../Utils/AirQualityIndexHelper';\nimport convertToAQI from '../../Utils/AirQualityIndexCalculator';\n\nimport ThermostatIcon from '@mui/icons-material/Thermostat';\nimport WaterDropIcon from '@mui/icons-material/WaterDrop';\nimport ThemePreferences from '../../Themes/ThemePreferences';\n\nimport { styled } from '@mui/material/styles';\nimport CustomThemes from '../../Themes/CustomThemes';\nimport { EndPoints, getApiUrl } from '../../Utils/ApiUtils';\n\nconst StyledLeafletPopup = styled(Popup)(({ theme }) => ({\n    '& .leaflet-popup-tip-container': {\n        display: 'none !important'\n    }\n}));\n\n\nfunction MapPlaceholder() {\n    return (\n        <p>\n            Map of CITIESair stations in Abu Dhabi\n            <noscript>You need to enable JavaScript to see this map.</noscript>\n        </p>\n    )\n}\n\nconst getTileUrl = ({ themePreference, isMiniMap }) => {\n    let tileTheme;\n    switch (themePreference) {\n        case ThemePreferences.dark:\n            tileTheme = isMiniMap ? 'light' : 'dark';\n            break\n        default:\n            tileTheme = isMiniMap ? 'dark' : 'light';\n            break\n    }\n    return `https://{s}.tile.jawg.io/jawg-${tileTheme}/{z}/{x}/{y}{r}.png?access-token={accessToken}`;\n}\nconst getMiniMapBoundOptions = ({ themePreference }) => {\n    switch (themePreference) {\n        case ThemePreferences.dark:\n            return {\n                fillColor: \"#000\",\n                color: \"#000\"\n            }\n        default:\n            return {\n                fillColor: \"#fff\",\n                color: \"#fff\"\n            }\n    }\n}\nconst tileAttribution = '<a href=\"https://leafletjs.com/\" target=\"_blank\"><b>Leaflet</b></a> | <a href=\"https://jawg.io\" target=\"_blank\">&copy; <b>Jawg</b>Maps</a> <a href=\"https://www.openstreetmap.org/copyright\">&copy; OpenStreetMap</a> contributors';\nconst tileAccessToken = 'N4ppJQTC3M3uFOAsXTbVu6456x1MQnQTYityzGPvAkVB3pS27NMwJ4b3AfebMfjY';\nconst centerCoordinate = [24.46, 54.52];\nconst maxBounds = [\n    [22.608292, 51.105185], // [Southwest corner coordinates]\n    [26.407575, 56.456571], // [Northeast corner coordinates]\n];\n\nconst MIN_ZOOM = 8;\nconst MAX_ZOOM = 12;\nconst DEFAULT_ZOOM = 10;\nconst POSITION_CLASSES = {\n    bottomleft: 'leaflet-bottom leaflet-left',\n    bottomright: 'leaflet-bottom leaflet-right',\n    topleft: 'leaflet-top leaflet-left',\n    topright: 'leaflet-top leaflet-right',\n}\n\nconst Map = ({ themePreference, temperatureUnitPreference }) => {\n    const [mapData, setMapData] = useState({});\n    const theme = useTheme();\n\n    const url = getApiUrl({ endpoint: EndPoints.map });\n\n    useEffect(() => {\n        fetchDataFromURL(url, 'json').then((data => {\n            Object.entries(data).map(([_, location]) => {\n                // Calculate if the sensor is currently active or not\n                const now = new Date();\n                const currentTimestamp = new Date(location.current?.timestamp);\n                const lastSeenInHours = Math.round((now - currentTimestamp) / 1000 / 3600);\n                if (location.current) {\n                    location.current.lastSeenInHours = lastSeenInHours;\n                    location.current.sensor_status = calculateSensorStatus(lastSeenInHours);\n                }\n\n                // Calculate AQI from raw measurements\n                if (location.current?.[\"pm2.5\"]) {\n                    const aqiObject = convertToAQI(location.current[\"pm2.5\"]);\n                    if (aqiObject) {\n                        const aqiCategory = AQIdatabase[aqiObject.aqi_category_index];\n                        location.current.aqi = aqiObject.aqi;\n                        location.current.category = aqiCategory.category;\n\n                        if (location.current.sensor_status === SensorStatus.active) {\n                            location.current.color = aqiCategory.lightThemeColor;\n                        }\n                        else {\n                            location.current.color = CustomThemes.universal.palette.inactiveSensor;\n                        }\n                    }\n                }\n\n                // Create the marker icon on the map\n                location.markerIcon = new L.DivIcon({\n                    className: 'aqi-marker-icon',\n                    html: `<div onmouseover=\"this.style.opacity=1;\" onmouseleave=\"this.style.opacity=0.75;\" style=\"width: 2.25rem; height: 2.25rem; background-color: ${location.current.color}; border-radius: 50%; border: solid 2px; display: flex; justify-content: center; align-items: center; font-size: 1rem; font-weight: 500; color: ${themePreference === ThemePreferences.light ? 'black' : 'white'}; opacity: 0.75; :hover: {opacity: 1}\">${location.current.aqi || '--'}</div>`\n\n                });\n            });\n            setMapData(data);\n        }));\n\n    }, []);\n\n    function MinimapBounds({ parentMap, zoom }) {\n        const minimap = useMap()\n\n        // Clicking a point on the minimap sets the parent's map center\n        const onClick = useCallback(\n            (e) => {\n                parentMap.setView(e.latlng, parentMap.getZoom())\n            },\n            [parentMap],\n        )\n        useMapEvent('click', onClick)\n\n        // Keep track of bounds in state to trigger renders\n        const [bounds, setBounds] = useState(parentMap.getBounds())\n        const onChange = useCallback(() => {\n            setBounds(parentMap.getBounds())\n            // Update the minimap's view to match the parent map's center and zoom\n            minimap.setView(parentMap.getCenter(), zoom)\n        }, [minimap, parentMap, zoom])\n\n        // Listen to events on the parent map\n        const handlers = useMemo(() => ({ move: onChange, zoom: onChange }), [])\n        useEventHandlers({ instance: parentMap }, handlers)\n\n        return (\n            <Rectangle\n                bounds={bounds}\n                pathOptions={{\n                    weight: 1,\n                    ...getMiniMapBoundOptions({ themePreference })\n                }}\n            />\n        );\n    }\n\n    function MinimapControl({ position, zoom, mapData }) {\n        const parentMap = useMap()\n        const mapZoom = zoom || MIN_ZOOM - 2;\n\n        // Memoize the minimap so it's not affected by position changes\n        const minimap = useMemo(\n            () => (\n                <MapContainer\n                    style={{ height: \"20vh\", width: \"30vw\", maxWidth: \"250px\", maxHeight: \"200px\" }}\n                    center={parentMap.getCenter()}\n                    zoom={mapZoom}\n                    dragging={false}\n                    doubleClickZoom={false}\n                    scrollWheelZoom={false}\n                    attributionControl={false}\n                    zoomControl={false}\n                >\n                    <TileLayer\n                        url={getTileUrl({ themePreference, isMiniMap: true })}\n                        accessToken={tileAccessToken}\n                    />\n                    {\n                        Object.entries(mapData).map(([key, location]) => (\n                            <CircleMarker\n                                key={key}\n                                center={[location.sensor?.coordinates?.latitude, location.sensor?.coordinates?.longitude]}\n                                pathOptions={{\n                                    fillColor: location.current?.color,\n                                    radius: 3,\n                                    weight: 0,\n                                    fillOpacity: 1\n                                }}\n                            >\n                            </CircleMarker>\n\n                        ))\n                    }\n                    <MinimapBounds parentMap={parentMap} zoom={mapZoom} />\n                </MapContainer>\n            ),\n            [],\n        )\n\n        const positionClass =\n            (position && POSITION_CLASSES[position]) || POSITION_CLASSES.bottomleft\n        return (\n            <div className={positionClass}>\n                <div className=\"leaflet-control leaflet-bar\">{minimap}</div>\n            </div>\n        )\n    }\n\n    return (\n        <Box sx={{\n            height: \"50vh\",\n            [theme.breakpoints.down('md')]: {\n                height: '70vh',\n            },\n            '& .leaflet-container': { height: \"100%\", width: \"100%\" },\n            '& .leaflet-control-attribution': { fontSize: '0.5rem' }\n        }}>\n            <MapContainer\n                center={centerCoordinate}\n                zoom={DEFAULT_ZOOM}\n                maxBounds={maxBounds}\n                scrollWheelZoom={false}\n                placeholder={<MapPlaceholder />}\n                attributionControl={false}\n            >\n                <MinimapControl position=\"bottomleft\" mapData={mapData} />\n\n                <TileLayer\n                    attribution={tileAttribution}\n                    url={getTileUrl({ themePreference })}\n                    minZoom={MIN_ZOOM}\n                    maxZoom={MAX_ZOOM}\n                    bounds={maxBounds}\n                    accessToken={tileAccessToken}\n                />\n                <AttributionControl position=\"bottomright\" prefix={false} />\n                {\n                    Object.entries(mapData).map(([key, location]) => (\n                        <Marker\n                            key={key}\n                            position={[location.sensor?.coordinates?.latitude, location.sensor?.coordinates?.longitude]}\n                            icon={location.markerIcon}\n                        >\n                            <StyledLeafletPopup>\n                                <Stack direction=\"row\" spacing={3}>\n                                    <Link\n                                        variant=\"body1\"\n                                        fontWeight={500}\n                                        href={location.sensor?.public_iqAir_station_link}\n                                        target='_blank'\n                                        rel=\"noopener noreferrer\"\n                                        color={`${theme.palette.primary.main}!important`}\n                                        underline=\"hover\"\n                                    >\n                                        {location.sensor?.public_iqAir_station_name}\n                                        &nbsp;\n                                        <sup>\n                                            <LaunchIcon fontSize='0.8rem' />\n                                        </sup>\n                                    </Link>\n                                    <Box>\n                                        <img src={IQAir_Logo} />\n                                    </Box>\n                                </Stack>\n\n                                <Box sx={{ '& *': { color: location.current?.color } }}>\n                                    <Typography variant=\"h3\" fontWeight=\"500\" lineHeight={0.9}>\n                                        {location.current?.aqi || '--'}\n                                        <Typography variant='caption' fontWeight=\"500\">(US AQI)</Typography>\n                                    </Typography>\n\n                                    <Typography variant=\"body1\" component=\"span\" fontWeight=\"500\">\n                                        {location.current?.category || '--'}\n                                    </Typography>\n                                </Box>\n\n                                <Typography\n                                    variant=\"caption\"\n                                    sx={{ display: 'block', fontWeight: 500 }}\n                                    gutterBottom\n                                >\n                                    PM2.5: {location.current?.[\"pm2.5\"] || '--'}µg/m<sup>3</sup>\n                                </Typography>\n                                <Typography\n                                    variant=\"caption\"\n                                    sx={{ display: 'block', fontWeight: 500 }}\n                                    gutterBottom\n                                >\n                                    <ThermostatIcon sx={{ fontSize: '1rem', verticalAlign: 'sub' }} />\n                                    {\n                                        getFormattedTemperature({\n                                            rawTemp: location.current?.temperature,\n                                            currentUnit: TemperatureUnits.celsius,\n                                            returnUnit: temperatureUnitPreference\n                                        })}\n                                    &nbsp;&nbsp;-&nbsp;&nbsp;\n                                    <WaterDropIcon sx={{ fontSize: '1rem', verticalAlign: 'sub' }} />\n                                    {location.current?.rel_humidity ? Math.round(location.current?.rel_humidity) : \"--\"}%\n                                </Typography>\n                                <Typography variant=\"caption\" sx={{ display: 'block', fontWeight: 500 }}>\n\n                                </Typography>\n                                <Box>\n                                    <Typography variant='caption' sx={{ mt: 0 }}>\n                                        <Typography variant='caption' fontWeight=\"500\">Last update:</Typography>\n                                        {location.current?.timestamp\n                                            ? ` ${getFormattedElapsedTimeFromNow(location.current.timestamp)} ago (${new Date(location.current.timestamp).toLocaleString()})`\n                                            : '--'}\n                                    </Typography>\n                                    <br />\n                                    <Typography\n                                        variant=\"caption\"\n                                        textTransform=\"capitalize\"\n                                    >\n                                        <Typography variant='caption' fontWeight=\"500\">Status:</Typography>\n                                        &nbsp;\n                                        {location.current?.sensor_status}\n                                    </Typography>\n                                </Box>\n                            </StyledLeafletPopup>\n                        </Marker>\n\n                    ))\n                }\n\n            </MapContainer>\n        </Box>\n    )\n}\n\nexport default Map;","import { Stack, Typography, Paper } from '@mui/material';\n\nimport parse from 'html-react-parser';\nimport UppercaseTitle from '../../Components/UppercaseTitle';\nimport ExpandableSection from '../Project/ExpandableSection';\n\nimport jsonData from '../../section_data.json';\nimport { replacePlainHTMLWithMuiComponents, capitalizePhrase } from '../../Utils/Utils';\n\nfunction GetInTouch() {\n  return (\n    <>\n      <UppercaseTitle text={capitalizePhrase(jsonData.getInTouch.id)} />\n      <Paper elevation={2} sx={{ p: 3, pb: 1 }}>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          {parse(jsonData.getInTouch.content, {\n            replace: replacePlainHTMLWithMuiComponents,\n          })}\n        </Typography>\n      </Paper>\n    </>\n  );\n}\n\nexport default GetInTouch;\n","import { useEffect, useContext, useState } from 'react';\n\nimport { Button, Box, Grid, Stack, Typography, Container, Card, CardContent, CardMedia, CardActionArea, Divider, Tooltip } from '@mui/material';\nimport { LinkContext } from '../../ContextProviders/LinkContext';\n\nimport UppercaseTitle from '../../Components/UppercaseTitle';\nimport FullWidthBox from '../../Components/FullWidthBox';\n\n// import AtAGlance from './AtAGlance';\nimport About from './About';\n\nimport jsonData from '../../section_data.json';\n\nimport * as Tracking from '../../Utils/Tracking';\nimport parse from 'html-react-parser';\nimport { replacePlainHTMLWithMuiComponents } from '../../Utils/Utils';\n\nimport Map from './Map';\n\nimport CurrentAQIGrid from '../../Components/CurrentAQIGrid';\nimport { EndPoints, fetchAndProcessCurrentSensorsData, getApiUrl } from '../../Utils/ApiUtils';\n\nimport LaunchIcon from '@mui/icons-material/Launch';\nimport GetInTouch from './GetInTouch';\n\nfunction Home({ themePreference, temperatureUnitPreference, title }) {\n  // Update the page's title\n  useEffect(() => {\n    document.title = title;\n  }, [title]);\n\n  // useState for home page data\n  // eslint-disable-next-line no-unused-vars\n  const [_, setCurrentPage, __, setChartsTitlesList] = useContext(LinkContext);\n\n  // set underline link to home\n  useEffect(() => {\n    setCurrentPage('home');\n    setChartsTitlesList([]);\n  }, [setCurrentPage, setChartsTitlesList]);\n\n  // Fetch public NYUAD sensors data\n  const [nyuadCurrentSensorData, setNyuadCurrentSensorData] = useState({});\n\n  useEffect(() => {\n    const url = getApiUrl({ endpoint: EndPoints.current, school_id: 'nyuad' });\n\n    fetchAndProcessCurrentSensorsData(url)\n      .then((data) => {\n        setNyuadCurrentSensorData(data)\n      })\n      .catch((error) => console.log(error));\n  }, []);\n\n  return (\n    <Box width=\"100%\">\n      <FullWidthBox>\n        <Container sx={{ pt: 3, pb: 4 }}>\n          <UppercaseTitle text=\"real-time air quality at NYUAD\" />\n          <Typography variant='body1' color='text.secondary' sx={{ mt: -2, mb: 2 }}>\n            PM2.5 (Particulate Matter Smaller Than 2.5 Micrometer)\n          </Typography>\n\n          <Grid container justifyContent=\"center\" spacing={3}>\n            <Grid item textAlign=\"center\" xs={10}>\n              <CurrentAQIGrid\n                currentSensorsData={nyuadCurrentSensorData}\n                isScreen={false}\n                temperatureUnitPreference={temperatureUnitPreference}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Stack width=\"fit-content\" alignItems=\"center\" margin=\"auto\">\n                <Button\n                  variant='contained'\n                  sx={{ width: \"fit-content\", mb: 1 }}\n                  href=\"https://citiesdashboard.com/project/air-quality\"\n                  target=\"blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <LaunchIcon sx={{ fontSize: '0.8rem' }} />&nbsp;NYUAD Dashboard (Public Access)\n                </Button>\n                <Typography variant=\"caption\" color=\"text.secondary\">\n                  See detailed analysis of historical air quality data at NYUAD\n                </Typography>\n              </Stack>\n            </Grid>\n          </Grid>\n\n\n        </Container>\n      </FullWidthBox>\n\n      <FullWidthBox sx={{ backgroundColor: 'customAlternateBackground' }}>\n        <Container sx={{ py: 3 }}>\n          <UppercaseTitle text=\"public outdoor stations\" />\n          <Typography variant=\"body1\" color=\"text.secondary\">\n            {parse(jsonData.publicOutdoorStations.content, {\n              replace: replacePlainHTMLWithMuiComponents,\n            })}\n          </Typography>\n        </Container>\n        <Map themePreference={themePreference} temperatureUnitPreference={temperatureUnitPreference} />\n\n      </FullWidthBox>\n\n      <Divider />\n\n      <FullWidthBox id={jsonData.about.id} sx={{ pt: 3, pb: 4 }}>\n        <Container>\n          <About />\n        </Container>\n      </FullWidthBox>\n\n      <Divider />\n\n      <FullWidthBox id={jsonData.getInTouch.id} sx={{ pt: 3, pb: 4 }}>\n        <Container>\n          <GetInTouch />\n        </Container>\n      </FullWidthBox>\n\n    </Box >\n  );\n}\n\nexport default Home;\n","// disable eslint for this file\n/* eslint-disable */\nimport { useState } from 'react';\nimport { styled } from '@mui/material/styles';\n\nimport MuiAccordion from '@mui/material/Accordion';\nimport MuiAccordionSummary from '@mui/material/AccordionSummary';\nimport MuiAccordionDetails from '@mui/material/AccordionDetails';\nimport { Box, Typography, Tooltip } from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\nimport * as Tracking from '../../Utils/Tracking';\n\nconst StyledAccordion = styled(MuiAccordion)(({ theme, expanded }) => ({\n  color: theme.palette.text.secondary,\n  backgroundImage: 'none',\n  backgroundColor: expanded ? theme.palette.background.default : 'transparent',\n  boxShadow: expanded ? theme.shadows : 'none',\n  transition: 'none',\n}));\n\nconst StyledAccordionSummary = styled(MuiAccordionSummary)(({ theme, expanded }) => ({\n  marginTop: expanded ? theme.spacing(3) : 0,\n  flexDirection: 'row-reverse',\n  paddingLeft: expanded ? theme.spacing(1) : 0,\n  '& .MuiTypography-root': {\n    color: theme.palette.text.primary,\n    textDecoration: 'underline',\n    transition: 'none',\n    '&:hover': {\n      color: theme.palette.primary.main,\n    },\n  },\n}));\n\nconst ExpandableSection = ({ title, content }) => {\n  const [expanded, setExpanded] = useState(undefined);\n\n  const handleAccordionChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : undefined);\n\n    Tracking.sendEventAnalytics(isExpanded ? Tracking.Events.expandSampleData : Tracking.Events.collapseSampleData);\n  };\n\n  return (\n    <Box>\n      <StyledAccordion\n        expanded={expanded === \"panel1\"}\n        onChange={handleAccordionChange(\"panel1\")}\n        transitionDuration={0}\n      >\n        <StyledAccordionSummary expanded={expanded} expandIcon={<ExpandMoreIcon />} aria-controls=\"panel1a-content\" id=\"panel1a-header\">\n          <Tooltip title={expanded ? \"Click to collapse\" : \"Click to expand\"} enterDelay={0} leaveDelay={200}>\n            <Typography component=\"a\" variant=\"body2\">\n              {title}\n            </Typography>\n          </Tooltip>\n        </StyledAccordionSummary>\n        <MuiAccordionDetails>\n          {content}\n        </MuiAccordionDetails>\n      </StyledAccordion>\n    </Box>\n  );\n}\n\nexport default ExpandableSection;"],"names":["displayLastUpdateAndSensorStatus","sensorData","isScreen","current","sensor_status","SensorStatus","variant","sx","mt","fontWeight","color","AQIdatabase","mr","timestamp","sensor","last_seen","getFormattedElapsedTimeFromNow","props","currentSensorsData","temperatureUnitPreference","container","justifyContent","verticalAlign","fontSize","fontFamily","Object","entries","map","index","numOfItems","key","item","keys","length","xs","Math","max","sm","lg","min","CustomThemes","className","location_long","location_short","lineHeight","aqi","category","getFormattedTemperature","rawTemp","temperature","currentUnit","TemperatureUnits","returnUnit","transform","rel_humidity","round","includes","location_type","calculateHeatIndex","returnSensorStatus","direction","alignItems","width","my","UppercaseTitle","text","display","textTransform","pb","capitalizePhrase","jsonData","Stack","spacing","element","Paper","elevation","p","Typography","parse","mainText","replace","replacePlainHTMLWithMuiComponents","reference","ExpandableSection","title","content","px","StyledLeafletPopup","styled","Popup","theme","MapPlaceholder","getTileUrl","tileTheme","themePreference","isMiniMap","ThemePreferences","tileAccessToken","centerCoordinate","maxBounds","POSITION_CLASSES","bottomleft","bottomright","topleft","topright","useState","mapData","setMapData","useTheme","url","getApiUrl","endpoint","EndPoints","MinimapBounds","parentMap","zoom","minimap","useMap","onClick","useCallback","e","setView","latlng","getZoom","useMapEvent","getBounds","bounds","setBounds","onChange","getCenter","handlers","useMemo","move","useEventHandlers","instance","Rectangle","pathOptions","weight","fillColor","MinimapControl","position","mapZoom","MIN_ZOOM","MapContainer","style","height","maxWidth","maxHeight","center","dragging","doubleClickZoom","scrollWheelZoom","attributionControl","zoomControl","TileLayer","accessToken","location","CircleMarker","coordinates","latitude","longitude","radius","fillOpacity","positionClass","useEffect","fetchDataFromURL","then","data","now","Date","currentTimestamp","lastSeenInHours","calculateSensorStatus","aqiObject","convertToAQI","aqiCategory","aqi_category_index","lightThemeColor","markerIcon","L","html","Box","breakpoints","down","placeholder","attribution","minZoom","maxZoom","AttributionControl","prefix","Marker","icon","Link","href","public_iqAir_station_link","target","rel","palette","primary","main","underline","public_iqAir_station_name","Launch","src","IQAir_Logo","component","gutterBottom","Thermostat","WaterDrop","toLocaleString","document","useContext","LinkContext","setCurrentPage","setChartsTitlesList","nyuadCurrentSensorData","setNyuadCurrentSensorData","school_id","fetchAndProcessCurrentSensorsData","catch","error","console","log","FullWidthBox","Container","pt","mb","Grid","textAlign","CurrentAQIGrid","margin","Button","backgroundColor","py","Divider","id","StyledAccordion","MuiAccordion","expanded","secondary","backgroundImage","background","default","boxShadow","shadows","transition","StyledAccordionSummary","MuiAccordionSummary","marginTop","flexDirection","paddingLeft","textDecoration","panel","undefined","setExpanded","event","isExpanded","Tracking","transitionDuration","expandIcon","enterDelay","leaveDelay"],"sourceRoot":""}