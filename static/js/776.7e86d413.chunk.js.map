{"version":3,"file":"static/js/776.7e86d413.chunk.js","mappings":"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","sources":["Pages/Home/About.jsx","Pages/Home/GetInTouch.jsx","Pages/Home/Home.jsx"],"sourcesContent":["import { Stack, Typography, Paper } from '@mui/material';\n\nimport parse from 'html-react-parser';\nimport UppercaseTitle from '../../Components/UppercaseTitle';\nimport ExpandableSection from '../../Components/ExpandableSection';\nimport jsonData from '../../section_data.json';\nimport { replacePlainHTMLWithMuiComponents, capitalizePhrase } from '../../Utils/Utils';\n\nfunction About() {\n  return (\n    <>\n      <UppercaseTitle text={capitalizePhrase(jsonData.about.id)} />\n      <Stack spacing={3}>\n        {jsonData.about.content.map((element, index) => (\n          <Paper key={index} elevation={2} sx={{ p: 3 }}>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              {parse(element.mainText, {\n                replace: replacePlainHTMLWithMuiComponents,\n              })}\n            </Typography>\n            {\n              element.reference && (\n                <ExpandableSection\n                  title={\"Reference\"}\n                  content={(\n                    <Typography variant=\"caption\" color=\"text.secondary\">\n                      {parse(element.reference, {\n                        replace: replacePlainHTMLWithMuiComponents,\n                      })}\n                    </Typography>\n                  )}\n                />\n              )\n            }\n          </Paper>\n        ))}\n        <Typography variant=\"caption\" color=\"text.secondary\" sx={{ px: 3 }}>\n          {parse(jsonData.disclaimer.content, {\n            replace: replacePlainHTMLWithMuiComponents,\n          })}\n        </Typography>\n      </Stack>\n    </>\n  );\n}\n\nexport default About;\n","import { Typography, Paper } from '@mui/material';\n\nimport parse from 'html-react-parser';\nimport UppercaseTitle from '../../Components/UppercaseTitle';\n\nimport jsonData from '../../section_data.json';\nimport { replacePlainHTMLWithMuiComponents, capitalizePhrase } from '../../Utils/Utils';\n\nfunction GetInTouch() {\n  return (\n    <>\n      <UppercaseTitle text={capitalizePhrase(jsonData.getInTouch.id)} />\n      <Paper elevation={2} sx={{ p: 3, pb: 1 }}>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          {parse(jsonData.getInTouch.content, {\n            replace: replacePlainHTMLWithMuiComponents,\n          })}\n        </Typography>\n      </Paper>\n    </>\n  );\n}\n\nexport default GetInTouch;\n","import { useEffect, useContext, useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\nimport { Button, Box, Grid, Typography, Container, Divider } from '@mui/material';\nimport { LinkContext } from '../../ContextProviders/LinkContext';\n\nimport UppercaseTitle from '../../Components/UppercaseTitle';\nimport FullWidthBox from '../../Components/FullWidthBox';\n\n// import AtAGlance from './AtAGlance';\nimport About from './About';\n\nimport jsonData from '../../section_data.json';\n\nimport * as Tracking from '../../Utils/Tracking';\nimport parse from 'html-react-parser';\nimport { replacePlainHTMLWithMuiComponents } from '../../Utils/Utils';\n\nimport AQImap, { TileOptions } from '../../Components/AirQuality/AQImap';\n\nimport CurrentAQIGrid from '../../Components/AirQuality/CurrentAQIGrid';\nimport { GeneralEndpoints, fetchAndProcessCurrentSensorsData, getApiUrl } from '../../Utils/ApiUtils';\n\nimport BarChartIcon from '@mui/icons-material/BarChart';\nimport GetInTouch from './GetInTouch';\nimport { UniqueRoutes } from '../../Utils/RoutesUtils';\nimport { SensorStatus } from \"../../Components/AirQuality/SensorStatus\";\nimport AQIexplanation from '../../Components/AirQuality/AQIexplanation';\n\nconst displayNyuadSensorCounts = (nyuadSensorCounts) => {\n  if (nyuadSensorCounts.active && nyuadSensorCounts.total) {\n    return (\n      <Typography variant='body2' color=\"text.secondary\">\n        <b>NYUAD sensors status: </b>{nyuadSensorCounts.active} active out of {nyuadSensorCounts.total}\n      </Typography>\n    );\n  }\n  else return null;\n}\n\nfunction Home({ themePreference, temperatureUnitPreference, title }) {\n  // Update the page's title\n  useEffect(() => {\n    document.title = title;\n  }, [title]);\n\n  const { setCurrentPage, setChartsTitlesList } = useContext(LinkContext);\n\n  // set underline link to home\n  useEffect(() => {\n    setCurrentPage(UniqueRoutes.home);\n    setChartsTitlesList([]);\n  }, [setCurrentPage, setChartsTitlesList]);\n\n  // Fetch public NYUAD sensors data and public map data\n  const [nyuadCurrentSensorData, setNyuadCurrentSensorData] = useState({});\n  const [nyuadSensorCounts, setNyuadSensorCounts] = useState({\n    active: null,\n    total: null\n  });\n  const [rawMapData, setRawMapData] = useState();\n\n  useEffect(() => {\n    const nyuadUrl = getApiUrl({ endpoint: GeneralEndpoints.current, school_id: 'nyuad' });\n    fetchAndProcessCurrentSensorsData(nyuadUrl)\n      .then((data) => {\n        // Only display 3 sensors in the homepage\n        const selectedSensorData = data.slice(0, 3);\n        setNyuadCurrentSensorData(selectedSensorData);\n\n        // Count the number of active sensors at NYUAD to display it\n        const activeSensorCount = data.reduce((count, obj) => {\n          return obj?.current?.sensor_status === SensorStatus.active ? count + 1 : count;\n        }, 0);\n        setNyuadSensorCounts({\n          active: activeSensorCount,\n          total: data.length\n        });\n      })\n      .catch((error) => console.log(error));\n\n    const mapUrl = getApiUrl({ endpoint: GeneralEndpoints.map });\n    fetchAndProcessCurrentSensorsData(mapUrl)\n      .then((data) => {\n        setRawMapData(data)\n      })\n      .catch((error) => console.log(error));\n  }, []);\n\n\n  return (\n    <Box width=\"100%\">\n      <FullWidthBox>\n        <Container sx={{ pt: 3, pb: 4 }}>\n          <UppercaseTitle text=\"real-time air quality at NYUAD\" />\n          <Typography variant='body1' color='text.secondary' sx={{ mt: -2, mb: 2 }}>\n            PM2.5 (Particulate Matter Smaller Than 2.5 Micrometer)\n          </Typography>\n\n          <Grid container spacing={2} justifyContent=\"center\" textAlign=\"center\">\n            <Grid item xs={12} lg={10}>\n              <CurrentAQIGrid\n                currentSensorsData={nyuadCurrentSensorData}\n                isScreen={false}\n                temperatureUnitPreference={temperatureUnitPreference}\n                firstSensorOwnLine={true}\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              {displayNyuadSensorCounts(nyuadSensorCounts)}\n            </Grid>\n\n            <Grid item container xs={12}>\n              <Grid item xs={12}>\n                <Button\n                  component={RouterLink}\n                  variant='contained'\n                  sx={{ width: \"fit-content\", mb: 1 }}\n                  to={UniqueRoutes.nyuad}\n                  onClick={() => {\n                    Tracking.sendEventAnalytics(\n                      Tracking.Events.internalNavigation,\n                      {\n                        destination_id: UniqueRoutes.nyuad,\n                        destination_school_id: \"nyuad\",\n                        origin_id: UniqueRoutes.home\n                      }\n                    );\n                  }}\n                >\n                  <BarChartIcon sx={{ fontSize: '0.8rem' }} />&nbsp;NYUAD Dashboard (Public Access)\n                </Button>\n              </Grid>\n              <Grid item xs={12}>\n                <Typography variant=\"caption\" color=\"text.secondary\">\n                  See detailed analysis of historical air quality data at NYUAD\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n\n          <AQIexplanation />\n\n        </Container>\n      </FullWidthBox>\n\n      <FullWidthBox sx={{ backgroundColor: 'customAlternateBackground' }}>\n        <Container sx={{ py: 3 }}>\n          <UppercaseTitle text=\"public outdoor stations\" />\n          <Typography variant=\"body1\" color=\"text.secondary\">\n            {parse(jsonData.publicOutdoorStations.content, {\n              replace: replacePlainHTMLWithMuiComponents,\n            })}\n          </Typography>\n        </Container>\n        <AQImap\n          tileOption={TileOptions.default}\n          themePreference={themePreference}\n          temperatureUnitPreference={temperatureUnitPreference}\n          centerCoordinates={[24.46, 54.52]}\n          maxBounds={[\n            [22.608292, 51.105185],\n            [26.407575, 56.456571],\n          ]}\n          rawMapData={rawMapData}\n          ariaLabel={\"Map of CITIESair public outdoor air quality stations in Abu Dhabi\"}\n\n        />\n\n      </FullWidthBox>\n\n      <Divider />\n\n      <FullWidthBox id={jsonData.about.id} sx={{ pt: 3, pb: 4 }}>\n        <Container>\n          <About />\n        </Container>\n      </FullWidthBox>\n\n      <Divider />\n\n      <FullWidthBox id={jsonData.getInTouch.id} sx={{ pt: 3, pb: 4 }}>\n        <Container>\n          <GetInTouch />\n        </Container>\n      </FullWidthBox>\n\n    </Box >\n  );\n}\n\nexport default Home;\n"],"names":["_jsxs","_Fragment","children","_jsx","UppercaseTitle","text","capitalizePhrase","jsonData","Stack","spacing","map","element","index","Paper","elevation","sx","p","Typography","variant","color","parse","mainText","replace","replacePlainHTMLWithMuiComponents","reference","ExpandableSection","title","content","px","pb","displayNyuadSensorCounts","nyuadSensorCounts","active","total","_ref","themePreference","temperatureUnitPreference","useEffect","document","setCurrentPage","setChartsTitlesList","useContext","LinkContext","UniqueRoutes","home","nyuadCurrentSensorData","setNyuadCurrentSensorData","useState","setNyuadSensorCounts","rawMapData","setRawMapData","nyuadUrl","getApiUrl","endpoint","GeneralEndpoints","current","school_id","fetchAndProcessCurrentSensorsData","then","data","selectedSensorData","slice","activeSensorCount","reduce","count","obj","_obj$current","sensor_status","SensorStatus","length","catch","error","console","log","mapUrl","Box","width","FullWidthBox","Container","pt","mt","mb","Grid","container","justifyContent","textAlign","item","xs","lg","CurrentAQIGrid","currentSensorsData","isScreen","firstSensorOwnLine","Button","component","RouterLink","to","nyuad","onClick","Tracking","internalNavigation","destination_id","destination_school_id","origin_id","BarChartIcon","fontSize","AQIexplanation","backgroundColor","py","AQImap","tileOption","TileOptions","default","centerCoordinates","maxBounds","ariaLabel","Divider","id","About","GetInTouch"],"sourceRoot":""}