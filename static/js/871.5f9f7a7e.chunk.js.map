{"version":3,"file":"static/js/871.5f9f7a7e.chunk.js","mappings":"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","sources":["Components/AirQuality/AQIexplanation.jsx","Components/AirQuality/AirQualityIndexTable.jsx","Components/ExpandableSection.jsx","Pages/Home/About.jsx","Pages/Home/GetInTouch.jsx","Pages/Home/Home.jsx"],"sourcesContent":["import { useContext } from 'react';\r\nimport { Typography } from '@mui/material';\r\nimport parse from 'html-react-parser';\r\nimport { replacePlainHTMLWithMuiComponents } from '../../Utils/Utils';\r\nimport AirQualityIndexTable from './AirQualityIndexTable';\r\nimport ExpandableSection from '../ExpandableSection';\r\nimport { PreferenceContext } from '../../ContextProviders/PreferenceContext';\r\n\r\nconst Explanation = {\r\n  title: \"Air Quality Index Explanation for Particulate Matter (PM2.5 & PM10)\",\r\n  subtitle: \"CITIESair uses the <a href='https://www.airnow.gov/aqi/aqi-basics/'>Air Quality Index (AQI)</a> developed by the United States Environmental Protection Agency (EPA) to communicate different levels of Particulate Matter (PM). PM are microscopic particles small enough to be suspended in the air for a long period of time. Depends on the size, PM can be categorized into: PM10 (coarse particles <10µm) and PM2.5 (very fine particles <2.5µm). PM2.5 is smaller and can penetrate deeper and lodge into the lungs and internal organs, causing respiratory and cardiovascular diseases. PM2.5's origin is skewed towards more anthropogenic emissions, while PM10 are more likely to come from natural dust in the UAE.<br/><br/>To calculate AQI from raw concentrations of PM2.5 and PM10 concentration (µg/m³), different breakpoints and piecewise linear function are utilized (read more <a href='https://en.wikipedia.org/wiki/Air_quality_index#United_States'>here</a>). Higher AQI values correspond to poorer air quality and greater heath risks to humans.<br><br>The US EPA sets thresholds for PM2.5 concentration, recently updated in February 2024: <sup>[1]</sup><ul><li><b>Annual average</b>: 9.0 µg/m³, corresponding to US AQI <b>50</b></li><li><b>24-hour average</b>: 35.0 µg/m³, corresponding to US AQI <b>100</b></li></ul>In 2021, the World's Heath Organization (WHO) proposed a new guideline for PM2.5<sup>[2]</sup> with stricter thresholds than those of the US EPA:<ul><li><b>Annual average</b>: 5.0 µg/m³, corresponding to US AQI <b>21</b></li><li><b>24-hour average</b>: 15.0 µg/m³, corresponding to US AQI <b>56</b></li></ul>\",\r\n  reference: \"[1] \\\"National Ambient Air Quality Standards (NAAQS) for PM.\\\" EPA, Environmental Protection Agency, https://www.epa.gov/pm-pollution/national-ambient-air-quality-standards-naaqs-pm.<br>[2] World Health Organization. \\\"WHO global air quality guidelines: particulate matter (PM2. 5 and PM10), ozone, nitrogen dioxide, sulfur dioxide and carbon monoxide: executive summary.\\\" (2021).\",\r\n}\r\n\r\nconst AQIexplanation = () => {\r\n  const { themePreference } = useContext(PreferenceContext);\r\n\r\n  return (\r\n    <ExpandableSection\r\n      title={Explanation.title}\r\n      content={(\r\n        <>\r\n          <AirQualityIndexTable themePreference={themePreference} />\r\n          <Typography\r\n            component=\"div\"\r\n            variant=\"body1\"\r\n            color=\"text.secondary\"\r\n            sx={{ mt: 2 }}\r\n          >\r\n            {parse(Explanation.subtitle, {\r\n              replace: replacePlainHTMLWithMuiComponents,\r\n            })}\r\n          </Typography>\r\n          <ExpandableSection\r\n            title={\"Reference\"}\r\n            content={(\r\n              <Typography variant=\"caption\" color=\"text.secondary\">\r\n                {parse(Explanation.reference, {\r\n                  replace: replacePlainHTMLWithMuiComponents,\r\n                })}\r\n              </Typography>\r\n            )}\r\n          />\r\n        </>\r\n      )}\r\n    />\r\n  )\r\n};\r\n\r\nexport default AQIexplanation;","import { Box, Table, TableBody, TableCell, TableHead, TableRow, styled } from '@mui/material';\r\nimport parse from 'html-react-parser';\r\nimport { replacePlainHTMLWithMuiComponents } from '../../Utils/Utils';\r\nimport AQIdatabase from '../../Utils/AirQuality/AirQualityIndexHelper';\r\nimport { useContext } from 'react';\r\nimport { PreferenceContext } from '../../ContextProviders/PreferenceContext';\r\n\r\nexport const StyledTable = styled(Table)(({ theme, isTiny }) => ({\r\n  minWidth: isTiny || 700,\r\n  '& th, td': {\r\n    fontSize: isTiny ? '0.625rem' : '0.6875rem',\r\n    color: theme.palette.text.secondary,\r\n    [theme.breakpoints.down('sm')]: {\r\n      fontSize: isTiny ? '0.5rem' : '0.6875rem',\r\n    },\r\n  },\r\n  '& th': {\r\n    fontWeight: 500,\r\n    color: theme.palette.text.primary,\r\n    lineHeight: '1rem'\r\n  }\r\n}));\r\n\r\nfunction AirQualityIndexTable(props) {\r\n  const { themePreference } = useContext(PreferenceContext);\r\n\r\n  const { isTiny, hideAQIDescription } = props;\r\n\r\n  const returnFormattedBreakpoints = (low, high) => {\r\n    if (high === Infinity) return `${low}+`;\r\n    else return `${low} - ${high}`;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Box overflow=\"auto\">\r\n        <StyledTable size=\"small\" isTiny={isTiny}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell sx={{ pr: 0 }}>\r\n                <Box sx={{ width: '1em', height: '1em' }} />\r\n              </TableCell>\r\n              <TableCell sx={{ pl: 1 }}>\r\n                Category\r\n              </TableCell>\r\n              <TableCell align=\"right\">US AQI</TableCell>\r\n              <TableCell align=\"right\">\r\n                PM2.5\r\n                (µg/m\r\n                <sup>3</sup>\r\n                )\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                PM10\r\n                (µg/m\r\n                <sup>3</sup>\r\n                )\r\n              </TableCell>\r\n              {!hideAQIDescription && <TableCell align=\"left\">Description</TableCell>}\r\n              {!hideAQIDescription && <TableCell align=\"left\">CITIESair&apos; Suggested Actions</TableCell>}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {AQIdatabase.map((element, index) => (\r\n              <TableRow\r\n                key={index}\r\n                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n              >\r\n                <TableCell sx={{ pr: 0 }}>\r\n                  <Box sx={{ width: '1em', height: '1em', backgroundColor: element.color[themePreference] }} />\r\n                </TableCell>\r\n                <TableCell sx={{ pl: 1 }}>\r\n                  {element.category}\r\n                </TableCell>\r\n                <TableCell align=\"right\" sx={{ whiteSpace: \"nowrap\" }}>\r\n                  {returnFormattedBreakpoints(element.aqiUS.low, element.aqiUS.high)}\r\n                </TableCell>\r\n                <TableCell align=\"right\" sx={{ whiteSpace: \"nowrap\" }}>\r\n                  {returnFormattedBreakpoints(element.rawPM2_5.low, element.rawPM2_5.high)}\r\n                </TableCell>\r\n                <TableCell align=\"right\" sx={{ whiteSpace: \"nowrap\" }}>\r\n                  {returnFormattedBreakpoints(element.rawPM10.low, element.rawPM10.high)}\r\n                </TableCell>\r\n                {!hideAQIDescription && <TableCell align=\"left\">{element.description}</TableCell>}\r\n                {!hideAQIDescription\r\n                  && (\r\n                    <TableCell align=\"left\">\r\n                      {\r\n                        parse(element.healthSuggestions.outdoors, {\r\n                          replace: replacePlainHTMLWithMuiComponents,\r\n                        })\r\n                      }\r\n                    </TableCell>\r\n                  )}\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </StyledTable>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AirQualityIndexTable;\r\n","// disable eslint for this file\r\n/* eslint-disable */\r\nimport { useState } from 'react';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nimport MuiAccordion from '@mui/material/Accordion';\r\nimport MuiAccordionSummary from '@mui/material/AccordionSummary';\r\nimport MuiAccordionDetails from '@mui/material/AccordionDetails';\r\nimport { Box, Typography, Tooltip } from '@mui/material';\r\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport * as Tracking from '../Utils/Tracking';\r\n\r\nconst StyledAccordion = styled(MuiAccordion)(({ theme, expanded }) => ({\r\n  color: theme.palette.text.secondary,\r\n  backgroundImage: 'none',\r\n  backgroundColor: expanded ? theme.palette.background.default : 'transparent',\r\n  boxShadow: expanded ? theme.shadows : 'none',\r\n  transition: 'none',\r\n}));\r\n\r\nconst StyledAccordionSummary = styled(MuiAccordionSummary)(({ theme, expanded }) => ({\r\n  marginTop: expanded ? theme.spacing(2) : 0,\r\n  flexDirection: 'row-reverse',\r\n  paddingLeft: expanded ? theme.spacing(1) : 0,\r\n  '& .MuiTypography-root': {\r\n    color: theme.palette.text.primary,\r\n    textDecoration: 'underline',\r\n    transition: 'none',\r\n    '&:hover': {\r\n      color: theme.palette.primary.main,\r\n    },\r\n  },\r\n  '& .MuiAccordionSummary-content.Mui-expanded': {\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst TooltipText = {\r\n  expand: \"Click to expand section\",\r\n  collapse: \"Click to collapse section\"\r\n}\r\n\r\nconst ExpandableSection = ({ title, content }) => {\r\n  const [expanded, setExpanded] = useState(undefined);\r\n\r\n  const handleAccordionChange = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : undefined);\r\n    Tracking.sendEventAnalytics(\r\n      isExpanded ? Tracking.Events.expandSection : Tracking.Events.collapseSection,\r\n      {\r\n        section: title\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <StyledAccordion\r\n        expanded={expanded === \"panel1\"}\r\n        onChange={handleAccordionChange(\"panel1\")}\r\n        transitionDuration={0}\r\n      >\r\n        <StyledAccordionSummary expanded={expanded} expandIcon={<ArrowDropDownIcon />} aria-controls=\"panel1a-content\" id=\"panel1a-header\">\r\n          <Tooltip title={expanded ? TooltipText.collapse : TooltipText.expand} enterDelay={0} leaveDelay={200}>\r\n            <Typography component=\"a\" variant=\"body1\">\r\n              {title}\r\n              <InfoIcon sx={{ fontSize: \"1rem\", marginLeft: \"0.25rem\" }} />\r\n            </Typography>\r\n          </Tooltip>\r\n        </StyledAccordionSummary>\r\n        <MuiAccordionDetails>\r\n          {content}\r\n        </MuiAccordionDetails>\r\n      </StyledAccordion>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ExpandableSection;","import { Stack, Typography, Paper } from '@mui/material';\r\n\r\nimport parse from 'html-react-parser';\r\nimport UppercaseTitle from '../../Components/UppercaseTitle';\r\nimport ExpandableSection from '../../Components/ExpandableSection';\r\nimport jsonData from '../../section_data.json';\r\nimport { replacePlainHTMLWithMuiComponents, capitalizePhrase } from '../../Utils/Utils';\r\n\r\nfunction About() {\r\n  return (\r\n    <>\r\n      <UppercaseTitle text={capitalizePhrase(jsonData.about.id)} />\r\n      <Stack spacing={3}>\r\n        {jsonData.about.content.map((element, index) => (\r\n          <Paper key={index} elevation={2} sx={{ p: 3 }}>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              {parse(element.mainText, {\r\n                replace: replacePlainHTMLWithMuiComponents,\r\n              })}\r\n            </Typography>\r\n            {\r\n              element.reference && (\r\n                <ExpandableSection\r\n                  title={\"Reference\"}\r\n                  content={(\r\n                    <Typography variant=\"caption\" color=\"text.secondary\">\r\n                      {parse(element.reference, {\r\n                        replace: replacePlainHTMLWithMuiComponents,\r\n                      })}\r\n                    </Typography>\r\n                  )}\r\n                />\r\n              )\r\n            }\r\n          </Paper>\r\n        ))}\r\n        <Typography variant=\"caption\" color=\"text.secondary\" sx={{ px: 3 }}>\r\n          {parse(jsonData.disclaimer.content, {\r\n            replace: replacePlainHTMLWithMuiComponents,\r\n          })}\r\n        </Typography>\r\n      </Stack>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import { Typography, Paper } from '@mui/material';\r\n\r\nimport parse from 'html-react-parser';\r\nimport UppercaseTitle from '../../Components/UppercaseTitle';\r\n\r\nimport jsonData from '../../section_data.json';\r\nimport { replacePlainHTMLWithMuiComponents, capitalizePhrase } from '../../Utils/Utils';\r\n\r\nfunction GetInTouch() {\r\n  return (\r\n    <>\r\n      <UppercaseTitle text={capitalizePhrase(jsonData.getInTouch.id)} />\r\n      <Paper elevation={2} sx={{ p: 3, pb: 1 }}>\r\n        <Typography variant=\"body2\" color=\"text.secondary\">\r\n          {parse(jsonData.getInTouch.content, {\r\n            replace: replacePlainHTMLWithMuiComponents,\r\n          })}\r\n        </Typography>\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default GetInTouch;\r\n","import { useEffect, useContext, useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nimport { Button, Box, Grid, Typography, Container, Divider } from '@mui/material';\r\nimport { LinkContext } from '../../ContextProviders/LinkContext';\r\n\r\nimport UppercaseTitle from '../../Components/UppercaseTitle';\r\nimport FullWidthBox from '../../Components/FullWidthBox';\r\n\r\n// import AtAGlance from './AtAGlance';\r\nimport About from './About';\r\n\r\nimport jsonData from '../../section_data.json';\r\n\r\nimport * as Tracking from '../../Utils/Tracking';\r\nimport parse from 'html-react-parser';\r\nimport { replacePlainHTMLWithMuiComponents } from '../../Utils/Utils';\r\n\r\nimport AQImap, { TileOptions } from '../../Components/AirQuality/AQImap';\r\n\r\nimport CurrentAQIGrid from '../../Components/AirQuality/CurrentAQIGrid';\r\nimport { GeneralEndpoints, fetchAndProcessCurrentSensorsData, getApiUrl } from '../../Utils/ApiUtils';\r\n\r\nimport BarChartIcon from '@mui/icons-material/BarChart';\r\nimport GetInTouch from './GetInTouch';\r\nimport { UniqueRoutes } from '../../Utils/RoutesUtils';\r\nimport { SensorStatus } from \"../../Components/AirQuality/SensorStatus\";\r\nimport AQIexplanation from '../../Components/AirQuality/AQIexplanation';\r\n\r\nconst displayNyuadSensorCounts = (nyuadSensorCounts) => {\r\n  if (nyuadSensorCounts.active && nyuadSensorCounts.total) {\r\n    return (\r\n      <Typography variant='body2' color=\"text.secondary\">\r\n        <b>NYUAD sensors status: </b>{nyuadSensorCounts.active} active out of {nyuadSensorCounts.total}\r\n      </Typography>\r\n    );\r\n  }\r\n  else return null;\r\n}\r\n\r\nfunction Home({ themePreference, temperatureUnitPreference, title }) {\r\n  // Update the page's title\r\n  useEffect(() => {\r\n    document.title = title;\r\n  }, [title]);\r\n\r\n  const { setCurrentPage, setChartsTitlesList } = useContext(LinkContext);\r\n\r\n  // set underline link to home\r\n  useEffect(() => {\r\n    setCurrentPage(UniqueRoutes.home);\r\n    setChartsTitlesList([]);\r\n  }, [setCurrentPage, setChartsTitlesList]);\r\n\r\n  // Fetch public NYUAD sensors data and public map data\r\n  const [nyuadCurrentSensorData, setNyuadCurrentSensorData] = useState({});\r\n  const [nyuadSensorCounts, setNyuadSensorCounts] = useState({\r\n    active: null,\r\n    total: null\r\n  });\r\n  const [rawMapData, setRawMapData] = useState();\r\n\r\n  useEffect(() => {\r\n    const nyuadUrl = getApiUrl({ endpoint: GeneralEndpoints.current, school_id: 'nyuad' });\r\n    fetchAndProcessCurrentSensorsData(nyuadUrl)\r\n      .then((data) => {\r\n        // Only display 3 sensors in the homepage\r\n        const selectedSensorData = data.slice(0, 3);\r\n        setNyuadCurrentSensorData(selectedSensorData);\r\n\r\n        // Count the number of active sensors at NYUAD to display it\r\n        const activeSensorCount = data.reduce((count, obj) => {\r\n          return obj?.current?.sensor_status === SensorStatus.active ? count + 1 : count;\r\n        }, 0);\r\n        setNyuadSensorCounts({\r\n          active: activeSensorCount,\r\n          total: data.length\r\n        });\r\n      })\r\n      .catch((error) => console.log(error));\r\n\r\n    const mapUrl = getApiUrl({ endpoint: GeneralEndpoints.map });\r\n    fetchAndProcessCurrentSensorsData(mapUrl)\r\n      .then((data) => {\r\n        setRawMapData(data)\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <Box width=\"100%\">\r\n      <FullWidthBox>\r\n        <Container sx={{ pt: 3, pb: 4 }}>\r\n          <UppercaseTitle text=\"real-time air quality at NYUAD\" />\r\n          <Typography variant='body1' color='text.secondary' sx={{ mt: -2, mb: 2 }}>\r\n            PM2.5 (Particulate Matter Smaller Than 2.5 Micrometer)\r\n          </Typography>\r\n\r\n          <Grid container spacing={2} justifyContent=\"center\" textAlign=\"center\">\r\n            <Grid item xs={12} lg={10}>\r\n              <CurrentAQIGrid\r\n                currentSensorsData={nyuadCurrentSensorData}\r\n                isScreen={false}\r\n                temperatureUnitPreference={temperatureUnitPreference}\r\n                firstSensorOwnLine={true}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              {displayNyuadSensorCounts(nyuadSensorCounts)}\r\n            </Grid>\r\n\r\n            <Grid item container xs={12}>\r\n              <Grid item xs={12}>\r\n                <Button\r\n                  component={RouterLink}\r\n                  variant='contained'\r\n                  sx={{ width: \"fit-content\", mb: 1 }}\r\n                  to={UniqueRoutes.nyuad}\r\n                  onClick={() => {\r\n                    Tracking.sendEventAnalytics(\r\n                      Tracking.Events.internalNavigation,\r\n                      {\r\n                        destination_id: UniqueRoutes.nyuad,\r\n                        destination_school_id: \"nyuad\",\r\n                        origin_id: UniqueRoutes.home\r\n                      }\r\n                    );\r\n                  }}\r\n                >\r\n                  <BarChartIcon sx={{ fontSize: '0.8rem' }} />&nbsp;NYUAD Dashboard (Public Access)\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"caption\" color=\"text.secondary\">\r\n                  See detailed analysis of historical air quality data at NYUAD\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <AQIexplanation />\r\n\r\n        </Container>\r\n      </FullWidthBox>\r\n\r\n      <FullWidthBox sx={{ backgroundColor: 'customAlternateBackground' }}>\r\n        <Container sx={{ py: 3 }}>\r\n          <UppercaseTitle text=\"public outdoor stations\" />\r\n          <Typography variant=\"body1\" color=\"text.secondary\">\r\n            {parse(jsonData.publicOutdoorStations.content, {\r\n              replace: replacePlainHTMLWithMuiComponents,\r\n            })}\r\n          </Typography>\r\n        </Container>\r\n        <AQImap\r\n          tileOption={TileOptions.default}\r\n          themePreference={themePreference}\r\n          temperatureUnitPreference={temperatureUnitPreference}\r\n          centerCoordinates={[24.46, 54.52]}\r\n          maxBounds={[\r\n            [22.608292, 51.105185],\r\n            [26.407575, 56.456571],\r\n          ]}\r\n          rawMapData={rawMapData}\r\n          ariaLabel={\"Map of CITIESair public outdoor air quality stations in Abu Dhabi\"}\r\n\r\n        />\r\n\r\n      </FullWidthBox>\r\n\r\n      <Divider />\r\n\r\n      <FullWidthBox id={jsonData.about.id} sx={{ pt: 3, pb: 4 }}>\r\n        <Container>\r\n          <About />\r\n        </Container>\r\n      </FullWidthBox>\r\n\r\n      <Divider />\r\n\r\n      <FullWidthBox id={jsonData.getInTouch.id} sx={{ pt: 3, pb: 4 }}>\r\n        <Container>\r\n          <GetInTouch />\r\n        </Container>\r\n      </FullWidthBox>\r\n\r\n    </Box >\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"names":["Explanation","AQIexplanation","themePreference","useContext","PreferenceContext","_jsx","ExpandableSection","title","content","_jsxs","_Fragment","children","AirQualityIndexTable","Typography","component","variant","color","sx","mt","parse","replace","replacePlainHTMLWithMuiComponents","StyledTable","styled","Table","_ref","theme","isTiny","minWidth","fontSize","palette","text","secondary","breakpoints","down","fontWeight","primary","lineHeight","props","hideAQIDescription","returnFormattedBreakpoints","low","high","Infinity","concat","Box","overflow","size","TableHead","TableRow","TableCell","pr","width","height","pl","align","TableBody","AQIdatabase","map","element","index","border","backgroundColor","category","whiteSpace","aqiUS","rawPM2_5","rawPM10","description","healthSuggestions","outdoors","StyledAccordion","MuiAccordion","expanded","backgroundImage","background","default","boxShadow","shadows","transition","StyledAccordionSummary","MuiAccordionSummary","_ref2","marginTop","spacing","flexDirection","paddingLeft","textDecoration","main","marginBottom","TooltipText","_ref3","setExpanded","useState","undefined","onChange","panel","event","isExpanded","Tracking","expandSection","collapseSection","section","transitionDuration","expandIcon","ArrowDropDownIcon","id","Tooltip","enterDelay","leaveDelay","InfoIcon","marginLeft","MuiAccordionDetails","UppercaseTitle","capitalizePhrase","jsonData","Stack","Paper","elevation","p","mainText","reference","px","pb","displayNyuadSensorCounts","nyuadSensorCounts","active","total","temperatureUnitPreference","useEffect","document","setCurrentPage","setChartsTitlesList","LinkContext","UniqueRoutes","home","nyuadCurrentSensorData","setNyuadCurrentSensorData","setNyuadSensorCounts","rawMapData","setRawMapData","nyuadUrl","getApiUrl","endpoint","GeneralEndpoints","current","school_id","fetchAndProcessCurrentSensorsData","then","data","selectedSensorData","slice","activeSensorCount","reduce","count","obj","_obj$current","sensor_status","SensorStatus","length","catch","error","console","log","mapUrl","FullWidthBox","Container","pt","mb","Grid","container","justifyContent","textAlign","item","xs","lg","CurrentAQIGrid","currentSensorsData","isScreen","firstSensorOwnLine","Button","RouterLink","to","nyuad","onClick","internalNavigation","destination_id","destination_school_id","origin_id","BarChartIcon","py","AQImap","tileOption","TileOptions","centerCoordinates","maxBounds","ariaLabel","Divider","About","GetInTouch"],"sourceRoot":""}