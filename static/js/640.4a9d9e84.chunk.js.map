{"version":3,"file":"static/js/640.4a9d9e84.chunk.js","mappings":"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","sources":["Components/CurrentAQIGrid.jsx","Components/UppercaseTitle.jsx","Graphs/Subchart/SeriesSelector.jsx","Graphs/GoogleChartHelper.jsx","Graphs/Subchart/GoogleChartStyleWrapper.jsx","Graphs/Subchart/SubChart.jsx","Graphs/ChartComponent.jsx","Graphs/ChartSubstituteComponents/AirQualityIndexTable.jsx","Graphs/ChartSubstituteComponents/ChartSubstituteComponentLoader.jsx","Components/AirQualityHelper.jsx","Components/DatasetDownload/DatasetCalendar.jsx","Components/DatasetDownload/DatasetDownloadDialog.jsx","Components/ScreenDialog.jsx","Pages/Dashboard/SchoolSelector.jsx","Pages/Project/ExpandableSection.jsx","Utils/AirQualityExplanation.jsx","Pages/Project/Project.jsx","Pages/Dashboard/Dashboard.jsx","Pages/Screen/ScreenUtils.jsx","Utils/AirQualityIndexCalculator.jsx","Utils/AirQualityIndexHelper.jsx","Utils/ApiUtils.jsx","Graphs/ChartSubstituteComponents|lazy|/^/.//.*$/|groupOptions: {}|namespace object"],"sourcesContent":["// disable eslint for this file\n/* eslint-disable */\nimport { useState, useEffect } from 'react';\n\nimport { Box, Grid, Typography } from '@mui/material';\nimport ThermostatIcon from '@mui/icons-material/Thermostat';\nimport WaterDropIcon from '@mui/icons-material/WaterDrop';\nimport ErrorIcon from '@mui/icons-material/Error';\n\nimport { returnSensorStatus, SensorStatus, getFormattedElapsedTimeFromNow } from '../Pages/Screen/ScreenUtils';\nimport { TemperatureUnits, getFormattedTemperature, calculateHeatIndex } from \"../Pages/Screen/TemperatureUtils\";\n\nimport AQIdatabase from '../Utils/AirQualityIndexHelper';\n\nimport CustomThemes from '../Themes/CustomThemes';\n\nconst CurrentAQIGrid = (props) => {\n  const { currentSensorsData, temperatureUnitPreference, isScreen = true, orderOfItems } = props;\n\n  const getGridItemSize = (numOfItems) => {\n    return {\n      xs: Math.max(12 / numOfItems, 6),\n      sm: Math.max(12 / numOfItems, 4),\n      lg: isScreen ? (12 / numOfItems) : Math.min(5, Math.max(12 / numOfItems, 3))\n    }\n  }\n\n  if (!currentSensorsData) return null;\n\n  return (\n    <Grid\n      container\n      justifyContent=\"center\"\n      sx={{\n        '& .MuiSvgIcon-root': {\n          verticalAlign: 'sub',\n          fontSize: isScreen ? null : '1rem'\n        },\n        '& *': {\n          fontWeight: '500'\n        },\n        '& .condensedFont': {\n          fontFamily: 'IBM Plex Sans Condensed, sans-serif !important',\n          '& *': {\n            fontFamily: 'IBM Plex Sans Condensed, sans-serif !important'\n          }\n        }\n      }}\n    >\n      {\n        Object.entries(currentSensorsData).map(([key, sensorData], index) => (\n          <Grid\n            item\n            order={orderOfItems && orderOfItems[index]}\n            key={key}\n            {...getGridItemSize(Object.keys(currentSensorsData).length)}\n            sx={\n              sensorData.current?.sensor_status !== SensorStatus.active &&\n              { '& *': { color: `${CustomThemes.universal.palette.inactiveSensor}` } }\n            }\n          >\n            <Box sx={{ '& *': { color: sensorData.current?.color } }}>\n              <Typography variant={isScreen ? \"h4\" : 'h5'} fontWeight=\"500\" className='condensedFont'>\n                {sensorData.sensor?.location_long || sensorData.sensor?.location_short || 'No Location Name'}\n              </Typography>\n              <Typography variant={isScreen ? \"h1\" : 'h2'} fontWeight=\"500\" lineHeight={isScreen ? 0.8 : 0.9}>\n                {sensorData.current?.aqi || '--'}\n              </Typography>\n              <Typography variant={isScreen ? \"h4\" : 'h5'} fontWeight=\"500\" className='condensedFont'>\n                {sensorData.current?.category || '--'}\n              </Typography>\n            </Box>\n\n            <Box sx={{\n              '& *': {\n                color:\n                  isScreen ? (\n                    sensorData.current?.sensor_status === SensorStatus.active ?\n                      '#c8dcff' : CustomThemes.universal.palette.inactiveSensor\n                  )\n                    : 'text.secondary'\n              }, mt: isScreen ? 2 : 1\n            }} className='condensedFont'>\n              <Typography variant={isScreen ? \"h6\" : 'body1'}>\n                <ThermostatIcon />\n                {\n                  getFormattedTemperature({\n                    rawTemp: sensorData.current?.temperature,\n                    currentUnit: TemperatureUnits.celsius,\n                    returnUnit: temperatureUnitPreference\n                  })\n                }\n                &nbsp;&nbsp;-&nbsp;\n                <WaterDropIcon sx={{ transform: 'scaleX(0.9)' }} />\n                {sensorData.current?.rel_humidity ? Math.round(sensorData.current?.rel_humidity) : \"--\"}%\n              </Typography>\n              {\n                // Show heat index for selected location types\n                ['outdoors', 'indoors_gym'].includes(sensorData.sensor?.location_type) &&\n                <Typography variant={isScreen ? \"body1\" : 'body2'} sx={{ fontWeight: '300 !important' }}>\n                  {calculateHeatIndex({\n                    rawTemp: sensorData.current?.temperature,\n                    currentUnit: TemperatureUnits.celsius,\n                    rel_humidity: sensorData.current?.rel_humidity,\n                    returnUnit: temperatureUnitPreference\n                  })}\n                </Typography>\n              }\n              {\n                displayLastUpdateAndSensorStatus({ sensorData, isScreen })\n              }\n            </Box>\n\n            {\n              // Display outdoor-indoor comparison if both sensors are active\n              sensorData.sensor_status !== SensorStatus.active &&\n              <Typography variant={isScreen ? \"h6\" : 'body1'} className=\"condensedFont\">\n                {returnSensorStatus(sensorData)}\n              </Typography>\n            }\n          </Grid>\n        ))\n      }\n    </Grid>\n  );\n};\n\nconst displayLastUpdateAndSensorStatus = ({ sensorData, isScreen }) => {\n  console.log(getFormattedElapsedTimeFromNow(sensorData.current?.timestamp || sensorData.sensor?.last_seen))\n  if (isScreen && sensorData.current.sensor_status === SensorStatus.active) return null;\n  else\n    return (\n      <Typography\n        variant={isScreen ? 'h6' : 'caption'}\n        sx={{\n          mt: 0,\n          fontWeight: isScreen && '500 !important'\n        }}\n      >\n        {\n          sensorData.current?.sensor_status !== SensorStatus.active\n          &&\n          <>\n            <ErrorIcon\n              sx={{\n                '& *': {\n                  color: `${AQIdatabase[3].lightThemeColor} !important`\n                },\n                mr: 0.5\n              }} />\n            Offline.&nbsp;\n          </>\n        }\n        Last update:\n        {(sensorData.current?.timestamp || sensorData.sensor?.last_seen)\n          ? ` ${getFormattedElapsedTimeFromNow(sensorData.current?.timestamp || sensorData.sensor?.last_seen)} ago`\n          : '--'}\n      </Typography>\n    )\n}\n\nexport default CurrentAQIGrid;\n","import Typography from '@mui/material/Typography';\n\nexport default function UppercaseTitle({ text }) {\n  return (\n    <Typography\n      variant=\"h4\"\n      color=\"text.primary\"\n      sx={{\n        fontWeight: 'medium',\n        display: 'inline-block',\n        textTransform: 'uppercase',\n        pb: 3,\n        lineHeight: 1\n      }}\n    >\n      {text}\n    </Typography>\n  );\n}\n","/* eslint-disable */\nimport { useState, useEffect } from 'react';\nimport { Stack, Grid, MenuItem, FormControl, Select, Chip, Radio, Checkbox, Typography, Switch } from \"@mui/material\";\nimport { useTheme } from '@mui/material/styles';\n\nimport VisibilityIcon from '@mui/icons-material/Visibility';\n\nconst SELECT_ALL = 'Display All Series';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\n\nexport default function SeriesSelector(props) {\n  const { items: itemsFromChart, selectorID, allowMultiple, onSeriesSelection } = props;\n\n  const theme = useTheme();\n\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 5.55 + ITEM_PADDING_TOP,\n        overflow: 'visible !important',\n        background: theme.palette.customAlternateBackground\n      }\n    },\n    anchorOrigin: {\n      vertical: -6,\n      horizontal: \"left\"\n    },\n    transformOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"left\"\n    },\n    getContentAnchorEl: null\n  };\n\n  const [items, setItems] = useState(itemsFromChart);\n  const [selectAll, setSelectAll] = useState(allowMultiple); // default: all is selected if multiSelect is true\n\n  useEffect(() => {\n    setItems(itemsFromChart);\n  }, [itemsFromChart]);\n\n  useEffect(() => {\n    setSelectAll(items.every(item => item.selected)); // set selectAll if all items are selected\n  }, [items]);\n\n  const handleChange = (event) => {\n    // Get the array of the currently selected value(s)\n    const {\n      target: { value }\n    } = event;\n\n    // If the current selection has SELECT_ALL\n    // Behavior:\n    // - If SELECT_ALL is being selected now, then set all items to selected\n    // - IF SELECT_ALL is being de-selected now, then set all items but the first one to be unselected \n    // (to make sure there's always at least 1 item being selected)\n    if (value.includes(SELECT_ALL)) {\n      const updatedItems = items.map((item, index) => ({ ...item, selected: index == 0 ? true : !selectAll }));\n      onSeriesSelection(updatedItems);\n      setSelectAll(!selectAll);\n    }\n    // Else, if an ordinary item is selected/de-selected:\n    else {\n      const selectedItems = items.filter(item => value.includes(item.label));\n      const updatedItems = items.map(item => ({\n        ...item,\n        selected: selectedItems.some(selectedItem => selectedItem.label === item.label)\n      }));\n      onSeriesSelection(updatedItems);\n      setSelectAll(false);\n    }\n  };\n\n  const handleItemToggle = (item) => {\n    const updatedItems = items.map(existingItem =>\n      existingItem.label === item.label ? { ...existingItem, selected: !existingItem.selected } : existingItem\n    );\n    onSeriesSelection(updatedItems);\n  };\n\n  const renderedLabel = (selected) => {\n    return (\n      <Stack direction=\"row\" alignItems=\"center\" spacing={0.5}>\n        <VisibilityIcon fontSize=\"1.5rem\" sx={{ color: theme.palette.text.secondary }} />\n        <Typography variant=\"caption\" color=\"text.secondary\">\n          { /* show # of series selected if multiSelect. show cur selected serie if singleSelect */}\n          {allowMultiple ? `${selected.length} series displayed${selectAll ? ` (all)` : \"\"}`\n            : selected\n          }\n        </Typography>\n      </Stack>\n    )\n  };\n\n  return (\n    <Stack spacing={1} direction=\"row\" alignItems=\"center\">\n      <FormControl sx={{\n        [theme.breakpoints.down('sm')]: { width: '100%' },\n        minWidth: '200px',\n        '& .MuiInputBase-root': { mt: 1, borderRadius: theme.spacing(1) }\n      }} size=\"small\">\n        <Select\n          labelId={`${selectorID}-label`}\n          id={selectorID}\n          multiple={allowMultiple}\n          value={items.filter(item => item.selected).map(item => item.label)}\n          onChange={handleChange}\n          MenuProps={MenuProps}\n          renderValue={(selected) => renderedLabel(selected)}\n          sx={{ fontSize: '0.75em' }}\n        >\n          {/* Display all available items, together with checkbox for each item to select from */}\n          {items.map((item) => (\n            <MenuItem\n              disabled={\n                // If there is only 1 selected item and this is the selected item\n                // Then, prevent user from de-select this item too\n                // To ensure at least there is 1 selected item at all times\n                (items.filter(item => item.selected).length === 1 && item.selected) ? true : false\n              }\n              key={item.label}\n              value={item.label}\n              sx={{\n                backgroundColor: 'unset !important',\n                \"&:hover\": {\n                  backgroundColor: 'inherit !important',\n                }\n              }}\n            >\n              { /* checkboxes for MultiSelect, radioButtons for singleSelect*/}\n              {allowMultiple ? <Checkbox\n                checked={item.selected}\n                onClick={() => handleItemToggle(item)}\n\n                sx={{ p: 0.25, transform: 'scale(0.8)' }} />\n                : <Radio\n                  checked={item.selected}\n                  onChange={() => handleChange(item)}\n\n                  sx={{ p: 0.25, transform: 'scale(0.8)' }} />\n              }\n              <Typography variant='caption'>{item.label}</Typography>\n            </MenuItem>\n          ))}\n\n          {/* Show the option to select all if multiSelect is true*/}\n          {allowMultiple && <MenuItem key={SELECT_ALL} value={SELECT_ALL} sx={{\n            borderTop: 'solid 0.5px', borderColor: theme.palette.text.secondary,\n            position: 'sticky', bottom: 0, zIndex: 99999, marginBottom: theme.spacing(-1),\n            background: theme.palette.customAlternateBackground,\n            \"&:hover\": {\n              background: theme.palette.customAlternateBackground\n            }\n          }}>\n            <Stack direction='row' width='100%' alignItems='center' justifyContent='space-between'>\n              <Typography fontWeight={500} variant='caption' sx={{ pl: 1 }}>{SELECT_ALL}</Typography>\n              <Switch\n                checked={selectAll}\n                onClick={() => handleItemToggle(SELECT_ALL)}\n                sx={{ transform: 'scale(0.8)' }}\n              />\n            </Stack>\n          </MenuItem>\n          }\n        </Select>\n      </FormControl>\n\n      {/* Display only selected items in the Grids, and only in landscape mode and if multiSelect is true*/}\n      {allowMultiple && <Grid container spacing={1}\n        sx={{\n          [theme.breakpoints.down('sm')]: {\n            display: 'none'\n          },\n        }}\n      >\n        {items.filter(item => item.selected).map((item) => (\n          <Grid item key={item.label}>\n            <Chip\n              label={<Typography variant='caption'>{item.label}</Typography>}\n              size=\"small\"\n              {...(items.filter(item => item.selected).length !== 1 && { onDelete: () => handleItemToggle(item) })}\n            />\n          </Grid>\n        ))}\n      </Grid>}\n\n\n    </Stack>\n  );\n}\n","/* eslint-disable */\n\nexport const ChartControlType = {\n  CategoryFilter: { position: 'top', stackDirection: 'column' },\n  DateRangeFilter: { position: 'bottom', stackDirection: 'column-reverse' },\n  ChartRangeFilter: { position: 'bottom', stackDirection: 'column-reverse' },\n  NumberRangeFilter: { position: 'top', stackDirection: 'column' }\n}\n// Async function to fetch data from sheet using Google Visualization query language\nexport const fetchDataFromSheet = ({ chartData, subchartIndex }) => {\n  const urlParams =\n    subchartIndex == null\n      ? {\n        headers: chartData.headers || 1,\n        query: chartData.query,\n        gid: chartData.gid,\n      }\n      : {\n        headers:\n          chartData.headers\n          || chartData.subcharts[subchartIndex].headers\n          || null,\n        query:\n          chartData.query\n          || chartData.subcharts[subchartIndex].query\n          || null,\n        gid:\n          chartData.gid\n          || chartData.subcharts[subchartIndex].gid\n          || null,\n      };\n\n  const url = `https://docs.google.com/spreadsheets/d/${chartData.sheetId}/gviz/tq?gid=${urlParams.gid}&headers=${urlParams.headers}&tqx${urlParams.query ? `&tq=${encodeURIComponent(urlParams.query)}` : ''}`;\n  const query = new google.visualization.Query(url);\n\n  return new Promise((resolve, reject) => {\n    query.send(response => {\n      if (response.isError()) {\n        reject(response.getMessage() + ' ' + response.getDetailedMessage());\n      } else {\n        resolve(response);\n      }\n    });\n  });\n};\n\n// Function to generate a random ID for the google chart container\nexport const generateRandomID = () => {\n  return Math.random().toString(36).substr(2, 9); // Generates a random string of length 9\n}\n\n// -------- Chart options --------\n\nconst hideAnnotations = {\n  stem: {\n    length: 0,\n  },\n  textStyle: {\n    opacity: 0,\n  },\n  boxStyle: null,\n};\n\nconst returnResponsiveFontSizeInPixels = ({ isPortrait, isSmaller }) => {\n  return (\n    isSmaller ? (isPortrait ? 6 : 8) : (isPortrait ? 8 : 10)\n  );\n}\n\nexport const returnGenericOptions = (props) => {\n  const { chartData, subchartIndex, isPortrait, isHomepage, theme } = props;\n\n  // Define some shared styling rules for the chart\n  const axisTitleTextStyle = {\n    italic: false,\n    bold: true,\n    color: theme.palette.chart.axisTitle,\n    fontSize: returnResponsiveFontSizeInPixels({ isPortrait })\n  };\n  const axisTextStyle = {\n    color: theme.palette.chart.axisText,\n    fontSize: returnResponsiveFontSizeInPixels({ isPortrait })\n  };\n\n  // ---- Formulate the options for this specific chart:\n  // 1. Populate first with subchart's options (if any)\n  let options = chartData.subcharts?.[subchartIndex].options\n    ? { ...chartData.subcharts[subchartIndex].options }\n    : {};\n\n  // 2. Append own chart's options and then populate with universal options for all charts\n  options = {\n    ...options,\n    ...chartData.options,\n    theme: 'material',\n    curveType: options.curveType || chartData.options?.curveType || 'function',\n    crosshair: { orientation: 'both', trigger: 'focus', opacity: 0.5 },\n    backgroundColor: { fill: 'transparent' },\n    chartArea: {\n      ...chartData.options?.chartArea,\n      width: isPortrait ? (chartData.options?.chartArea?.width?.portrait || '80%') : (chartData.options?.chartArea?.width?.landscape || '75%'),\n      height: isPortrait ? (chartData.options?.chartArea?.height?.portrait || '60%') : (chartData.options?.chartArea?.height?.landscape || '70%'),\n    },\n    width: isPortrait ? (chartData.options?.width?.portrait || '100%') : (chartData.options?.width?.landscape || '100%'),\n    // if there is a filter, we make space for the chartFilter from the chart's height.\n    // value is divided in 2 because the calculation is applied twice due to\n    // how react-google-charts nest components\n    height: chartData.height || '100%',\n    tooltip: {\n      isHtml: true,\n      showColorCode: false\n    },\n    legend: {\n      alignment: isPortrait ? 'center' : 'start',\n      position:\n        chartData.options?.legend?.position\n        ?? (isPortrait ? 'top' : 'right'),\n      scrollArrows: {\n        activeColor: theme.palette.chart.axisTitle,\n        inactiveColor: theme.palette.text.secondary,\n      },\n      pagingTextStyle: {\n        fontSize: 10,\n        color: theme.palette.chart.axisTitle,\n        bold: true,\n      }\n    }\n  };\n\n  // 3. Append to vAxis and hAxis properties\n  options.vAxis = {\n    ...options.vAxis,\n    format: options.vAxis?.format ?? 'decimal',\n    title: options.vAxis?.title ?? '',\n    viewWindow: {\n      min: options.vAxis?.viewWindow?.min ?? 0,\n    },\n  };\n  options.hAxis = {\n    ...options.hAxis,\n    title: options.hAxis?.title ?? '',\n  };\n  // 3.1. If in portrait mode, slant the text of the hAxis\n  if (isPortrait) {\n    options.hAxis = {\n      ...options.hAxis,\n      slantedText: true,\n      slantedTextAngle: 30,\n    };\n  }\n\n  // 4. Override with custom colors:\n  // 4.1. Color scheme of all the series of this chart\n  if (typeof options.colors === 'string' || !options.colors) options.colors = theme.palette.chart.optionsColors[options.colors || 'multiColor'];\n  // 4.2. Individual color of a single serie (if given)\n  if (options.series) {\n    Object.values(options.series).forEach((_serie) => {\n      const serie = _serie;\n      if (serie.color === 'default') {\n        serie.color = theme.palette.primary.main;\n      }\n    });\n  }\n  // 4.3. Color of the trendline\n  if (options.trendlines) {\n    options.trendlines.forEach((_item) => {\n      const item = _item;\n      item.color = theme.palette.primary.main;\n    });\n  }\n  // 4.4. Color axis of the Calendar chart\n  if (options.colorAxis) {\n    switch (options.colorAxis.colors) {\n      case 'matchingColor':\n        options.colorAxis.colors = [\n          theme.palette.chart.colorAxisFirstColor,\n          theme.palette.chart.optionsColors.multiColor[options.colorAxis.colorIndex],\n        ];\n        break;\n      case 'default':\n        options.colorAxis.colors = [\n          theme.palette.chart.colorAxisFirstColor,\n          theme.palette.NYUpurple,\n        ];\n        break;\n      case 'aqi':\n        options.colorAxis = theme.palette.chart.aqiColorAxis;\n        break;\n      default:\n        break;\n    }\n  }\n  // 4.5. Colors of other elements of the chart (typographies and gridlines)\n  options.vAxis = {\n    ...options.vAxis,\n    titleTextStyle: axisTitleTextStyle,\n    textStyle: axisTextStyle,\n    gridlines: {\n      ...options.vAxis?.gridlines,\n      color: options.vAxis?.gridlines?.color || theme.palette.chart.gridlines\n    },\n    minorGridlines: { count: 0 },\n  };\n  options.hAxis = {\n    ...options.hAxis,\n    titleTextStyle: axisTitleTextStyle,\n    textStyle: axisTextStyle,\n    gridlines: {\n      ...options.hAxis?.gridlines,\n      color: options.hAxis?.gridlines?.color || theme.palette.chart.gridlines\n    },\n    minorGridlines: {\n      ...options.hAxis?.minorGridlines,\n      color: options.hAxis?.gridlines?.color || theme.palette.chart.gridlines,\n    },\n  };\n  options.legend = {\n    ...options.legend,\n    textStyle: axisTextStyle,\n  };\n  options.annotations = {\n    ...options.annotations,\n    highContrast: true,\n    textStyle: {\n      color: theme.palette.primary.contrastText,\n      fontSize: returnResponsiveFontSizeInPixels({ isPortrait, isSmaller: true }),\n      opacity: 0.8\n    },\n    stem: {\n      ...options.annotations?.stem,\n      color: theme.palette.chart.axisTitle,\n      thickness: 2\n    },\n    boxStyle: {\n      rx: theme.shape.borderRadius, // rounded corners\n      ry: theme.shape.borderRadius,\n      fill: theme.palette.chart.annotationBoxFill,\n      fillOpacity: 0.5\n    },\n  };\n\n  // 5. If the chart is displayed on the homepage, override the options with:\n  if (isHomepage) {\n    options = {\n      ...options,\n      chartArea: {\n        ...options.chartArea,\n        width: '80%',\n        height: '80%'\n      },\n      seriesSelector: false,\n      pointSize: 0,\n      enableInteractivity: false,\n      annotations: hideAnnotations,\n      legend: 'none',\n      vAxis: {\n        ...options.vAxis,\n        textPosition: 'none',\n        titleTextStyle: {\n          ...options.vAxis.titleTextStyle,\n          bold: false\n        },\n        gridlines: { color: 'transparent', count: 0 },\n        viewWindowMode: 'maximized'\n      },\n      hAxis: {\n        ...options.hAxis,\n        textPosition: 'none',\n        gridlines: { color: 'transparent', count: 0 },\n        titleTextStyle: {\n          ...options.hAxis.titleTextStyle,\n          bold: false\n        }\n      },\n    };\n  }\n\n  return options;\n}\n\nexport const returnCalendarChartOptions = (existingOptions) => {\n  const calendarDimensions = calculateCalendarDimensions({ cellSizeMin: 14, cellSizeMax: 18 });\n  return {\n    ...existingOptions,\n    width: calendarDimensions.chartWidth,\n    calendar: {\n      cellSize: calendarDimensions.cellSize,\n      yearLabel: {\n        fontSize: calendarDimensions.yearLabelFontSize\n      }\n    },\n    noDataPattern: {\n      backgroundColor: 'none',\n      color: 'none',\n    },\n  }\n}\n\nexport const returnChartControlUI = (props) => {\n  const { chartControl, mainChartData, mainChartOptions, subchartIndex, theme, isPortrait } = props;\n  let chartControlUI = {\n    ...chartControl.options?.ui,\n    snapToData: true\n  };\n\n  // Assign the appropriate UI for chartControl based on controlType (if existed)\n  if (chartControl.controlType === 'ChartRangeFilter') {\n    chartControlUI = {\n      ...chartControlUI,\n      chartType: mainChartData.chartType,\n      chartView: {\n        columns:\n          mainChartData.columns\n          || (mainChartData.subcharts\n            && mainChartData.subcharts[subchartIndex].columns)\n          || null\n          || null,\n      },\n      chartOptions: {\n        ...mainChartOptions,\n        ...chartControl.options?.ui?.chartOptions,\n        hAxis: {\n          ...chartControl.options?.ui?.chartOptions?.hAxis,\n          textPosition: 'out',\n          textStyle: { color: theme.palette.chart.axisText, fontSize: returnResponsiveFontSizeInPixels({ isPortrait, isSmaller: true }) }\n        },\n        vAxis: {\n          ...chartControl.options?.ui?.chartOptions?.vAxis,\n          title: null\n        },\n        annotations: hideAnnotations,\n        legend: null,\n      }\n    };\n  }\n  return chartControlUI;\n}\n\nconst calculateCalendarDimensions = ({ cellSizeMin, cellSizeMax }) => {\n  const cellSize = Math.min(Math.max((window.innerWidth * 0.9) / 58, cellSizeMin), cellSizeMax);\n  return {\n    chartWidth: cellSize * 56, // fixed ratio\n    cellSize,\n    yearLabelFontSize: cellSize * 2\n  };\n};\n\nexport const addTouchEventListenerForChartControl = ({ controlWrapper, chartID }) => {\n  const touchHandler = (event) => {\n    var touches = event.changedTouches,\n      first = touches[0],\n      type = '';\n\n    switch (event.type) {\n      case 'touchstart':\n        type = 'mousedown';\n        break;\n      case 'touchmove':\n        type = 'mousemove';\n        break;\n      case 'touchend':\n        type = 'mouseup';\n        break;\n      default:\n        return;\n    }\n\n    var simulatedEvent = new MouseEvent(type, {\n      bubbles: true,\n      cancelable: true,\n      view: window,\n      detail: 1,\n      screenX: first.screenX,\n      screenY: first.screenY,\n      clientX: first.clientX,\n      clientY: first.clientY,\n      button: 0, // left button\n      relatedTarget: null,\n    });\n\n    first.target.dispatchEvent(simulatedEvent);\n    event.preventDefault();\n  }\n\n  let isMounted = true; // Flag to track component's mount status\n  if (!controlWrapper) return;\n\n  const controlDOM = document.querySelector(`#control-${chartID}`);\n  if (!controlDOM) return;\n\n  ['touchstart', 'touchmove', 'touchend', 'touchcancel']\n    .forEach((touchEvent) => {\n      controlDOM.addEventListener(touchEvent, touchHandler, { capture: true });\n    });\n\n  return () => {\n    isMounted = false; // Component is unmounting\n\n    ['touchstart', 'touchmove', 'touchend', 'touchcancel'].forEach((touchEvent) => {\n      controlDOM.removeEventListener(touchEvent, touchHandler, { capture: true });\n    });\n  };\n}","import { Box } from '@mui/material/';\nimport { styled } from '@mui/material/styles';\n\nconst GoogleChartStyleWrapper = styled(Box)(({ theme, isPortrait }) => ({\n  // CSS for HTML tooltip\n  '& .google-visualization-tooltip': {\n    width: 'unset !important',\n    maxWidth: '350px',\n    height: 'unset',\n    padding: '1em',\n    fontSize: `${isPortrait ? 9 : 12}px`,\n    color: theme.palette.chart.tooltip.text,\n    background: theme.palette.chart.tooltip.background,\n    borderRadius: theme.spacing(1 / 2),\n    '& ul': {\n      margin: '0 !important',\n      '& li': {\n        margin: '0 !important',\n        padding: '0 !important',\n        '& span': {\n          fontSize: `${isPortrait ? 9 : 12}px !important`,\n          color: `${theme.palette.chart.tooltip.text} !important`,\n        }\n      }\n    }\n  },\n\n  // -------- chartControl's additional stylings\n  '& .goog-menuitem-highlight, .goog-menuitem-hover': {\n    backgroundColor: `${theme.palette.primary} !important`\n  },\n\n  // CategoryFilter\n  '& .google-visualization-controls-categoryfilter': {\n    fontSize: '0.85rem',\n    marginTop: '0.75rem',\n    marginBottom: '-0.75rem',\n\n    '& .goog-inline-block > .goog-menu-button': {\n      marginTop: 0\n    },\n\n    '& .goog-menu-button-hover .goog-menu-button-outer-box, .goog-menu-button-hover .goog-menu-button-inner-box': {\n      borderColor: 'inherit !important'\n    },\n\n    '& .google-visualization-controls-label': {\n      color: theme.palette.text.secondary,\n      fontWeight: 500,\n      verticalAlign: 'middle',\n      marginBottom: '0.25rem'\n    },\n    '& .goog-menu-button-outer-box': {\n      backgroundColor: theme.palette.background.paper,\n      border: 'unset',\n\n      '& .goog-menu-button-inner-box': {\n        paddingTop: theme.spacing(0.5),\n        paddingBottom: theme.spacing(0.5),\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(2),\n        border: 'solid',\n        borderWidth: '0.5px',\n        borderRadius: theme.spacing(0.5),\n        borderColor: theme.palette.text.secondary,\n\n        '& .goog-menu-button-caption': {\n          color: theme.palette.text.secondary\n        }\n      }\n    }\n  },\n\n  // DateRangeFilter\n  '& .google-visualization-controls-rangefilter': {\n    width: '100%',\n    fontSize: '0.75rem',\n    '& .goog-inline-block': {\n      width: '100%',\n    },\n    '& .google-visualization-controls-slider-horizontal': {\n      width: '90%',\n      margin: '0 5%',\n    },\n    '& .google-visualization-controls-rangefilter-thumblabel:nth-of-type(1)': {\n      position: 'absolute',\n      top: '1.5em',\n      left: '5%'\n    },\n    '& .google-visualization-controls-rangefilter-thumblabel:nth-of-type(2)': {\n      position: 'absolute',\n      top: '1.5em',\n      right: '5%'\n    },\n    '& .google-visualization-controls-slider-handle': {\n      background: theme.palette.primary.main\n    },\n    '& .google-visualization-controls-rangefilter-thumblabel': {\n      color: theme.palette.text.secondary,\n      padding: 0,\n      fontWeight: 500\n    },\n    '& .google-visualization-controls-slider-thumb': {\n      background: theme.palette.primary.main,\n      border: 'unset',\n      borderRadius: '4px'\n    }\n  },\n\n  // These are the paths showing on top of the line chart\n  // and the stroke around the bar/column chart\n  // when the user hovers on the legend to make the serie stand out\n  // by Google Chart's default doesn't change color based on light/dark theme, but we modify here:\n  '& path[stroke-opacity=\"0.3\"], path[stroke-opacity=\"0.1\"], path[stroke-opacity=\"0.05\"], rect[stroke-opacity]': {\n    stroke: theme.palette.text.primary,\n    strokeWidth: 3\n  },\n\n  // Cursor of series in legends\n  '& [column-id]:not(:empty)': {\n    cursor: 'pointer',\n    ':hover': {\n      fontWeight: 600\n    }\n  }\n}));\n\nexport default GoogleChartStyleWrapper;\n","/* eslint-disable */\n\nimport { useState, useEffect, useContext } from 'react';\n\nimport { GoogleContext } from '../../ContextProviders/GoogleContext';\n\nimport { Box, Stack } from '@mui/material/';\n\nimport { useTheme } from '@mui/material/styles';\nimport SeriesSelector from './SeriesSelector';\n\nimport { fetchDataFromSheet, generateRandomID, returnGenericOptions, returnCalendarChartOptions, returnChartControlUI, ChartControlType, addTouchEventListenerForChartControl } from '../GoogleChartHelper';\n\nimport GoogleChartStyleWrapper from './GoogleChartStyleWrapper';\n\nimport LoadingAnimation from '../../Components/LoadingAnimation';\n\nimport ChartSubstituteComponentLoader from '../ChartSubstituteComponents/ChartSubstituteComponentLoader';\n\nexport default function SubChart(props) {\n  // Props\n  const { chartData, subchartIndex, windowSize, isPortrait, isHomepage, height, maxHeight } = props;\n  // Early return if this doesn't contain a normal Google Chart but a chartSubstituteComponent\n  const chartSubstituteComponentName = chartData.subcharts?.[subchartIndex].chartSubstituteComponentName;\n  if (chartSubstituteComponentName) {\n    return <ChartSubstituteComponentLoader chartSubstituteComponentName={chartSubstituteComponentName} />;\n  }\n\n  // Formulate the className\n  const className = chartData.customClassName ? `${chartData.chartType} ${chartData.customClassName}` : chartData.chartType;\n\n  // Use GoogleContext for loading and manipulating the Google Charts\n  const [google, _] = useContext(GoogleContext);\n\n  // States of the Google Charts\n  const [dataTable, setDataTable] = useState();\n  const [chartWrapper, setChartWrapper] = useState();\n  const [dashboardWrapper, setDashboardWrapper] = useState();\n  const [controlWrapper, setControlWrapper] = useState();\n\n  // Get the current theme\n  const theme = useTheme();\n\n  // To determine the first time the chart renders to show/hide the LoadingAnimation\n  const [isFirstRender, setIsFirstRender] = useState(true);\n\n  // Keep track of the columns (series) of the chart\n  const [allInitialColumns, setAllInitialColumns] = useState();\n  const [dataColumns, setDataColumns] = useState();\n  const [initialVAxisRange, setInitialVAxisRage] = useState();\n\n  // Define the DOM container's ID for drawing the google chart inside\n  const [chartID, __] = useState(generateRandomID());\n\n  // Calendar chart's properties\n  const [chartTotalHeight, setChartTotalHeight] = useState(200);\n\n  // Get the options object for chart\n  let options = returnGenericOptions({ ...props, theme });\n  if (chartData.chartType === 'Calendar') options = returnCalendarChartOptions(options);\n\n  // Properties for chart control (if existed)\n  let hasChartControl = false;\n  let chartControlOptions;\n  // Only show the chart control if:\n  // It exists in the database (either for all subcharts or just for a particular subchart)\n  // And if the chart is currently not shown on homePage\n  let chartControl = chartData.control || chartData.subcharts?.[subchartIndex].control;\n  if (chartControl && (isHomepage !== true)) {\n    hasChartControl = true;\n\n    // Get the options for chartControl if hasChartControl\n    chartControlOptions = {\n      ...chartControl.options,\n      ui: returnChartControlUI({\n        chartControl,\n        mainChartData: chartData,\n        mainChartOptions: options,\n        subchartIndex,\n        theme,\n        isPortrait\n      })\n    };\n\n    // Swap touch events for mouse events on ChartRangeControl\n    // as it doesn't support touch events on mobile\n    if (chartControl.controlType === 'ChartRangeFilter') {\n      useEffect(() => {\n        const cleanupTouchEventListener = addTouchEventListenerForChartControl({ controlWrapper, chartID });\n        return cleanupTouchEventListener;\n      }, [controlWrapper]);\n    }\n  }\n\n  // Properties for selecting (showing or hiding) the serie(s)\n  const seriesSelector = options.seriesSelector || false;\n\n  // Set new options prop and re-render the chart if theme or isPortrait changes\n  useEffect(() => {\n    if (seriesSelector) handleSeriesSelection(dataColumns); // this function set new options, too\n    else {\n      chartWrapper?.setOptions({\n        ...options,\n        ...(chartData.chartType === 'Calendar' && { height: chartTotalHeight })\n      });\n\n      chartWrapper?.draw();\n      if (hasChartControl) {\n        controlWrapper?.setOptions(chartControlOptions);\n        controlWrapper?.draw();\n      }\n    }\n  }, [theme, isPortrait, windowSize, chartTotalHeight]);\n\n  // Set new initialColumnsColors if the theme changes\n  // This only applies to when seriesSelector.method == \"setViewColumn\"\n  useEffect(() => {\n    if (!dataColumns) return;\n    if (seriesSelector && seriesSelector.method == \"setViewColumn\") {\n      setInitialColumnsColors({ dataColumns: dataColumns });\n      handleSeriesSelection(dataColumns);\n    }\n  }, [theme]);\n\n  const getInitialColumns = ({ chartWrapper, dataTable, seriesSelector }) => {\n    // Update the initial DataView's columns (often, all of the series are displayed initially)\n    var initialView = chartWrapper.getView();\n    // If (optional) columns is not specified in database\n    // Assign it from DataTable\n    if (initialView.columns == null) {\n      const viewFromDataTable = new google.visualization.DataView(dataTable);\n      chartWrapper.setView({\n        columns: viewFromDataTable.columns\n      });\n      initialView = chartWrapper.getView();\n    }\n\n    let shouldAssignDomainRoleToFistColumn = true; // variable to only assign type: 'domain' to the very first column\n    let dataSeriesIndex = 0;\n    const allInitialColumns = initialView.columns.map((col, index) => {\n      // A column can either be a number (that denotes the index of the sourceColumn) or an object\n      // The code below harmonize all columns to be an object to store crucial data to toggle their visibility\n      if (typeof col === 'number') col = {\n        role: shouldAssignDomainRoleToFistColumn ? 'domain' : 'data',\n        sourceColumn: col\n      }\n      col.label = dataTable.getColumnLabel(col.sourceColumn);\n      col.indexInAllInitialColumns = index;\n\n      shouldAssignDomainRoleToFistColumn = shouldAssignDomainRoleToFistColumn && false;\n\n      // Set the visibility of data column, \n      if (col.role === 'data') {\n        // initially, all data columns are selected if multiple series are selectable\n        if (seriesSelector?.allowMultiple) {\n          col.selected = true;\n        } else {\n          // else for single serie selector, only first data column is selected\n          if (dataSeriesIndex === 0) {\n            col.selected = true;\n          } else {\n            col.selected = false;\n          }\n        }\n        col.seriesIndex = dataSeriesIndex;\n        dataSeriesIndex++;\n      }\n      return col;\n    });\n    setAllInitialColumns(allInitialColumns);\n    const initialVAxisRange = getInitialVAxisRange({ dataTable: dataTable, allInitialColumns: allInitialColumns });\n    setInitialVAxisRage(initialVAxisRange);\n    // To track selection, only get the columns that are:\n    // role === 'data'\n    // visibleInLegend !== false\n    const dataColumns = allInitialColumns.filter((col) => {\n      return col.role === 'data' && options.series?.[col.seriesIndex]?.visibleInLegend !== false;\n    });\n\n    if (seriesSelector.method === \"setViewColumn\") setInitialColumnsColors({ dataColumns: dataColumns });\n\n    setDataColumns(dataColumns);\n    return dataColumns;\n  };\n\n  const setInitialColumnsColors = ({ dataColumns }) => {\n    dataColumns.forEach((col) => {\n      // Assign inherit color to this data column\n      col.color = options.colors[col.seriesIndex % options.colors.length];\n      // Assign other inherit attributes from its serie object (if existed)\n      col.serieAttribute = options.series?.[col.seriesIndex];\n    });\n  }\n\n  const getInitialVAxisRange = ({ dataTable, allInitialColumns }) => {\n    let vAxisMin, vAxisMax;\n    allInitialColumns.forEach((col, index) => {\n      if (index === 0) return; // the first column is the domain (hAxis)\n      const range = dataTable.getColumnRange(col.sourceColumn);\n      if (!isNaN(range.min) && range.min) vAxisMin = vAxisMin ? Math.min(vAxisMin, range.min) : range.min;\n      if (!isNaN(range.max) && range.max) vAxisMax = vAxisMax ? Math.max(vAxisMax, range.max) : range.max;\n    });\n    return { min: vAxisMin, max: vAxisMax };\n  }\n\n  const handleSeriesSelection = (newDataColumns, _chartWrapper = chartWrapper) => {\n    if (!allInitialColumns) return;\n\n    setDataColumns(newDataColumns);\n\n    if (seriesSelector.method === \"toggleVisibility\" || seriesSelector.method === null) {\n      const hiddenSeriesObject = {};\n      newDataColumns.forEach((col) => {\n        if (!col.selected)\n          hiddenSeriesObject[col.seriesIndex] = {\n            color: 'transparent',\n            enableInteractivity: false,\n            visibleInLegend: false\n          }; // 'hide' the serie by making it transparent\n      });\n\n      _chartWrapper?.setOptions({\n        ...options,\n        series: {\n          ...options.series,\n          ...hiddenSeriesObject\n        }\n      });\n    }\n    else if (seriesSelector.method === \"setViewColumn\") {\n      let newViewColumns = [];\n      newViewColumns.push(0); // this is the domain column\n      newDataColumns.forEach((dataColumn) => {\n        if (dataColumn.selected) {\n          newViewColumns.push(dataColumn);\n          // Find this dataColumn's supporting columns (whose role !== 'data')\n          // A dataColumn has its supporting columns (can be many) follow it immediately\n          for (let i = dataColumn.indexInAllInitialColumns + 1; i < allInitialColumns.length; i++) {\n            if (allInitialColumns[i].role !== 'data') {\n              newViewColumns.push(allInitialColumns[i]);\n            }\n            // If this loop encounter the next dataColumn, break the loop, all supporting columns for this dataColumn have been discovered\n            else {\n              break;\n            }\n          }\n        }\n      });\n      _chartWrapper?.setView({ columns: newViewColumns });\n\n      const newOptions = { ...options };\n      // Preserve the initial vAxis range so that the vAxis doesn't shift based on the visible serie(s)\n      // newOptions.vAxis.viewWindow = {\n      //   min: (options.vAxis.viewWindow.min == null) ? initialVAxisRange.min : options.vAxis.viewWindow.min,\n      //   max: (options.vAxis.viewWindow.max == null) ? initialVAxisRange.max : options.vAxis.viewWindow.max,\n      // }\n      // Set the new color array\n      newOptions.colors = newDataColumns.filter((col) => col.selected).map((col) => col.color);\n      // Set the new series object (if any)\n      // this contains other series' attributes (lineWidth, seriesType...)\n      const series = {};\n      let selectedSeriesCount = 0;\n      newDataColumns.forEach((col) => {\n        if (!col.selected) return;\n        if (col.serieAttribute != null) {\n          series[selectedSeriesCount] = col.serieAttribute;\n        }\n        selectedSeriesCount++;\n      })\n      newOptions.series = series;\n      _chartWrapper?.setOptions(newOptions);\n    }\n\n    // Call draw to apply the new DataView and 'refresh' the chart\n    _chartWrapper?.draw();\n\n    if (hasChartControl) {\n      controlWrapper?.draw();\n    }\n  };\n\n  const reconstructFunctionFromJSONstring = (columns) => {\n    if (!columns) return;\n\n    const evaluatedColumns = [];\n    for (const column of columns) {\n      if (typeof column === 'number') {\n        // If it's a number, add it as-is\n        evaluatedColumns.push(column);\n      } else if (typeof column === 'object') {\n        if (column.calc && column.calc !== 'stringify') {\n          // If it's an object with a 'calc' property, evaluate the 'calc' function\n          // using new Function() and add the result to the evaluatedColumns array\n          const calcFunction = new Function(\"dataTable\", \"rowNum\", column.calc);\n          evaluatedColumns.push({\n            ...column,\n            calc: calcFunction,\n          });\n        } else {\n          // If it's an object without a 'calc' property, or with calc = 'stringify', add it as-is\n          evaluatedColumns.push(column);\n        }\n      }\n    }\n    return evaluatedColumns;\n  }\n\n\n  // Call this function to fetch the data and draw the initial chart\n  useEffect(() => {\n    if (google && chartData) {\n      // Get and set the dataArray \n      const dataArray = chartData.dataArray\n        || (chartData.subcharts\n          && chartData.subcharts[subchartIndex].dataArray)\n        || null\n        || null;\n      if (!dataArray) return; // early return if there is no data to render\n\n      const thisDataTable = google.visualization.arrayToDataTable(dataArray);\n      setDataTable(thisDataTable);\n\n      // Get dataColumn views\n      const columns = chartData.columns\n        || (chartData.subcharts\n          && chartData.subcharts[subchartIndex].columns)\n        || null\n        || null;\n      const reconstructedColumns = reconstructFunctionFromJSONstring(columns);\n\n      // Create chartWrapper\n      const thisChartWrapper = new google.visualization.ChartWrapper({\n        chartType: chartData.chartType,\n        dataTable: (!hasChartControl) ? thisDataTable : undefined,\n        options: options,\n        view: {\n          columns: reconstructedColumns\n        },\n        containerId: chartID\n      });\n      setChartWrapper(thisChartWrapper);\n\n      if (hasChartControl) {\n        const thisDashboardWrapper = new google.visualization.Dashboard(\n          document.getElementById(`dashboard-${chartID}`));\n        setDashboardWrapper(thisDashboardWrapper);\n\n        google.visualization.events.addListener(thisDashboardWrapper, 'ready', onChartReady);\n\n        const thisControlWrapper = new google.visualization.ControlWrapper({\n          controlType: chartControl.controlType,\n          options: chartControlOptions,\n          containerId: `control-${chartID}`\n        });\n        setControlWrapper(thisControlWrapper);\n\n        // Establish dependencies\n        thisDashboardWrapper.bind(thisControlWrapper, thisChartWrapper);\n\n        thisDashboardWrapper.draw(thisDataTable);\n      }\n      else {\n        google.visualization.events.addListener(thisChartWrapper, 'ready', onChartReady);\n        thisChartWrapper.draw();\n      }\n\n      // Run the seriesSelector for the first time\n      if (seriesSelector) {\n        const initColumns = getInitialColumns({ chartWrapper: thisChartWrapper, dataTable: thisDataTable, seriesSelector: seriesSelector });\n        handleSeriesSelection(initColumns, thisChartWrapper);\n      }\n    }\n  }, [google, chartData]);\n\n  const renderChart = () => {\n    if (hasChartControl) {\n      return (\n        <Stack\n          id={`dashboard-${chartID}`}\n          direction={ChartControlType[chartControl.controlType]?.stackDirection || 'column-reverse'}\n          sx={{ height: '100%' }}\n        >\n          <Box\n            id={`control-${chartID}`}\n            sx={{\n              height: `calc(${height} / 8)`,\n              opacity: 0.8,\n              filter: 'saturate(0.3)'\n            }}\n          />\n          <Box id={chartID} sx={{ height: height, maxHeight: maxHeight }} />\n        </Stack>\n      )\n    }\n    else return <Box id={chartID} sx={{ height: height, maxHeight: maxHeight }} />;\n  }\n\n  const onChartReady = () => {\n    if (chartData.chartType === 'Calendar') {\n      // querySelector is used to select the first 'g' element in the svg\n      // this is to get the height of the non-responsive element\n      // to set the CalendarChart's height to make it resonsive\n      const chartDOMContainer = document.getElementById(chartID).querySelector('svg > g:nth-of-type(1)');\n      let renderedHeight = chartDOMContainer.getBBox().height;\n      if (options.legend.position === 'none') renderedHeight += 50;\n      setChartTotalHeight(renderedHeight);\n    }\n\n    if (!isFirstRender) return;\n    // Hide the circleProgress when chart finishes rendering the first time\n    setIsFirstRender(false);\n  };\n\n  return (\n    <GoogleChartStyleWrapper\n      isPortrait={isPortrait}\n      className={className}\n      position=\"relative\"\n      height=\"100%\"\n      minHeight={chartData.chartType === 'Calendar' && '200px'}\n    >\n      {/* Conditionally display loading animation here */}\n      {isFirstRender && (\n        <Box sx={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '100%' }}>\n          <LoadingAnimation />\n        </Box>\n      )}\n\n      {/* Conditionally display seriesSelector here */}\n      {(seriesSelector && !isFirstRender) && (\n        <SeriesSelector\n          items={dataColumns}\n          allowMultiple={seriesSelector.allowMultiple}\n          selectorID={`${chartData.title}-selector`}\n          onSeriesSelection={handleSeriesSelection}\n        />\n      )}\n\n      {/* Display chart here */}\n      {renderChart()}\n    </GoogleChartStyleWrapper>\n  );\n}","import { useState, useEffect, useContext } from 'react';\nimport { styled } from '@mui/material/styles';\nimport { Box, Tabs, Tab, useMediaQuery } from '@mui/material/';\nimport { TabContext } from '../ContextProviders/TabContext';\n\nimport SubChart from './Subchart/SubChart';\n\nconst debounceMilliseconds = 100;\n\nconst ChartStyleWrapper = styled(Box)(({ theme }) => ({\n  // CSS for dark theme only\n  ...(theme.palette.mode === 'dark' && {\n    // De-saturate a bit\n    filter: 'saturate(0.85)',\n    // Invert iframe\n    '& .heat-map-iframe': {\n      filter: 'invert(0.848) hue-rotate(180deg)',\n    }\n  }),\n  // Special CSS for historical-snapshot-aqi chart\n  '& .historical-snapshot-aqi svg [clip-path*=\"ABSTRACT_RENDERER\"] > g:nth-of-type(1), .historical-snapshot-aqi [id*=\"googlechart-control\"] svg [clip-path*=\"ABSTRACT_RENDERER\"] > g:nth-of-type(2)': {\n    opacity: 0.6\n  },\n  // Center Calendar chart in wrapper\n  '& .Calendar [dir]:not(:empty)': {\n    margin: 'auto'\n  },\n\n  // add horizontal scrollbar to Calendar charts\n  '& .Calendar > div > div:last-of-type > div': {\n    overflowX: 'auto',\n    overflowY: 'hidden',\n    scrollbarGutter: 'stable'\n  }\n}));\n\nconst StyledTabs = styled(Tabs)(({ theme }) => ({\n  '& .MuiTabScrollButton-root': {\n    color: theme.palette.text.primary\n  },\n  '& .MuiTab-root': {\n    [theme.breakpoints.down('sm')]: {\n      fontSize: '0.75rem',\n      paddingLeft: theme.spacing(1),\n      paddingRight: theme.spacing(1)\n    },\n  }\n}));\n\n// eslint-disable-next-line max-len\nfunction ChartComponent({ chartData: passedChartData, chartHeight: passedChartHeight, isHomepage }) {\n  const isSmallWidth = useMediaQuery((theme) => theme.breakpoints.down('sm'));\n\n  const [isPortrait, setIsPortrait] = useState(window.matchMedia('(orientation: portrait)').matches);\n  const [windowSize, setWindowSize] = useState([\n    window.innerWidth,\n    window.innerHeight,\n  ]);\n\n  let chartMaxHeight;\n  let chartHeight = passedChartHeight;\n  const chartData = passedChartData;\n\n  // Props for tab panels (multiple data visualizations in the same chart area,\n  // navigate with tab panels)\n  const [indexValue, setIndexValue] = useState(0); // start with the first elem\n\n  // eventListener for window resize\n  // redraw \"Calendar\" charts and charts with a time filter upon window resize.\n  // Filter & Calendar charts are not automatically respnsive, so we have to redraw them.\n  // redraw other charts when device orientation changes\n  useEffect(() => {\n    setIndexValue(0); // set tab back to 0 if chartData changes (changed school)\n\n    let timeoutID = null;\n\n    const handleWindowResize = () => {\n      clearTimeout(timeoutID);\n\n      // debounce before triggering re-render. as user is resizing window, the state could\n      // change multiple times causing many expensive rerenders. we try to rerender at the\n      // end of the resize.\n      timeoutID = setTimeout(() => {\n        // Redraw all charts on device orientation change, as the chartWrapperHeights\n        // have changed.\n        setIsPortrait(window.matchMedia('(orientation: portrait)').matches);\n\n        // Redraw all charts on window resized\n        setWindowSize([window.innerWidth, window.innerHeight]);\n      }, debounceMilliseconds);\n    };\n\n    // listen to window resize events\n    window.addEventListener('resize', handleWindowResize);\n\n    return () => {\n      window.removeEventListener('resize', handleWindowResize);\n    };\n  }, [chartData]);\n\n  if (chartData.chartType !== 'Calendar' && !chartHeight) {\n    chartHeight = isPortrait ? '80vw' : '35vw';\n    chartMaxHeight = isPortrait ? '800px' : '500px';\n  }\n\n  const handleChange = (__, newValue) => {\n    setIndexValue(newValue);\n  };\n\n  return (\n    <ChartStyleWrapper height=\"100%\">\n      {chartData.subcharts ?\n        <>\n          <StyledTabs\n            value={indexValue}\n            onChange={handleChange}\n            variant={isSmallWidth ? 'fullWidth' : 'standard'}\n          >\n            {chartData.subcharts.map((element, index) => (\n              <Tab\n                key={index}\n                value={index}\n                label={chartData.subcharts[index].subchartTitle}\n              />\n            ))}\n          </StyledTabs>\n          <Box position=\"relative\">\n            {chartData.subcharts.map((__, index) => (\n              <Box\n                key={index}\n                width=\"100%\"\n                height=\"100%\"\n                role=\"tabpanel\"\n                sx={{\n                  transition: '0.35s',\n                  position: (index === 0) ? '' : 'absolute',\n                  opacity: indexValue === index ? '1' : '0',\n                  pointerEvents: indexValue === index ? 'auto' : 'none',\n                  top: (index === 0) ? '' : 0\n                }}\n              >\n                <SubChart\n                  chartData={chartData}\n                  subchartIndex={index}\n                  isPortrait={isPortrait}\n                  isHomepage={isHomepage}\n                  windowSize={windowSize}\n                  height={chartData.height ? chartData.height : chartHeight}\n                  maxHeight={\n                    ['Calendar'].includes(chartData.chartType)\n                      ? ''\n                      : chartMaxHeight\n                  }\n                />\n              </Box>\n            ))}\n          </Box>\n        </>\n        :\n        <SubChart\n          chartData={chartData}\n          isPortrait={isPortrait}\n          isHomepage={isHomepage}\n          windowSize={windowSize}\n          height={chartData.height ? chartData.height : chartHeight}\n        />\n      }\n    </ChartStyleWrapper>\n  );\n}\n\nexport default ChartComponent;\n","import { Box, Table, TableBody, TableCell, TableHead, TableRow, styled } from '@mui/material';\nimport parse from 'html-react-parser';\nimport { replacePlainHTMLWithMuiComponents } from '../../Utils/Utils';\nimport ChartComponent from '../ChartComponent';\nimport AQIdatabase from '../../Utils/AirQualityIndexHelper';\nimport ThemePreferences from '../../Themes/ThemePreferences';\n\nexport const StyledTable = styled(Table)(({ theme, isTiny }) => ({\n  minWidth: isTiny || 700,\n  '& th, td': {\n    fontSize: isTiny ? '0.625rem' : '0.6875rem',\n    color: theme.palette.text.secondary,\n    [theme.breakpoints.down('sm')]: {\n      fontSize: isTiny ? '0.5rem' : '0.6875rem',\n    },\n  },\n  '& th': {\n    fontWeight: 500,\n    color: theme.palette.text.primary,\n    lineHeight: '1rem'\n  }\n}));\n\nfunction AirQualityIndexTable(props) {\n  const { isTiny, hideAQIDescription, themePreference } = props;\n\n  const renderAQIchart = ({ shouldRender }) => {\n    if (!shouldRender) {\n      return null;\n    }\n    else {\n      const dataArray = [[\"category\"], [\"US AQI\"]];\n      for (let category of AQIdatabase) {\n        dataArray[0].push(category.category);\n        dataArray[1].push(Math.ceil((category.aqiUS.high - category.aqiUS.low) / 50) * 50);\n      }\n      return (\n        <ChartComponent\n          chartHeight=\"4rem\"\n          chartData={\n            {\n              dataArray: dataArray,\n              chartType: 'BarChart',\n              options: {\n                enableInteractivity: false,\n                legend: { position: 'none' },\n                hAxis: {\n                  ticks: [0, 50, 100, 150, 200, 300, 500]\n                },\n                chartArea:\n                {\n                  width: { portrait: '98%', landscape: '50%' },\n                  height: { portrait: '20%', landscape: '30%' }\n                },\n                isStacked: true,\n                colors: 'aqi',\n                bar: { groupWidth: '100%' }\n              }\n            }\n          }\n        />\n      )\n    }\n  }\n\n  return (\n    <>\n      <Box overflow=\"auto\">\n        <StyledTable size=\"small\" isTiny={isTiny}>\n          <TableHead>\n            <TableRow>\n              <TableCell sx={{ pr: 0 }}>\n                <Box sx={{ width: '1em', height: '1em' }} />\n              </TableCell>\n              <TableCell sx={{ pl: 1 }}>\n                Category\n              </TableCell>\n              <TableCell align=\"right\">US AQI</TableCell>\n              <TableCell align=\"right\">\n                PM2.5 Concentration\n                (µg/m\n                <sup>3</sup>\n                )\n              </TableCell>\n              {!hideAQIDescription && <TableCell align=\"left\">Description</TableCell>}\n              {!hideAQIDescription && <TableCell align=\"left\">CITIESair&apos; Suggested Actions</TableCell>}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {AQIdatabase.map((element, index) => (\n              <TableRow\n                key={index}\n                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n              >\n                <TableCell sx={{ pr: 0 }}>\n                  <Box sx={{ width: '1em', height: '1em', backgroundColor: themePreference === ThemePreferences.light ? element.lightThemeColor : element.darkThemeColor }} />\n                </TableCell>\n                <TableCell sx={{ pl: 1 }}>\n                  {element.category}\n                </TableCell>\n                <TableCell align=\"right\">\n                  {element.aqiUS.low}\n                  &nbsp;\n                  -\n                  &nbsp;\n                  {element.aqiUS.high}\n                </TableCell>\n                <TableCell align=\"right\">\n                  {element.rawPM2_5.low}\n                  &nbsp;\n                  -\n                  &nbsp;\n                  {element.rawPM2_5.high}\n                </TableCell>\n                {!hideAQIDescription && <TableCell align=\"left\">{element.description}</TableCell>}\n                {!hideAQIDescription\n                  && (\n                    <TableCell align=\"left\">\n                      {\n                        parse(element.healthSuggestions.outdoors, {\n                          replace: replacePlainHTMLWithMuiComponents,\n                        })\n                      }\n                    </TableCell>\n                  )}\n              </TableRow>\n            ))}\n          </TableBody>\n        </StyledTable>\n      </Box>\n      {renderAQIchart({ shouldRender: !hideAQIDescription })}\n    </>\n\n  );\n}\n\nexport default AirQualityIndexTable;\n","import { lazy, Suspense } from 'react';\nimport LoadingAnimation from '../../Components/LoadingAnimation';\n\nexport default function ChartSubstituteComponentLoader({ chartSubstituteComponentName }) {\n  return (\n    <Suspense fallback={<LoadingAnimation />}>\n      {(() => {\n        const ChartSubstituteComponent = lazy(\n          () => import(`./${chartSubstituteComponentName}`)\n        );\n        return <ChartSubstituteComponent />;\n      })()}\n    </Suspense>\n  );\n}\n","import { useState } from 'react';\nimport { isMobile } from 'react-device-detect';\n\nimport { Fab, Fade, Popper, Paper, Typography, Stack } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport AirIcon from '@mui/icons-material/Air';\nimport { FadeInButtonForSpeedDial } from './Header/FadeInButtonForSpeedDial';\n\nimport * as Tracking from '../Utils/Tracking';\nimport AirQualityIndexTable from '../Graphs/ChartSubstituteComponents/AirQualityIndexTable';\n\nexport default function AirQualityIndexLegendQuickGlance(props) {\n  const { themePreference } = props;\n  // Mechanism for opening and closing the Quick Glance on hover\n  const [anchorEl, setAnchorEl] = useState(null);\n  const handlePopperOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n    Tracking.sendEventAnalytics(Tracking.Events.airQualityIndexLegendQuickGlance);\n  };\n  const handlePopperClose = () => {\n    setAnchorEl(null);\n  };\n  const open = Boolean(anchorEl);\n\n  return (\n    <>\n      <FadeInButtonForSpeedDial {...props} distanceFromBottomOfWindow=\"5.5rem\">\n        <Fab\n          sx={{ mt: 1 }}\n          aria-owns={open ? Tracking.Events.airQualityIndexLegendQuickGlance : undefined}\n          aria-haspopup=\"true\"\n          onMouseEnter={handlePopperOpen}\n          onMouseLeave={handlePopperClose}\n          onClick={(event) => isMobile && (open ? handlePopperClose() : handlePopperOpen(event))}\n          aria-label={Tracking.Events.airQualityIndexLegendQuickGlance}\n          color=\"primary\"\n        >\n          <Stack direction=\"column\" alignItems=\"center\">\n            <AirIcon fontSize=\"1rem\" />\n            <Typography variant=\"body2\" fontWeight=\"500\">\n              AQI\n            </Typography>\n          </Stack>\n        </Fab>\n      </FadeInButtonForSpeedDial>\n\n      <Popper\n        id={Tracking.Events.airQualityIndexLegendQuickGlance}\n        sx={{\n          pointerEvents: 'none',\n          mt: -1\n        }}\n        open={open}\n        anchorEl={anchorEl}\n        placement=\"top-end\"\n        onClose={handlePopperClose}\n        keepMounted\n        disableRestoreFocus\n        transition\n      >\n        {({ TransitionProps }) => (\n          <Fade {...TransitionProps} timeout={350}>\n            <Paper elevation={8} sx={{ py: 0.5, mb: 1 }}>\n              <Typography sx={{ mx: 2, mt: 1 }} color=\"text.disabled\" variant=\"body1\" fontWeight={500}>\n                AQI at quick glance\n              </Typography>\n              <AirQualityIndexTable isTiny hideAQIDescription themePreference />\n            </Paper>\n          </Fade>\n        )}\n\n      </Popper>\n    </>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport dayjs from 'dayjs';\nimport { styled } from '@mui/material/styles';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { PickersDay } from '@mui/x-date-pickers/PickersDay';\nimport { DateCalendar } from '@mui/x-date-pickers/DateCalendar';\nimport { DayCalendarSkeleton } from '@mui/x-date-pickers/DayCalendarSkeleton';\nimport Card from '@mui/material/Card';\nimport ClickAwayListener from '@mui/base/ClickAwayListener';\n\nconst HighlightedDay = styled(PickersDay)(({ theme }) => ({\n  // styles for dot\n  '&:after, :hover::after': {\n    content: '\".\"',\n    fontSize: '1.5rem',\n    bottom: '-0.5rem',\n    position: 'absolute',\n    color: theme.palette.primary.main,\n    opacity: 0.5\n  },\n  '&:hover::after': {\n    opacity: 1\n  }\n}));\n\nfunction isValidDate(date, validDates) {\n  return validDates.indexOf(dayjs(date).format('YYYY-MM-DD')) >= 0;\n}\n\nfunction CustomDayComponent(props) {\n  const { versionDates = [], day, ...other } = props;\n\n  const isHighlighted = versionDates.indexOf(dayjs(day).format('YYYY-MM-DD')) >= 0;\n\n  return (\n    isHighlighted\n      ? <HighlightedDay {...other} day={day} />\n      : <PickersDay {...other} day={day} />\n  );\n}\n\nexport default function DatasetCalendar(props) {\n  const { smallScreen, onChange, versions } = props;\n\n  const versionDates = versions\n    .filter((version) => version.version.length === 10) // valid date\n    .map((version) => version.version);\n\n  return (\n    <ClickAwayListener onClickAway={() => onChange('close')}>\n      <Card\n        sx={!smallScreen && { position: 'absolute', right: 0, zIndex: 9999 }}\n        raised\n      >\n        <LocalizationProvider dateAdapter={AdapterDayjs}>\n          <DateCalendar\n            loading={!versionDates}\n            format=\"YYYY-MM-DD\"\n            renderLoading={() => <DayCalendarSkeleton />}\n            slots={{\n              day: CustomDayComponent,\n            }}\n            onChange={(value, selectionState) => {\n              if (selectionState === 'finish') {\n                return onChange(dayjs(value).format('YYYY-MM-DD'));\n              }\n              return null;\n            }}\n            slotProps={{\n              day: {\n                versionDates\n              }\n            }}\n            // disable the date if its not a valid date\n            shouldDisableDate={(day) => !isValidDate(day, versionDates)}\n            disableHighlightToday\n            minDate={dayjs(versionDates.slice(-1)[0])}\n            maxDate={dayjs(versionDates[0])}\n          />\n        </LocalizationProvider>\n      </Card>\n    </ClickAwayListener>\n  );\n}\n","// disable eslint for this file\n/* eslint-disable */\nimport { useState, useEffect, useContext } from 'react';\nimport { Container, Avatar, Modal, Tooltip, Box, Link, Typography, Stack, Select, FormControl, MenuItem, Grid, Chip, Dialog, Button, DialogActions, DialogContent, useMediaQuery, Table, TableBody, TableCell, TableHead, TableRow } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\nimport { RawDatasetsMetadataContext } from '../../ContextProviders/RawDatasetsMetadataContext';\n\nimport DownloadIcon from '@mui/icons-material/Download';\nimport DataObjectIcon from '@mui/icons-material/DataObject';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport EventIcon from '@mui/icons-material/Event';\nimport PublishedWithChangesIcon from '@mui/icons-material/PublishedWithChanges';\n\nimport * as Tracking from '../../Utils/Tracking';\nimport { fetchDataFromURL } from './DatasetFetcher';\nimport DatasetCalendar from './DatasetCalendar';\n\nexport default function DatasetDownloadDialog(props) {\n  const { project } = props;\n  const rawDatasetsMetadata = useContext(RawDatasetsMetadataContext);\n  const [datasets, setDatasets] = useState();\n\n  useEffect(() => {\n    if (!project || !rawDatasetsMetadata) return;\n    setDatasets(rawDatasetsMetadata[project?.id]); // get all the dataset(s) of this project\n  }, [project, rawDatasetsMetadata]);\n\n  const theme = useTheme();\n  const smallScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  function getOwnerString(owners) {\n    if (!owners || owners.length === 0) {\n      return 'the relevant owners';\n    } else if (owners.length === 1) {\n      return owners[0];\n    } else if (owners.length === 2) {\n      return owners.join(' and ');\n    } else {\n      const lastOwner = owners.pop();\n      const oxfordCommaOwners = owners.join(', ');\n      return `${oxfordCommaOwners}, and ${lastOwner}`;\n    }\n  }\n\n  return (\n    <>\n      <Button\n        onClick={() => {\n          handleOpen();\n          Tracking.sendEventAnalytics(Tracking.Events.rawDatasetButtonClicked, {\n            project_id: project.id\n          });\n        }}\n        variant=\"contained\"\n      >\n        <DataObjectIcon sx={{ fontSize: '1rem' }} />&nbsp;Raw Dataset\n      </Button>\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        maxWidth=\"lg\"\n        fullWidth\n        fullScreen={smallScreen}\n        keepMounted\n      >\n        {(\n          smallScreen &&\n          <DialogActions justifyContent=\"flex-start\">\n            <Button autoFocus onClick={handleClose}>\n              <ChevronLeftIcon sx={{ fontSize: '1rem' }} />Back\n            </Button>\n          </DialogActions>\n        )}\n\n        <DialogContent sx={{\n          px: smallScreen ? 2 : 3,\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'start',\n          height: '100%'\n        }}>\n          <Chip label={project.title} size=\"small\" sx={{ mb: 1 }} />\n          <Typography variant=\"h6\" >\n            Preview and download raw dataset(s)\n          </Typography>\n\n          <DatasetSelectorAndPreviewer datasets={datasets} smallScreen={smallScreen} project={project} />\n          {\n            datasets &&\n            <Typography variant=\"caption\" sx={{ my: 3, fontStyle: 'italic' }} >\n              This dataset is provided by the CITIES Dashboard with the support of {getOwnerString(project.owners)}. Should you intend to utilize this dataset for your project, research, or publication, we kindly request that you notify us at <Link href='mailto:nyuad.cities@nyu.edu'>nyuad.cities@nyu.edu</Link> to discuss citation requirements.\n            </Typography>\n          }\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n}\n\nconst DatasetSelectorAndPreviewer = (props) => {\n  const { datasets, smallScreen, project } = props;\n  const [previewingDataset, setPreviewingDataset] = useState();\n  const [previewingDatasetId, setPreviewingDatasetId] = useState();\n\n  // Preview the first version of the first dataset initially\n  useEffect(() => {\n    if (datasets?.length > 0) {\n      setPreviewingDataset(datasets[0]?.versions[0]);\n      setPreviewingDatasetId(datasets[0]?.id);\n      fetchDataFromURL(datasets[0]?.versions[0]?.rawLink, 'csv').then((data) => {\n        setPreviewingDataset({ ...datasets[0]?.versions[0], fetchedDataset: data });\n      });\n    }\n  }, [datasets]);\n\n  return (\n    <Grid container justifyContent=\"center\" alignItems=\"start\" spacing={3}>\n      <Grid item sm={12} md={6}>\n        <DatasetsTable\n          datasets={datasets}\n          smallScreen={smallScreen}\n          previewingDataset={previewingDataset}\n          setPreviewingDataset={setPreviewingDataset}\n          previewingDatasetId={previewingDatasetId}\n          setPreviewingDatasetId={setPreviewingDatasetId}\n        />\n      </Grid>\n      <Grid item sm={12} md={6} maxWidth={smallScreen ? '100%' : 'unset'} sx={{ mt: 1 }}>\n        <PreviewDataset\n          previewingDataset={previewingDataset}\n          previewingDatasetId={previewingDatasetId}\n          project={project}\n          smallScreen={smallScreen}\n        />\n      </Grid>\n    </Grid>\n  )\n};\n\nconst DatasetsTable = (props) => {\n  const { datasets, smallScreen, previewingDataset, setPreviewingDataset, previewingDatasetId, setPreviewingDatasetId } = props;\n  return (\n    <Table\n      size=\"small\"\n      sx={{\n        tableLayout: 'fixed',\n        '& td, div, .MuiMenuItem-root': {\n          fontSize: smallScreen ? '0.625rem' : '0.8rem'\n        }\n      }}\n    >\n      <TableHead>\n        <TableRow>\n          <TableCell sx={{ pl: 1 }}>\n            Dataset\n          </TableCell>\n          <TableCell sx={{ width: smallScreen ? '9.5rem' : '11rem' }}>Version</TableCell>\n          <TableCell sx={{ width: smallScreen ? '5rem' : '6rem' }}>\n            Size\n          </TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {datasets?.map((dataset) => (\n          <Dataset\n            smallScreen={smallScreen}\n            dataset={dataset}\n            previewingDataset={previewingDataset}\n            setPreviewingDataset={setPreviewingDataset}\n            isPreviewing={dataset.id === previewingDatasetId}\n            setPreviewingDatasetId={setPreviewingDatasetId}\n          />\n        ))}\n      </TableBody>\n    </Table>\n  )\n}\n\nconst Dataset = (props) => {\n  const { smallScreen, dataset, setPreviewingDataset, isPreviewing, previewingDatasetId, setPreviewingDatasetId } = props;\n\n  const [fetchedDatasets, setFetchedDatasets] = useState({});\n  const NUM_RECENT_VERSIONS = 3;\n\n  const latestVersionOfThisDataset = dataset?.versions[0] || {};\n  const [showCalendar, setShowCalendar] = useState(false);\n  const [selectedVersionOfThisDataset, setSelectedVersionOfThisDataset] = useState(latestVersionOfThisDataset);\n\n  // only show NUM_RECENT_VERSIONS rows in Dropdown\n  const visibleVersions = dataset?.versions.slice(0, NUM_RECENT_VERSIONS);\n  // if currently selected version is not in first NUM_RECENT_VERSION rows,\n  // add it to the list\n  if (!visibleVersions.find((version) => version == selectedVersionOfThisDataset)) {\n    visibleVersions.push({ ...selectedVersionOfThisDataset, isOlderVersion: true });\n  }\n\n  // only show Calendar option if there are more than NUM_RECENT_VERSIONS versions\n  const shouldShowCalendar = dataset?.versions.length > NUM_RECENT_VERSIONS;\n\n  const handleVersionChange = (event) => {\n    const selectedVal = event.target.value;\n    if (selectedVal === 'Calendar') {\n      setShowCalendar(true);\n      return;\n    }\n    // Loop through the array (allVersionsOfThisDataset) to find the one with the selected version\n    const selectedVersion = dataset?.versions.find(aDatasetVersion => {\n      return aDatasetVersion.version === selectedVal;\n    });\n    setSelectedVersionOfThisDataset(selectedVersion);\n    setPreviewingDatasetId(dataset.id);\n    setPreviewingDataset(selectedVersion);\n\n    fetchThisDataset(selectedVersion);\n  };\n\n  const handleCalendarChange = (event) => {\n    // close calendar after selecting\n    setShowCalendar(false)\n    if (event === 'close') { // click outside of card\n      return\n    }\n\n    handleVersionChange({ target: { value: event } });\n  }\n\n  const fetchThisDataset = (selectedVersion) => {\n    // If this dataset version hasn't been fetched yet,\n    // fetch it and append it into the object fetchedDatasets\n    if (!fetchedDatasets[selectedVersion.version]) {\n      fetchDataFromURL(selectedVersion.rawLink, 'csv').then((data) => {\n        const selectedVersionWithFetchedDataset = { ...selectedVersion, fetchedDataset: data };\n        setPreviewingDataset(selectedVersionWithFetchedDataset);\n        setFetchedDatasets({\n          ...fetchedDatasets,\n          [selectedVersionWithFetchedDataset.version]: selectedVersionWithFetchedDataset\n        });\n      });\n    }\n    // If it has been fetched before, simply get it from memory \n    else {\n      setPreviewingDataset(fetchedDatasets[selectedVersion.version]);\n    }\n  }\n\n  const setThisDatasetToPreview = () => {\n    if (previewingDatasetId !== dataset.id) {\n      setPreviewingDatasetId(dataset.id);\n      setPreviewingDataset(selectedVersionOfThisDataset);\n      fetchThisDataset(selectedVersionOfThisDataset);\n    }\n  }\n\n  const theme = useTheme();\n\n  const formatFileSize = (sizeInBytes) => {\n    if (!sizeInBytes) return;\n\n    if (sizeInBytes < 1024 * 1024) {\n      return (sizeInBytes / 1024).toFixed(1) + \" KB\";\n    } else {\n      return (sizeInBytes / (1024 * 1024)).toFixed(1) + \" MB\";\n    }\n  }\n\n  return (\n    <>\n      <TableRow key={dataset.id}>\n        <TableCell\n          sx={{\n            pl: 1,\n            cursor: 'pointer',\n            background: isPreviewing && theme.palette.background.NYUpurpleLight\n          }}\n          onClick={setThisDatasetToPreview}>\n          {selectedVersionOfThisDataset?.name}\n        </TableCell>\n\n        <TableCell sx={{ position: 'relative', background: isPreviewing && theme.palette.background.NYUpurpleLight }}>\n          {showCalendar &&\n            (smallScreen ? <Modal\n              open={showCalendar}\n              sx={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center'\n              }}\n            >\n              <DatasetCalendar\n                onChange={handleCalendarChange}\n                smallScreen={smallScreen}\n                versions={dataset?.versions}\n              />\n            </Modal>\n              : <DatasetCalendar\n                onChange={handleCalendarChange}\n                versions={dataset?.versions}\n              />)}\n          <FormControl size=\"small\">\n            <Select\n              value={selectedVersionOfThisDataset?.version}\n              onClick={() => {\n                if (dataset.versions.length <= 1) setThisDatasetToPreview();\n              }}\n              onChange={handleVersionChange}\n              variant=\"standard\"\n              MenuProps={{ disablePortal: true }}\n            >\n              {visibleVersions.map((aDatasetVersion, index) => (\n                <MenuItem\n                  key={aDatasetVersion.version}\n                  value={aDatasetVersion.version}\n                  sx={[\n                    (index === visibleVersions.length - 1) && {\n                      mb: -0.75\n                    },\n                    aDatasetVersion.isOlderVersion && {\n                      marginTop: '1rem',\n                      '&::before': {\n                        content: '\"\"',\n                        borderTop: `2px dotted ${theme.palette.text.secondary}`,\n                        width: '1rem',\n                        height: '1rem',\n                        position: 'absolute',\n                        top: 0,\n                        left: '50%',\n                        transform: 'translate(-50%, -50%)'\n                      }\n                    }\n                  ]}\n                >\n                  <Stack direction=\"row\" alignItems=\"center\">\n                    {aDatasetVersion.version}\n                    { /* 'LATEST' chip for latest version */}\n                    {aDatasetVersion === latestVersionOfThisDataset &&\n                      <Tooltip title=\"Latest version\" enterDelay={0} leaveDelay={200}>\n                        <Avatar sx={{\n                          ml: 0.5,\n                          width: '1rem',\n                          height: '1rem',\n                          background: theme.palette.success.main\n                        }}>\n                          <PublishedWithChangesIcon sx={{ width: '0.8rem', height: '0.8rem' }} />\n                        </Avatar>\n                      </Tooltip>\n                    }\n                  </Stack>\n                </MenuItem>\n              ))}\n\n              {shouldShowCalendar && <MenuItem\n                key=\"Calendar\"\n                value=\"Calendar\"\n                sx={{ pt: 1, mt: 1, mb: -0.75, borderTop: '0.5px solid' }}\n              >\n                <Stack direction=\"row\" alignItems=\"center\">\n                  Older Versions\n                  <EventIcon fontSize='small' sx={{ ml: 0.5 }} />\n                </Stack>\n              </MenuItem>\n              }\n            </Select>\n          </FormControl>\n        </TableCell>\n        <TableCell sx={{ background: isPreviewing && theme.palette.background.NYUpurpleLight }}>\n          {formatFileSize(selectedVersionOfThisDataset?.sizeInBytes)}\n        </TableCell>\n      </TableRow >\n    </>\n  )\n}\n\nconst PreviewDataset = (props) => {\n  const { previewingDataset, previewingDatasetId, project, smallScreen } = props;\n  const downloadDatasetName = `[${project.id}] ${previewingDataset?.name}-${previewingDataset?.version}.csv`;\n\n  const theme = useTheme();\n\n  const downloadPreviewingDataset = () => {\n    if (!previewingDataset?.fetchedDataset) return;\n\n    const blob = new Blob([previewingDataset?.fetchedDataset], { type: 'application/octet-stream' }); // create a Blob with the raw data\n    const url = URL.createObjectURL(blob); // create a download link for the Blob\n    const downloadLink = document.createElement('a');\n    downloadLink.href = url;\n    downloadLink.download = downloadDatasetName;\n    document.body.appendChild(downloadLink);\n    downloadLink.click(); // simulate a click on the download link\n    URL.revokeObjectURL(url); // clean up by revoking the object URL\n    document.body.removeChild(downloadLink);\n  };\n\n  const [formattedData, setFormattedData] = useState('');\n  const [rowIndices, setRowIndices] = useState('');\n  const numFirstLastRowsToPreview = 5;\n\n  useEffect(() => {\n    if (!previewingDataset?.fetchedDataset) return;\n\n    const csvData = previewingDataset?.fetchedDataset;\n    const lines = csvData.split('\\n');\n    const numRows = lines.length;\n\n    if (numRows <= numFirstLastRowsToPreview * 2) {\n      setFormattedData(csvData);\n      setRowIndices(Array.from({ length: numRows }, (_, index) => index + 1).join('\\n')); // +1 because rowNumber starts at 1 while index starts at 0\n    } else {\n\n      const firstRows = lines.slice(0, numFirstLastRowsToPreview);\n      const lastRows = lines.slice(numRows - numFirstLastRowsToPreview);\n\n      const numOfHiddenRows = numRows - 2 * numFirstLastRowsToPreview;\n\n      const middleRow = [`... [${numOfHiddenRows} rows hidden] ...`];\n\n      setFormattedData(firstRows.concat(middleRow).concat(lastRows).join('\\n'));\n      setRowIndices(\n        Array.from({\n          length: numFirstLastRowsToPreview * 2 + 1 // +1 to account for the middleRow\n        },\n          (_, index) => {\n            const rowIndex = index + 1; // +1 because rowNumber starts at 1 while index starts at 0\n            // Indices for the first rows\n            if (rowIndex < numFirstLastRowsToPreview + 1) {\n              return rowIndex;\n            }\n            // No index for the middle row\n            else if (rowIndex == numFirstLastRowsToPreview + 1) {\n              return '';\n            }\n            // Indices for the last rows\n            else {\n              return numOfHiddenRows + rowIndex - 1;\n            }\n          })\n          .join('\\n'));\n    }\n\n  }, [previewingDataset]);\n\n  return (\n    <Stack spacing={1}>\n      <Box sx={{ '& *': { fontFamily: \"monospace !important\" } }}>\n        <Stack direction=\"row\">\n          <Typography variant='body2' gutterBottom fontWeight={500}>\n            {previewingDataset ?\n              `Previewing: ${previewingDataset.name} (${previewingDataset?.version})`\n              : 'Not previewing any dataset'}\n          </Typography>\n        </Stack>\n\n        <Box\n          component=\"pre\"\n          sx={{\n            overflowX: 'auto',\n            color: theme.palette.text.secondary,\n            backgroundColor: theme.palette.customBackground,\n            p: 2,\n            pt: 1.5,\n            borderRadius: theme.spacing(1),\n            borderTopLeftRadius: 0,\n            minHeight: \"5rem\",\n            width: smallScreen ? '100%' : 'unset',\n            marginTop: 0\n          }}\n        >\n          <Stack direction=\"row\" sx={{ fontSize: smallScreen ? '0.625rem !important' : '0.8rem !important' }}>\n            <Box sx={{ mr: 2, userSelect: 'none' }}>\n              {rowIndices}\n            </Box>\n            <Box>\n              {formattedData}\n            </Box>\n          </Stack>\n        </Box>\n      </Box>\n      <Box textAlign=\"center\" >\n        <Button\n          variant=\"contained\"\n          sx={{\n            textTransform: 'none',\n            textAlign: 'left',\n            lineHeight: 1.1,\n            px: 1.5,\n            py: 1\n          }}\n          onClick={() => {\n            downloadPreviewingDataset();\n            Tracking.sendEventAnalytics(Tracking.Events.rawDatasetDownloaded, {\n              project_id: project.id,\n              dataset_id: previewingDatasetId,\n              dataset_name: previewingDataset.name,\n              dataset_version: previewingDataset.version\n            });\n          }}\n          disabled={!previewingDataset}\n        >\n          <DownloadIcon sx={{ fontSize: '1.25rem', mr: 0.5 }} />\n          {previewingDataset ? downloadDatasetName : \"No dataset available to download\"}\n        </Button>\n      </Box>\n    </Stack >\n  )\n}","// disable eslint for this file\n/* eslint-disable */\nimport { Button, Box } from \"@mui/material\";\nimport { Link } from 'react-router-dom';\nimport TvIcon from '@mui/icons-material/Tv';\nimport HoverMenu from 'material-ui-popup-state/HoverMenu';\nimport PopupState, { bindHover, bindFocus, bindMenu } from 'material-ui-popup-state';\nimport MenuItemAsNavLink from \"./Header/MenuItemAsNavLink\";\nimport NavLinkBehavior from \"./Header/NavLinkBehavior\";\n\nconst ScreenDialog = ({ schoolID, screens }) => {\n  if (!Array.isArray(screens)) return null;\n\n  if (screens.length <= 1) return <LinkButtonToScreen url={`/screen/${schoolID}`} />\n  else return <DialogToScreen schoolID={schoolID} screens={screens} />\n};\n\nconst DialogToScreen = ({ schoolID, screens }) => {\n  return (\n    <PopupState variant=\"popover\" popupId=\"tv-screens-list\">\n      {(popupState) => (\n        <>\n          <Button\n            variant=\"contained\"\n            {...bindHover(popupState)}\n            {...bindFocus(popupState)}\n          >\n            <TvIcon sx={{ fontSize: '1rem' }} />&nbsp;TV Screens List\n          </Button>\n          <HoverMenu\n            {...bindMenu(popupState)}\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n            onClick={popupState.close}\n          >\n            {\n              screens.map((screen, index) => (\n                <MenuItemAsNavLink\n                  key={index}\n                  behavior={NavLinkBehavior.toNewPage}\n                  to={`/screen/${schoolID}/${screen.screen_name}`}\n                  label={screen.location_long}\n                  sx={{ fontSize: '0.8rem' }}\n                />\n              ))}\n          </HoverMenu>\n        </>\n      )}\n    </PopupState>\n  )\n}\n\nconst LinkButtonToScreen = ({ url }) => {\n  return (\n    <Button\n      variant=\"contained\"\n      component={Link}\n      to={url}\n    >\n      <TvIcon sx={{ fontSize: '1rem' }} />&nbsp;TV Screen\n    </Button>\n  )\n}\n\nexport default ScreenDialog;","// disable eslint for this file\n/* eslint-disable */\n\nimport { useState } from \"react\";\nimport { Menu, MenuItem, MenuList, FormControl, Select, InputLabel } from \"@mui/material\";\nimport { CustomChip } from \"../Project/Project\";\n\nimport PlaceIcon from '@mui/icons-material/Place';\n\nexport const SchoolSelector = (props) => {\n  const { currentSchoolID, currentSchoolName, allowedSchoolsData, fetchDashboardData } = props;\n  if (!Array.isArray(allowedSchoolsData) || allowedSchoolsData.length <= 1)\n    return (\n      <CustomChip\n        icon={<PlaceIcon />}\n        label={currentSchoolName}\n        tooltipTitle={\"School\"}\n      />\n    );\n\n  const [schoolID, setSchoolID] = useState('');\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleItemSelect = (schoolID) => () => {\n    if (currentSchoolID !== schoolID) {\n      setSchoolID(schoolID);\n      fetchDashboardData(schoolID);\n    }\n    handleClose();\n  };\n\n  return (\n    <>\n      <CustomChip\n        icon={<PlaceIcon />}\n        label={currentSchoolName}\n        tooltipTitle={\"Click to Select School\"}\n        clickable\n        onClick={handleClick}\n        aria-controls={open ? 'basic-menu' : undefined}\n        aria-haspopup=\"true\"\n        aria-expanded={open ? 'true' : undefined}\n      />\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n        MenuListProps={{\n          'aria-labelledby': 'basic-button',\n        }}\n      >\n        <MenuList dense>\n          {allowedSchoolsData.map((school, index) => (\n            <MenuItem\n              key={index}\n              onClick={handleItemSelect(school.school_id)}\n            >\n              {school.name}\n            </MenuItem>\n          ))}\n        </MenuList>\n      </Menu>\n    </>\n  );\n};\n\n","// disable eslint for this file\n/* eslint-disable */\nimport { useState } from 'react';\nimport { styled } from '@mui/material/styles';\n\nimport MuiAccordion from '@mui/material/Accordion';\nimport MuiAccordionSummary from '@mui/material/AccordionSummary';\nimport MuiAccordionDetails from '@mui/material/AccordionDetails';\nimport { Box, Typography, Tooltip } from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\nimport * as Tracking from '../../Utils/Tracking';\n\nconst StyledAccordion = styled(MuiAccordion)(({ theme, expanded }) => ({\n  color: theme.palette.text.secondary,\n  backgroundImage: 'none',\n  backgroundColor: expanded ? theme.palette.background.default : 'transparent',\n  boxShadow: expanded ? theme.shadows : 'none',\n  transition: 'none',\n}));\n\nconst StyledAccordionSummary = styled(MuiAccordionSummary)(({ theme, expanded }) => ({\n  marginTop: expanded ? theme.spacing(3) : 0,\n  flexDirection: 'row-reverse',\n  paddingLeft: expanded ? theme.spacing(1) : 0,\n  '& .MuiTypography-root': {\n    color: theme.palette.text.primary,\n    textDecoration: 'underline',\n    transition: 'none',\n    '&:hover': {\n      color: theme.palette.primary.main,\n    },\n  },\n}));\n\nconst ExpandableSection = ({ title, content }) => {\n  const [expanded, setExpanded] = useState(undefined);\n\n  const handleAccordionChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : undefined);\n\n    Tracking.sendEventAnalytics(isExpanded ? Tracking.Events.expandSampleData : Tracking.Events.collapseSampleData);\n  };\n\n  return (\n    <Box>\n      <StyledAccordion\n        expanded={expanded === \"panel1\"}\n        onChange={handleAccordionChange(\"panel1\")}\n        transitionDuration={0}\n      >\n        <StyledAccordionSummary expanded={expanded} expandIcon={<ExpandMoreIcon />} aria-controls=\"panel1a-content\" id=\"panel1a-header\">\n          <Tooltip title={expanded ? \"Click to collapse\" : \"Click to expand\"} enterDelay={0} leaveDelay={200}>\n            <Typography component=\"a\" variant=\"body1\">\n              {title}\n            </Typography>\n          </Tooltip>\n        </StyledAccordionSummary>\n        <MuiAccordionDetails>\n          {content}\n        </MuiAccordionDetails>\n      </StyledAccordion>\n    </Box>\n  );\n}\n\nexport default ExpandableSection;","const AirQualityExplanation = {\n  title: \"Explanation of the US Air Quality Index (AQI)\",\n  subtitle: \"CITIESair uses the <a href='https://www.airnow.gov/aqi/aqi-basics/'>Air Quality Index (AQI)</a> developed by the United States Environmental Protection Agency (EPA) to effectively communicate different levels of PM2.5 air pollution. To calculate the AQI from the raw measurement of PM2.5 concentration (µg/m³), different breakpoints and piecewise linear function are utilized (read more <a href='https://en.wikipedia.org/wiki/Air_quality_index#United_States'>here</a>). Higher AQI values correspond to poorer air quality and greater heath risks to humans.<br><br>The US EPA sets thresholds for PM2.5 concentration: <sup>[1]</sup><ul><li><b>Annual average</b>: 12.0 µg/m³, corresponding to US AQI <b>50</b></li><li><b>24-hour average</b>: 35.0 µg/m³, corresponding to US AQI <b>100</b></li></ul>In 2021, the World's Heath Organization (WHO) proposed a new guideline for PM2.5<sup>[2]</sup> with stricter thresholds than those of the US EPA:<ul><li><b>Annual average</b>: 5.0 µg/m³, corresponding to US AQI <b>21</b></li><li><b>24-hour average</b>: 15.0 µg/m³, corresponding to US AQI <b>56</b></li></ul>\",\n  reference: \"[1] \\\"National Ambient Air Quality Standards (NAAQS) for PM.\\\" EPA, Environmental Protection Agency, https://www.epa.gov/pm-pollution/national-ambient-air-quality-standards-naaqs-pm.<br>[2] World Health Organization. \\\"WHO global air quality guidelines: particulate matter (PM2. 5 and PM10), ozone, nitrogen dioxide, sulfur dioxide and carbon monoxide: executive summary.\\\" (2021).\",\n}\n\nexport default AirQualityExplanation;","// disable eslint for this file\n/* eslint-disable */\nimport { useState, useEffect, useContext } from 'react';\nimport { LinkContext } from '../../ContextProviders/LinkContext';\nimport { TabContext } from '../../ContextProviders/TabContext';\nimport parse from 'html-react-parser';\nimport ChartComponent from '../../Graphs/ChartComponent';\nimport UppercaseTitle from '../../Components/UppercaseTitle';\nimport { Box, Typography, Container, Divider, Chip, Grid, Tooltip, Stack } from '@mui/material';\n\nimport { useTheme } from '@mui/material/styles';\n\nimport ThemePreferences from '../../Themes/ThemePreferences';\n\nimport AirQualityIndexLegendQuickGlance from '../../Components/AirQualityHelper';\n\nimport jsonData from '../../section_data.json';\n\nimport PersonIcon from '@mui/icons-material/Person';\nimport EmailIcon from '@mui/icons-material/Email';\nimport PublishedWithChangesIcon from '@mui/icons-material/PublishedWithChanges';\nimport BarChartIcon from '@mui/icons-material/BarChart';\n\nimport { replacePlainHTMLWithMuiComponents } from '../../Utils/Utils';\nimport DatasetDownloadDialog from '../../Components/DatasetDownload/DatasetDownloadDialog';\nimport ScreenDialog from '../../Components/ScreenDialog';\n\nimport { scrollToSection } from '../../Components/Header/MenuItemAsNavLink';\nimport FullWidthBox from '../../Components/FullWidthBox';\n\nimport * as Tracking from '../../Utils/Tracking';\n\nimport ChartSubstituteComponentLoader from '../../Graphs/ChartSubstituteComponents/ChartSubstituteComponentLoader';\n\nimport CurrentAQIGrid from '../../Components/CurrentAQIGrid';\nimport { SchoolSelector } from \"../Dashboard/SchoolSelector\";\n\nimport AirQualityIndexTable from '../../Graphs/ChartSubstituteComponents/AirQualityIndexTable';\nimport ExpandableSection from './ExpandableSection';\nimport AirQualityExplanation from '../../Utils/AirQualityExplanation';\n\n// Custom Chip component to display metadata\nexport const CustomChip = (props) => {\n  const { tooltipTitle, ...otherProps } = props;\n  return (\n    <Tooltip title={tooltipTitle} enterDelay={0} leaveDelay={200}>\n      <Chip\n        size=\"small\"\n        {...otherProps}\n      />\n    </Tooltip>\n  );\n}\n\nconst Project = ({ themePreference, currentSchoolData, dashboardData, allowedSchoolsData, fetchDashboardData, temperatureUnitPreference }) => {\n  const [_, __, chartsTitlesList, setChartsTitlesList] = useContext(LinkContext);\n\n  const [loading, setLoading] = useState(false);\n  const [tab, setTab] = useContext(TabContext);\n\n  let lastUpdate;\n\n  // Update the chart title list for quick navigation\n  useEffect(() => {\n    if (!dashboardData?.charts) return;\n\n    const chartsTitles = dashboardData?.charts.map((element, index) => ({ chartTitle: element.title, chartID: `chart-${index + 1}` }));\n    setChartsTitlesList(chartsTitles);\n  }, [dashboardData]);\n\n  const theme = useTheme();\n\n  return (\n    <>\n      <Box width=\"100%\">\n        <AirQualityIndexLegendQuickGlance themePreference={themePreference} />\n\n        <FullWidthBox backgroundColor='customAlternateBackground'>\n          <Container sx={{ pt: 5, pb: 3 }}>\n            <UppercaseTitle text={dashboardData?.title} />\n\n            <Grid container spacing={1} sx={{ mt: -3, pb: 3 }}>\n              <Grid item>\n                <SchoolSelector\n                  currentSchoolID={currentSchoolData?.school_id}\n                  currentSchoolName={currentSchoolData?.name}\n                  allowedSchoolsData={allowedSchoolsData}\n                  fetchDashboardData={fetchDashboardData}\n                />\n              </Grid>\n\n              <Grid item>\n                <CustomChip\n                  icon={<PersonIcon />}\n                  label={currentSchoolData?.contactPerson}\n                  tooltipTitle=\"Contact Person\"\n                />\n              </Grid>\n\n              <Grid item>\n                <CustomChip\n                  icon={<EmailIcon />}\n                  label={currentSchoolData?.contactEmail}\n                  tooltipTitle=\"Contact Email\"\n                  component=\"a\"\n                  href={`mailto:${currentSchoolData?.contactEmail}`}\n                  clickable\n                />\n              </Grid>\n\n              <Grid item>\n                <CustomChip\n                  icon={<BarChartIcon />}\n                  label={`${dashboardData?.charts?.length} Chart${dashboardData?.charts?.length > 1 ? \"s\" : \"\"}`}\n                  tooltipTitle=\"Number of Charts\"\n                  onClick={() => {\n                    scrollToSection(jsonData.charts.id);\n                    // Tracking.sendEventAnalytics(Tracking.Events.internalNavigation,\n                    //   {\n                    //     destination_id: jsonData.charts.id,\n                    //     destination_label: jsonData.dashboardData?.toString(),\n                    //     origin_id: 'chip'\n                    //   })\n                  }}\n                />\n              </Grid>\n\n              {\n                lastUpdate &&\n                <Grid item>\n                  <CustomChip\n                    icon={<PublishedWithChangesIcon />}\n                    label={`Last update: ${lastUpdate}`}\n                    tooltipTitle=\"Last Update\" />\n                </Grid>\n              }\n            </Grid>\n\n            <Box textAlign=\"center\" sx={{ mb: 2 }}>\n              <CurrentAQIGrid\n                currentSensorsData={currentSchoolData?.sensors}\n                isScreen={false}\n                temperatureUnitPreference={temperatureUnitPreference}\n              />\n            </Box>\n            <Typography\n              component=\"div\"\n              variant=\"body1\"\n              color=\"text.secondary\"\n              sx={{\n                textAlign: 'justify', pb: 2, mb: 0, \"& table *\": {\n                  color: `${theme.palette.text.secondary}`\n                }\n              }}\n              gutterBottom\n            >\n              {parse(dashboardData?.description || '', {\n                replace: replacePlainHTMLWithMuiComponents,\n              })}\n            </Typography>\n            <Stack direction=\"row\" spacing={2}>\n              <ScreenDialog schoolID={currentSchoolData?.school_id} screens={currentSchoolData?.screens} />\n\n              {/* <DatasetDownloadDialog project={project} /> */}\n\n            </Stack>\n            <ExpandableSection\n              title={AirQualityExplanation.title}\n              content={(\n                <>\n                  <AirQualityIndexTable themePreference={themePreference} />\n                  <Typography\n                    component=\"div\"\n                    variant=\"body1\"\n                    color=\"text.secondary\"\n                    sx={{ mt: 2 }}\n                  >\n                    {parse(AirQualityExplanation.subtitle, {\n                      replace: replacePlainHTMLWithMuiComponents,\n                    })}\n                  </Typography>\n                  <ExpandableSection\n                    title={\"Reference\"}\n                    content={(\n                      <Typography variant=\"caption\" color=\"text.secondary\">\n                        {parse(AirQualityExplanation.reference, {\n                          replace: replacePlainHTMLWithMuiComponents,\n                        })}\n                      </Typography>\n                    )}\n                  />\n                </>\n              )}\n            />\n\n          </Container>\n        </FullWidthBox>\n\n        <Box id={jsonData.charts.id}>\n          {dashboardData?.charts?.map((element, index) => (\n            <FullWidthBox\n              key={index}\n              backgroundColor={\n                index % 2 != 0 && 'customAlternateBackground'\n              }\n            >\n              <Container\n                sx={{ pt: 4, pb: 4 }}\n                height=\"auto\"\n                className={themePreference === ThemePreferences.dark ? 'dark' : ''}\n                id={`chart-${index + 1}`}\n              >\n                <Typography variant=\"h6\" color=\"text.primary\">\n                  {index + 1}. {element.title}\n                </Typography>\n\n                {/* Either display the regular ChartComponent, or substitute with a customized component in ../../Graphs/ChartSubstituteComponents/ (if specified) */}\n                {element.chartSubstituteComponentName ?\n                  <ChartSubstituteComponentLoader chartSubstituteComponentName={element.chartSubstituteComponentName} />\n                  : (\n                    <ChartComponent\n                      chartData={{\n                        chartIndex: index,\n                        ...element,\n                      }}\n                    />\n                  )}\n\n                <Box sx={{ my: 3 }}>\n                  <Typography\n                    component=\"div\"\n                    variant=\"body1\"\n                    color=\"text.secondary\"\n                  >\n                    {element.subtitle && parse(element.subtitle, {\n                      replace: replacePlainHTMLWithMuiComponents,\n                    })}\n                    {Object.keys(tab)[index] == index &&\n                      element.subcharts &&\n                      element.subcharts[Object.values(tab)[index]]\n                        .subchartSubtitle &&\n                      parse(\n                        element.subcharts[Object.values(tab)[index]]\n                          .subchartSubtitle, {\n                        replace: replacePlainHTMLWithMuiComponents,\n                      }\n                      )}\n                  </Typography>\n                  <Typography variant=\"caption\" color=\"text.secondary\">\n                    {element.reference && parse(element.reference, {\n                      replace: replacePlainHTMLWithMuiComponents,\n                    })}\n                    {Object.keys(tab)[index] == index &&\n                      element.subcharts &&\n                      element.subcharts[Object.values(tab)[index]].reference &&\n                      parse(\n                        element.subcharts[Object.values(tab)[index]].reference, {\n                        replace: replacePlainHTMLWithMuiComponents,\n                      }\n                      )}\n                  </Typography>\n                </Box>\n              </Container>\n            </FullWidthBox>\n          ))}\n        </Box>\n\n        <Divider />\n      </Box>\n    </>\n  );\n};\n\nexport default Project;\n","// disable eslint for this file\n/* eslint-disable */\n\nimport { useState, useEffect, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { fetchDataFromURL } from \"../../Components/DatasetDownload/DatasetFetcher\";\nimport Project from \"../Project/Project\";\nimport { processCurrentSensorsData } from \"../../Utils/ApiUtils\";\nimport { LinkContext } from \"../../ContextProviders/LinkContext\";\n\nimport { UserContext } from \"../../ContextProviders/UserContext\";\n\nconst Dashboard = ({ themePreference, temperatureUnitPreference, title }) => {\n  // Update the page's title\n  useEffect(() => {\n    document.title = title;\n  }, [title]);\n\n  const [_, setCurrentPage, __, ___] = useContext(LinkContext);\n  useEffect(() => {\n    setCurrentPage('dashboard');\n  }, []);\n\n  const { user } = useContext(UserContext);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (user.checkedAuthentication === true && user.authenticated === false) {\n      navigate('/login');\n    }\n  }, [user])\n\n  const [dashboardData, setDashboardData] = useState({});\n  const [currentSchoolData, setCurrentSchoolData] = useState({\n    school_id: null,\n    name: null,\n    contactPerson: null,\n    contactEmail: null,\n    sensors: null\n  });\n  const [allowedSchoolsData, setAllowedSchoolsData] = useState([]);\n\n  const fetchDashboardData = (optionalSchoolID) => {\n    let url;\n    if (optionalSchoolID) url = `https://api.citiesair.com/dashboard/${optionalSchoolID}`;\n    else url = 'https://api.citiesair.com/dashboard';\n\n    fetchDataFromURL(url, 'json', true)\n      .then(data => {\n        if (data.currentSchool?.sensors) {\n          const processedCurrentSensorData = processCurrentSensorsData(data.currentSchool?.sensors);\n          setCurrentSchoolData({\n            ...data.currentSchool, sensors: processedCurrentSensorData\n          });\n        }\n        else {\n          setCurrentSchoolData(data.currentSchool);\n        }\n\n        setDashboardData(data.dashboard);\n        setAllowedSchoolsData(data.allowedSchools || []);\n      })\n  }\n\n  useEffect(() => {\n    fetchDashboardData();\n  }, []);\n\n  return (\n    <>\n      <Project\n        themePreference={themePreference}\n        currentSchoolData={currentSchoolData}\n        dashboardData={dashboardData}\n        allowedSchoolsData={allowedSchoolsData}\n        fetchDashboardData={fetchDashboardData}\n        temperatureUnitPreference={temperatureUnitPreference}\n      />\n    </>\n  )\n};\n\nexport default Dashboard;","// ---------- Calculate time difference and return appropriate format\nexport const getFormattedElapsedTimeFromNow = (dateString) => {\n  const inputDate = new Date(dateString);\n  const currentDate = new Date();\n  const timeDifference = currentDate - inputDate;\n\n  // Calculate time differences in seconds, minutes, hours, and days\n  const seconds = Math.floor(timeDifference / 1000);\n  const minutes = Math.floor(seconds / 60);\n  const hours = Math.floor(minutes / 60);\n  const days = Math.floor(hours / 24);\n\n  // Determine the most prominent time unit\n  if (days > 0) {\n    return `${days}d`;\n  } else if (hours > 0) {\n    return `${hours}h`;\n  } else if (minutes > 0) {\n    return `${minutes}m`;\n  } else {\n    return `${seconds}s`;\n  }\n}\n\n// ---------- Sensor status\nexport const SensorStatus = {\n  active: \"active\",\n  temporaryOffline: \"temporaryOffline\",\n  offline: \"offline\"\n};\n\nconst SensorStatusCriteria = [\n  {\n    name: SensorStatus.active,\n    cutoffInHours: {\n      low: 0,\n      high: 2\n    }\n  },\n  {\n    name: SensorStatus.temporaryOffline,\n    cutoffInHours: {\n      low: 3,\n      high: 6\n    }\n  },\n  {\n    name: SensorStatus.offline,\n    cutoffInHours: {\n      low: 7,\n      high: Infinity\n    }\n  }\n];\n\nexport const calculateSensorStatus = (lastSeenInHours) => {\n  for (let i = 0; i < SensorStatusCriteria.length; i++) {\n    const category = SensorStatusCriteria[i];\n    if (category.cutoffInHours.low <= lastSeenInHours && lastSeenInHours <= category.cutoffInHours.high) {\n      return category.name;\n    }\n  }\n}\n\nexport const returnSensorStatus = (sensorData) => {\n  switch (sensorData.sensor_status) {\n    case SensorStatus.active:\n      return null;\n    case SensorStatus.temporaryOffline:\n      return `Last seen: ${sensorData.lastSeen}h ago`;\n    case SensorStatus.offline:\n      return \"Sensor offline\";\n    default:\n      return null;\n  }\n}\n\n// ----- Misc\nexport const capitalizeFirstCharacter = (inputString) => {\n  if (inputString) return inputString.charAt(0).toUpperCase() + inputString.slice(1);\n  else return null;\n};\n\nexport const getDomainName = (url) => {\n  return new URL(url).hostname;\n}\n\nexport const getUrlAfterScreen = (url) => {\n  const screenString = 'screen';\n  const urlComponents = url.split(screenString);\n  return `${screenString}${urlComponents.pop()}`;\n}\n\nexport const removeLastDirectoryFromURL = (url) => {\n  const urlComponents = url.split('/');\n  // Remove the last component (directory)\n  urlComponents.pop();\n  // Reconstruct the URL with the last directory removed\n  return urlComponents.join('/') + '/';\n}\n\nexport const areDOMOverlapped = (rect1, rect2) => {\n  if (!(rect1.bottom < rect2.top || rect1.top > rect2.bottom)) {\n    if (rect1.top < rect2.top) return -1;\n    else return 1;\n  }\n  else return 0;\n}\n","import AQIdatabase from \"./AirQualityIndexHelper\";\n\n// Helper function to categorize AQI\nfunction linearPieceWise(aqiHigh, aqiLow, concenHigh, concenLow, val) {\n  return parseInt(\n    ((aqiHigh - aqiLow) / (concenHigh - concenLow)) * (val - concenLow) + aqiLow\n  );\n}\n// Returns AQI number value\nfunction convertToAQI(val) {\n  if (val == null)\n    return {\n      aqi: null,\n      aqi_category_index: null\n    };\n\n  for (let i = 0; i < AQIdatabase.length; i++) {\n    const category = AQIdatabase[i];\n    if (val >= category.rawPM2_5.low && val <= category.rawPM2_5.high) {\n      return {\n        aqi: linearPieceWise(category.aqiUS.high, category.aqiUS.low, category.rawPM2_5.high, category.rawPM2_5.low, val),\n        aqi_category_index: category.id\n      }\n    }\n  };\n}\n\nexport default convertToAQI;","import CustomThemes from '../Themes/CustomThemes';\n\nconst AQIdatabase = [\n  {\n    id: 0,\n    category: 'Good',\n    lightThemeColor: CustomThemes.light.palette.chart.optionsColors.aqi[0],\n    darkThemeColor: CustomThemes.dark.palette.chart.optionsColors.aqi[0],\n    aqiUS: {\n      low: 0,\n      high: 50\n    },\n    rawPM2_5: {\n      low: 0.0,\n      high: 12.0\n    },\n    description: 'Air quality is satisfactory, and air pollution poses little or no risk',\n    healthSuggestions: {\n      outdoors: 'Enjoy outdoor activities, the air is great!',\n      indoors_generic: 'Enjoy clean indoor air',\n      indoors_dining_hall: 'Enjoy clean dining hall air',\n      indoors_gym: 'Enjoy clean air for physical activities indoors',\n      indoors_vulnerable: 'Enjoy clean indoor air'\n    }\n  },\n  {\n    id: 1,\n    category: 'Moderate',\n    lightThemeColor: CustomThemes.light.palette.chart.optionsColors.aqi[1],\n    darkThemeColor: CustomThemes.dark.palette.chart.optionsColors.aqi[1],\n    aqiUS: {\n      low: 51,\n      high: 100\n    },\n    rawPM2_5: {\n      low: 12.1,\n      high: 35.4\n    },\n    description: 'Air quality is acceptable. However, there may be a risk for some people, particularly those who are unusually sensitive to air pollution',\n    healthSuggestions: {\n      outdoors: 'Children and individuals with respiratory issues might need to reduce prolonged outdoor exertion',\n      indoors_generic: 'Indoor air is acceptable, but not great',\n      indoors_dining_hall: 'Indoor air is acceptable, but not great<br>Avoid Grill area',\n      indoors_gym: 'Indoor air is acceptable, but not great',\n      indoors_vulnerable: 'Indoor air is acceptable, but not great'\n    }\n  },\n  {\n    id: 2,\n    category: 'Unhealthy for Sensitive Groups',\n    lightThemeColor: CustomThemes.light.palette.chart.optionsColors.aqi[2],\n    darkThemeColor: CustomThemes.dark.palette.chart.optionsColors.aqi[2],\n    aqiUS: {\n      low: 101,\n      high: 150\n    },\n    rawPM2_5: {\n      low: 35.5,\n      high: 55.4\n    },\n    description: 'Members of sensitive groups may experience health effects. The general public is less likely to be affected',\n    healthSuggestions: {\n      outdoors: 'Children and individuals with respiratory issues should limit outdoor exertion',\n      indoors_dining_hall: 'Consider take-aways<br>Avoid Grill area',\n      indoors_gym: 'Individuals with respiratory issues should lower the intensity of indoor exercises',\n      indoors_vulnerable: 'Monitor closely individuals with respiratory issues for any symptom'\n    }\n  },\n  {\n    id: 3,\n    category: 'Unhealthy',\n    lightThemeColor: CustomThemes.light.palette.chart.optionsColors.aqi[3],\n    darkThemeColor: CustomThemes.dark.palette.chart.optionsColors.aqi[3],\n    aqiUS: {\n      low: 151,\n      high: 200\n    },\n    rawPM2_5: {\n      low: 55.5,\n      high: 150.4\n    },\n    description: 'Some members of the general public may experience health effects; members of sensitive groups may experience more serious health effects',\n    healthSuggestions: {\n      outdoors: 'Everyone should limit outdoor activities<br>Wear masks when going outside',\n      indoors_dining_hall:\n        'Consider take-aways<br>Avoid Grill area<br>Come back at off-peak hours',\n      indoors_gym: 'Everyone should lower the intensity of indoor exercises',\n      indoors_vulnerable: 'Monitor closely individuals with respiratory issues for any symptom'\n    }\n  },\n  {\n    id: 4,\n    category: 'Very Unhealthy',\n    lightThemeColor: CustomThemes.light.palette.chart.optionsColors.aqi[4],\n    darkThemeColor: CustomThemes.dark.palette.chart.optionsColors.aqi[4],\n    aqiUS: {\n      low: 201,\n      high: 300\n    },\n    rawPM2_5: {\n      low: 150.5,\n      high: 250.4\n    },\n    description: 'Health alert: The risk of health effects is increased for everyone',\n    healthSuggestions: {\n      outdoors: 'Avoid outdoor activities at all cost<br>Wear N95 masks when going outside',\n      indoors_dining_hall:\n        'Consider take-aways<br>Avoid Grill area<br>Come back at off-peak hours',\n      indoors_gym: 'Indoor air quality is not suitable for any physical activities',\n      indoors_vulnerable: 'Monitor closely individuals with respiratory issues for any symptom'\n    }\n  },\n  {\n    id: 5,\n    category: 'Hazardous',\n    lightThemeColor: CustomThemes.light.palette.chart.optionsColors.aqi[5],\n    darkThemeColor: CustomThemes.dark.palette.chart.optionsColors.aqi[5],\n    aqiUS: {\n      low: 300,\n      high: 500\n    },\n    rawPM2_5: {\n      low: 250.5,\n      high: 550.5\n    },\n    description: 'Health warning of emergency conditions: everyone is more likely to be affected',\n    healthSuggestions: {\n      outdoors: 'Avoid outdoor activities at all cost<br>Wear N95 masks when going outside',\n      indoors_dining_hall:\n        'Consider take-aways<br>Avoid Grill area<br>Come back at off-peak hours',\n      indoors_gym: 'Indoor air quality is not suitable for any physical activities',\n      indoors_vulnerable: ''\n    }\n  },\n];\n\nexport default AQIdatabase;\n","import { fetchDataFromURL } from \"../Components/DatasetDownload/DatasetFetcher\";\nimport { calculateSensorStatus, SensorStatus } from \"../Pages/Screen/ScreenUtils\";\nimport convertToAQI from \"./AirQualityIndexCalculator\";\nimport AQIdatabase from \"./AirQualityIndexHelper\";\nimport parse from 'html-react-parser';\n\nexport const apiDomain = 'https://api.citiesair.com';\n\nexport const fetchAndprocessCurrentSensorsData = async (apiUrl) => {\n  try {\n    const data = await fetchDataFromURL(apiUrl, 'json', true);\n\n    if (!data) {\n      throw new Error('Returned data is empty');\n    }\n\n    try {\n      return processCurrentSensorsData(data);\n    } catch (error) {\n      // Handle the case where data is not an iterable object\n      console.error(\"Error: data is not iterable\", error);\n    }\n  }\n  catch (error) {\n    throw new Error(`Error fetching data: ${error.message}`);\n  }\n}\n\nexport const processCurrentSensorsData = (data) => {\n  Object.entries(data).map(([_, sensorData]) => {\n    // Calculate if the sensor is currently active or not\n    const now = new Date();\n    const currentTimestamp = new Date(sensorData.current?.timestamp);\n    const lastSeenInHours = Math.round((now - currentTimestamp) / 1000 / 3600);\n    if (sensorData.current) {\n      sensorData.current.lastSeenInHours = lastSeenInHours;\n      sensorData.current.sensor_status = calculateSensorStatus(lastSeenInHours);\n    }\n\n    // Calculate AQI from raw measurements\n    if (sensorData.current?.[\"pm2.5\"]) {\n      const aqiObject = convertToAQI(sensorData.current[\"pm2.5\"]);\n      if (aqiObject) {\n        const aqiCategory = AQIdatabase[aqiObject.aqi_category_index];\n        sensorData.current.aqi = aqiObject.aqi;\n        sensorData.current.category = aqiCategory.category;\n\n        // Only add color and healthSuggestion if the sensor is active\n        if (sensorData.current.sensor_status === SensorStatus.active) {\n          sensorData.current = {\n            ...sensorData.current,\n            color: aqiCategory.lightThemeColor,\n            healthSuggestion: aqiCategory.healthSuggestions[sensorData.sensor?.location_type] && parse(aqiCategory.healthSuggestions[sensorData.sensor?.location_type])\n          };\n        }\n      }\n    }\n  });\n  return data;\n}","var map = {\n\t\"./AirQualityIndexTable\": 692,\n\t\"./AirQualityIndexTable.jsx\": 692,\n\t\"./ChartSubstituteComponentLoader\": 5276,\n\t\"./ChartSubstituteComponentLoader.jsx\": 5276\n};\n\nfunction webpackAsyncContext(req) {\n\treturn Promise.resolve().then(function() {\n\t\tif(!__webpack_require__.o(map, req)) {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t}\n\n\t\tvar id = map[req];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 6598;\nmodule.exports = webpackAsyncContext;"],"names":["displayLastUpdateAndSensorStatus","sensorData","isScreen","console","log","getFormattedElapsedTimeFromNow","current","timestamp","sensor","last_seen","sensor_status","SensorStatus","variant","sx","mt","fontWeight","color","AQIdatabase","mr","props","currentSensorsData","temperatureUnitPreference","orderOfItems","container","justifyContent","verticalAlign","fontSize","fontFamily","Object","entries","map","index","numOfItems","key","item","order","keys","length","xs","Math","max","sm","lg","min","CustomThemes","className","location_long","location_short","lineHeight","aqi","category","getFormattedTemperature","rawTemp","temperature","currentUnit","TemperatureUnits","returnUnit","transform","rel_humidity","round","includes","location_type","calculateHeatIndex","returnSensorStatus","UppercaseTitle","text","display","textTransform","pb","SELECT_ALL","SeriesSelector","itemsFromChart","items","selectorID","allowMultiple","onSeriesSelection","theme","useTheme","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","overflow","background","palette","customAlternateBackground","anchorOrigin","vertical","horizontal","transformOrigin","getContentAnchorEl","useState","setItems","selectAll","setSelectAll","useEffect","every","selected","handleChange","event","value","target","updatedItems","selectedItems","filter","label","some","selectedItem","handleItemToggle","existingItem","Stack","spacing","direction","alignItems","FormControl","breakpoints","down","width","borderRadius","size","Select","labelId","id","multiple","onChange","renderValue","Visibility","secondary","Typography","renderedLabel","MenuItem","disabled","backgroundColor","Checkbox","checked","onClick","p","Radio","borderTop","borderColor","position","bottom","zIndex","marginBottom","pl","Switch","Grid","Chip","onDelete","ChartControlType","CategoryFilter","stackDirection","DateRangeFilter","ChartRangeFilter","NumberRangeFilter","hideAnnotations","stem","textStyle","opacity","boxStyle","returnResponsiveFontSizeInPixels","isPortrait","isSmaller","returnChartControlUI","chartControl","mainChartData","mainChartOptions","subchartIndex","chartControlUI","options","ui","snapToData","controlType","chartType","chartView","columns","subcharts","chartOptions","hAxis","textPosition","chart","axisText","vAxis","title","annotations","legend","calculateCalendarDimensions","cellSizeMin","cellSizeMax","cellSize","window","innerWidth","chartWidth","yearLabelFontSize","styled","Box","maxWidth","height","padding","tooltip","margin","primary","marginTop","paper","border","paddingTop","paddingBottom","paddingLeft","paddingRight","borderWidth","top","left","right","main","stroke","strokeWidth","cursor","SubChart","chartData","windowSize","isHomepage","chartSubstituteComponentName","ChartSubstituteComponentLoader","customClassName","useContext","GoogleContext","google","setDataTable","chartWrapper","setChartWrapper","setDashboardWrapper","controlWrapper","setControlWrapper","isFirstRender","setIsFirstRender","allInitialColumns","setAllInitialColumns","dataColumns","setDataColumns","setInitialVAxisRage","random","toString","substr","chartID","chartTotalHeight","setChartTotalHeight","axisTitleTextStyle","italic","bold","axisTitle","axisTextStyle","curveType","crosshair","orientation","trigger","fill","chartArea","portrait","landscape","isHtml","showColorCode","alignment","scrollArrows","activeColor","inactiveColor","pagingTextStyle","format","viewWindow","slantedText","slantedTextAngle","colors","optionsColors","series","values","forEach","_serie","serie","trendlines","_item","colorAxis","colorAxisFirstColor","multiColor","colorIndex","NYUpurple","aqiColorAxis","titleTextStyle","gridlines","minorGridlines","count","highContrast","contrastText","thickness","rx","shape","ry","annotationBoxFill","fillOpacity","seriesSelector","pointSize","enableInteractivity","viewWindowMode","returnGenericOptions","existingOptions","calendarDimensions","calendar","yearLabel","noDataPattern","returnCalendarChartOptions","chartControlOptions","hasChartControl","control","cleanupTouchEventListener","touchHandler","first","changedTouches","type","simulatedEvent","MouseEvent","bubbles","cancelable","view","detail","screenX","screenY","clientX","clientY","button","relatedTarget","dispatchEvent","preventDefault","controlDOM","document","querySelector","touchEvent","addEventListener","capture","removeEventListener","addTouchEventListenerForChartControl","handleSeriesSelection","setOptions","draw","method","setInitialColumnsColors","col","seriesIndex","serieAttribute","getInitialVAxisRange","vAxisMin","vAxisMax","dataTable","range","getColumnRange","sourceColumn","isNaN","newDataColumns","_chartWrapper","hiddenSeriesObject","visibleInLegend","newViewColumns","push","dataColumn","i","indexInAllInitialColumns","role","setView","newOptions","selectedSeriesCount","dataArray","thisDataTable","visualization","arrayToDataTable","reconstructedColumns","evaluatedColumns","column","calc","calcFunction","Function","reconstructFunctionFromJSONstring","thisChartWrapper","ChartWrapper","undefined","containerId","thisDashboardWrapper","Dashboard","getElementById","events","addListener","onChartReady","thisControlWrapper","ControlWrapper","bind","initColumns","initialView","getView","viewFromDataTable","DataView","shouldAssignDomainRoleToFistColumn","dataSeriesIndex","getColumnLabel","initialVAxisRange","getInitialColumns","renderedHeight","getBBox","minHeight","LoadingAnimation","renderChart","ChartStyleWrapper","mode","overflowX","overflowY","scrollbarGutter","StyledTabs","Tabs","chartMaxHeight","passedChartData","passedChartHeight","chartHeight","isSmallWidth","useMediaQuery","matchMedia","matches","setIsPortrait","innerHeight","setWindowSize","indexValue","setIndexValue","timeoutID","handleWindowResize","clearTimeout","setTimeout","__","newValue","element","Tab","subchartTitle","transition","pointerEvents","StyledTable","Table","isTiny","minWidth","hideAQIDescription","themePreference","pr","align","ThemePreferences","lightThemeColor","darkThemeColor","aqiUS","low","high","rawPM2_5","description","parse","healthSuggestions","outdoors","replace","replacePlainHTMLWithMuiComponents","shouldRender","ceil","ticks","isStacked","bar","groupWidth","renderAQIchart","Suspense","fallback","ChartSubstituteComponent","lazy","AirQualityIndexLegendQuickGlance","anchorEl","setAnchorEl","handlePopperOpen","currentTarget","Tracking","handlePopperClose","open","Boolean","FadeInButtonForSpeedDial","distanceFromBottomOfWindow","Fab","onMouseEnter","onMouseLeave","isMobile","Air","Popper","placement","onClose","keepMounted","disableRestoreFocus","TransitionProps","Fade","timeout","Paper","elevation","py","mb","mx","AirQualityIndexTable","PickersDay","content","DialogToScreen","schoolID","screens","popupId","popupState","bindHover","bindFocus","Tv","HoverMenu","bindMenu","close","screen","MenuItemAsNavLink","behavior","NavLinkBehavior","to","screen_name","LinkButtonToScreen","url","component","Link","Array","isArray","SchoolSelector","currentSchoolID","currentSchoolName","allowedSchoolsData","fetchDashboardData","CustomChip","icon","Place","tooltipTitle","setSchoolID","handleClose","handleItemSelect","clickable","Menu","MenuListProps","MenuList","dense","school","school_id","name","StyledAccordion","MuiAccordion","expanded","backgroundImage","default","boxShadow","shadows","StyledAccordionSummary","MuiAccordionSummary","flexDirection","textDecoration","panel","setExpanded","isExpanded","transitionDuration","expandIcon","ExpandMore","enterDelay","leaveDelay","subtitle","reference","otherProps","lastUpdate","currentSchoolData","dashboardData","LinkContext","setChartsTitlesList","TabContext","tab","charts","chartsTitles","chartTitle","FullWidthBox","Container","pt","Person","contactPerson","Email","contactEmail","href","BarChart","scrollToSection","jsonData","textAlign","CurrentAQIGrid","sensors","gutterBottom","AirQualityExplanation","ChartComponent","chartIndex","my","subchartSubtitle","Divider","setCurrentPage","user","UserContext","navigate","useNavigate","checkedAuthentication","authenticated","setDashboardData","setCurrentSchoolData","setAllowedSchoolsData","optionalSchoolID","fetchDataFromURL","then","data","currentSchool","processedCurrentSensorData","processCurrentSensorsData","dashboard","allowedSchools","dateString","inputDate","Date","timeDifference","seconds","floor","minutes","hours","days","active","temporaryOffline","offline","SensorStatusCriteria","cutoffInHours","Infinity","calculateSensorStatus","lastSeenInHours","lastSeen","capitalizeFirstCharacter","inputString","charAt","toUpperCase","slice","getDomainName","URL","hostname","getUrlAfterScreen","screenString","urlComponents","split","pop","areDOMOverlapped","rect1","rect2","linearPieceWise","aqiHigh","aqiLow","concenHigh","concenLow","val","parseInt","aqi_category_index","indoors_generic","indoors_dining_hall","indoors_gym","indoors_vulnerable","fetchAndprocessCurrentSensorsData","apiUrl","Error","error","message","now","currentTimestamp","aqiObject","convertToAQI","aqiCategory","healthSuggestion","webpackAsyncContext","req","Promise","resolve","__webpack_require__","o","e","code","module","exports"],"sourceRoot":""}