{"version":3,"file":"static/js/429.5c7ebee7.chunk.js","mappings":"kNAQA,MAAMA,EACG,0DADHA,EAEM,+mCAFNA,EAGO,4XAsCb,EAnCuBC,KACrB,MAAM,gBAAEC,IAAoBC,EAAAA,EAAAA,YAAWC,EAAAA,GAEvC,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAiB,CAChBC,MAAOP,EACPQ,SACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEN,EAAAA,EAAAA,KAACO,EAAAA,EAAoB,CAACV,gBAAiBA,KACvCG,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CACTC,UAAU,MACVC,QAAQ,QACRC,MAAM,iBACNC,GAAI,CAAEC,GAAI,GAAIP,UAEbQ,EAAAA,EAAAA,IAAMnB,EAAsB,CAC3BoB,QAASC,EAAAA,OAGbhB,EAAAA,EAAAA,KAACC,EAAAA,EAAiB,CAChBC,MAAO,YACPC,SACEH,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CAACE,QAAQ,UAAUC,MAAM,iBAAgBL,UACjDQ,EAAAA,EAAAA,IAAMnB,EAAuB,CAC5BoB,QAASC,EAAAA,YAOrB,C,yMCpCC,MAAMC,GAAcC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAcE,IAAA,IAAC,MAAEC,EAAK,OAAEC,GAAQF,EAAA,MAAM,CAC/DG,SAAUD,GAAU,IACpB,WAAY,CACVE,SAAUF,EAAS,WAAa,YAChCX,MAAOU,EAAMI,QAAQC,KAAKC,UAC1B,CAACN,EAAMO,YAAYC,KAAK,OAAQ,CAC9BL,SAAUF,EAAS,SAAW,cAGlC,OAAQ,CACNQ,WAAY,IACZnB,MAAOU,EAAMI,QAAQC,KAAKK,QAC1BC,WAAY,QAEf,IAyHD,QAvHA,SAA8BC,GAC5B,MAAM,gBAAEpC,IAAoBC,EAAAA,EAAAA,YAAWC,EAAAA,IAEjC,OAAEuB,EAAM,mBAAEY,GAAuBD,EA6CvC,OACE7B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEN,EAAAA,EAAAA,KAACmC,EAAAA,EAAG,CAACC,SAAS,OAAM9B,UAClBF,EAAAA,EAAAA,MAACa,EAAW,CAACoB,KAAK,QAAQf,OAAQA,EAAOhB,SAAA,EACvCN,EAAAA,EAAAA,KAACsC,EAAAA,EAAS,CAAAhC,UACRF,EAAAA,EAAAA,MAACmC,EAAAA,EAAQ,CAAAjC,SAAA,EACPN,EAAAA,EAAAA,KAACwC,EAAAA,EAAS,CAAC5B,GAAI,CAAE6B,GAAI,GAAInC,UACvBN,EAAAA,EAAAA,KAACmC,EAAAA,EAAG,CAACvB,GAAI,CAAE8B,MAAO,MAAOC,OAAQ,YAEnC3C,EAAAA,EAAAA,KAACwC,EAAAA,EAAS,CAAC5B,GAAI,CAAEgC,GAAI,GAAItC,SAAC,cAG1BN,EAAAA,EAAAA,KAACwC,EAAAA,EAAS,CAACK,MAAM,QAAOvC,SAAC,YACzBF,EAAAA,EAAAA,MAACoC,EAAAA,EAAS,CAACK,MAAM,QAAOvC,SAAA,CAAC,gCAGvBN,EAAAA,EAAAA,KAAA,OAAAM,SAAK,MAAO,QAGZ4B,IAAsBlC,EAAAA,EAAAA,KAACwC,EAAAA,EAAS,CAACK,MAAM,OAAMvC,SAAC,iBAC9C4B,IAAsBlC,EAAAA,EAAAA,KAACwC,EAAAA,EAAS,CAACK,MAAM,OAAMvC,SAAC,uCAGpDN,EAAAA,EAAAA,KAAC8C,EAAAA,EAAS,CAAAxC,SACPyC,EAAAA,EAAYC,KAAI,CAACC,EAASC,KACzB9C,EAAAA,EAAAA,MAACmC,EAAAA,EAAQ,CAEP3B,GAAI,CAAE,mCAAoC,CAAEuC,OAAQ,IAAM7C,SAAA,EAE1DN,EAAAA,EAAAA,KAACwC,EAAAA,EAAS,CAAC5B,GAAI,CAAE6B,GAAI,GAAInC,UACvBN,EAAAA,EAAAA,KAACmC,EAAAA,EAAG,CAACvB,GAAI,CAAE8B,MAAO,MAAOC,OAAQ,MAAOS,gBAAiBvD,IAAoBwD,EAAAA,EAAiBC,MAAQL,EAAQM,gBAAkBN,EAAQO,qBAE1IxD,EAAAA,EAAAA,KAACwC,EAAAA,EAAS,CAAC5B,GAAI,CAAEgC,GAAI,GAAItC,SACtB2C,EAAQQ,YAEXrD,EAAAA,EAAAA,MAACoC,EAAAA,EAAS,CAACK,MAAM,QAAOvC,SAAA,CACrB2C,EAAQS,MAAMC,IAAI,cAIlBV,EAAQS,MAAME,SAEjBxD,EAAAA,EAAAA,MAACoC,EAAAA,EAAS,CAACK,MAAM,QAAOvC,SAAA,CACrB2C,EAAQY,SAASF,IAAI,cAIrBV,EAAQY,SAASD,SAElB1B,IAAsBlC,EAAAA,EAAAA,KAACwC,EAAAA,EAAS,CAACK,MAAM,OAAMvC,SAAE2C,EAAQa,eACvD5B,IAEElC,EAAAA,EAAAA,KAACwC,EAAAA,EAAS,CAACK,MAAM,OAAMvC,UAEnBQ,EAAAA,EAAAA,IAAMmC,EAAQc,kBAAkBC,SAAU,CACxCjD,QAASC,EAAAA,QA7BdkC,YArEIe,KAAuB,IAAtB,aAAEC,GAAcD,EAClCE,EAAW,KAEf,GAAID,EAAc,CAChB,MAAME,EAAY,CAAC,CAAC,YAAa,CAAC,WAClC,IAAK,IAAIC,EAAI,EAAGA,EAAItB,EAAAA,EAAYuB,OAAQD,GAAK,EAC3CD,EAAU,GAAGG,KAAKxB,EAAAA,EAAYsB,GAAGZ,UACjCW,EAAU,GAAGG,KAC8D,GAAzEC,KAAKC,MAAM1B,EAAAA,EAAYsB,GAAGX,MAAME,KAAOb,EAAAA,EAAYsB,GAAGX,MAAMC,KAAO,KAIvEQ,GACEnE,EAAAA,EAAAA,KAAC0E,EAAAA,EAAqB,CACpBC,YAAY,OACZC,UACE,CACER,YACAS,UAAW,WACXC,QAAS,CACPC,qBAAqB,EACrBC,OAAQ,CAAEC,SAAU,QACpBC,MAAO,CACLC,MAAO,CAAC,EAAG,GAAI,IAAK,IAAK,IAAK,IAAK,MAErCC,UACA,CACE1C,MAAO,CAAE2C,SAAU,MAAOC,UAAW,OACrC3C,OAAQ,CAAE0C,SAAU,MAAOC,UAAW,QAExCC,WAAW,EACXC,OAAQ,MACRC,IAAK,CAAEC,WAAY,WAM/B,CAEA,OAAOvB,CAAQ,EAoEZwB,CAAe,CAAEzB,cAAehC,MAIvC,C,uKCjIA,MAAM0D,GAAkB1E,EAAAA,EAAAA,IAAO2E,EAAAA,EAAP3E,EAAqBE,IAAA,IAAC,MAAEC,EAAK,SAAEyE,GAAU1E,EAAA,MAAM,CACrET,MAAOU,EAAMI,QAAQC,KAAKC,UAC1BoE,gBAAiB,OACjB3C,gBAAiB0C,EAAWzE,EAAMI,QAAQuE,WAAWC,QAAU,cAC/DC,UAAWJ,EAAWzE,EAAM8E,QAAU,OACtCC,WAAY,OACb,IAEKC,GAAyBnF,EAAAA,EAAAA,IAAOoF,EAAAA,EAAPpF,EAA4B+C,IAAA,IAAC,MAAE5C,EAAK,SAAEyE,GAAU7B,EAAA,MAAM,CACnFsC,UAAWT,EAAWzE,EAAMmF,QAAQ,GAAK,EACzCC,cAAe,cACfC,YAAaZ,EAAWzE,EAAMmF,QAAQ,GAAK,EAC3C,wBAAyB,CACvB7F,MAAOU,EAAMI,QAAQC,KAAKK,QAC1B4E,eAAgB,YAChBP,WAAY,OACZ,UAAW,CACTzF,MAAOU,EAAMI,QAAQM,QAAQ6E,OAGjC,8CAA+C,CAC7CL,UAAWlF,EAAMmF,QAAQ,GACzBK,aAAcxF,EAAMmF,QAAQ,IAE/B,IAEKM,EACI,0BADJA,EAEM,4BAuCZ,EApC0BC,IAAyB,IAAxB,MAAE7G,EAAK,QAAEC,GAAS4G,EAC3C,MAAOjB,EAAUkB,IAAeC,EAAAA,EAAAA,eAASC,GAYzC,OACElH,EAAAA,EAAAA,KAACmC,EAAAA,EAAG,CAAA7B,UACFF,EAAAA,EAAAA,MAACwF,EAAe,CACdE,SAAuB,WAAbA,EACVqB,UAdyBC,EAcO,SAdG,CAACC,EAAOC,KAC/CN,EAAYM,EAAaF,OAAQF,GACjCK,EAAAA,EACED,EAAaC,EAAAA,EAAgBC,cAAgBD,EAAAA,EAAgBE,gBAC7D,CACEC,QAASxH,GAEZ,GAQGyH,mBAAoB,EAAErH,SAAA,EAEtBN,EAAAA,EAAAA,KAACqG,EAAsB,CAACP,SAAUA,EAAU8B,YAAY5H,EAAAA,EAAAA,KAAC6H,EAAAA,EAAiB,IAAK,gBAAc,kBAAkBC,GAAG,iBAAgBxH,UAChIN,EAAAA,EAAAA,KAAC+H,EAAAA,EAAO,CAAC7H,MAAO4F,EAAWgB,EAAuBA,EAAoBkB,WAAY,EAAGC,WAAY,IAAI3H,UACnGF,EAAAA,EAAAA,MAACI,EAAAA,EAAU,CAACC,UAAU,IAAIC,QAAQ,QAAOJ,SAAA,CACtCJ,GACDF,EAAAA,EAAAA,KAACkI,EAAAA,EAAQ,CAACtH,GAAI,CAAEY,SAAU,OAAQ2G,WAAY,qBAIpDnI,EAAAA,EAAAA,KAACoI,EAAAA,EAAmB,CAAA9H,SACjBH,SA1BsBiH,KA6BvB,C,8PCrEV,MAAMiB,EAAa,qBAEbC,EAAc,GACdC,EAAmB,EAEV,SAASC,EAAevG,GACrC,MAAQwG,MAAOC,EAAc,WAC3BC,EAAU,cACVC,EAAa,YACbC,EAAW,kBACXC,EAAiB,YACjBC,GAAc,GACZ9G,EAEEZ,GAAQ2H,EAAAA,EAAAA,KAERC,EAAY,CAChBC,WAAY,CACVC,MAAO,CACLC,UAAyB,KAAdd,EAAqBC,EAChCnG,SAAU,qBACV4D,WAAY3E,EAAMI,QAAQ4H,4BAG9BC,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdC,gBAAiB,CACfF,SAAU,MACVC,WAAY,QAEdE,mBAAoB,OAGfjB,EAAOkB,IAAY1C,EAAAA,EAAAA,UAASyB,IAC5BkB,EAAWC,IAAgB5C,EAAAA,EAAAA,UAAS2B,IAE3CkB,EAAAA,EAAAA,YAAU,KACRH,EAASjB,EAAe,GACvB,CAACA,KAEJoB,EAAAA,EAAAA,YAAU,KACRD,EAAapB,EAAMsB,OAAMC,GAAQA,EAAKC,WAAU,GAC/C,CAACxB,IAEJ,MAAMyB,EAAgB7C,IAEpB,MACE8C,QAAQ,MAAEC,IACR/C,EAOJ,GAAI+C,EAAMC,SAAShC,GAAa,CAC9B,MAAMiC,EAAe7B,EAAMzF,KAAI,CAACgH,EAAM9G,KAAK,IAAW8G,EAAMC,SAAmB,GAAT/G,IAAqB0G,MAC3Fd,EAAkB,CAAEyB,eAAgBD,IACpCT,GAAcD,EAChB,KAEK,CACH,MAAMY,EAAgB/B,EAAMgC,QAAOT,GAAQI,EAAMC,SAASL,EAAKU,SACzDJ,EAAe7B,EAAMzF,KAAIgH,IAAI,IAC9BA,EACHC,SAAUO,EAAcG,MAAKC,GAAgBA,EAAaF,QAAUV,EAAKU,YAE3E5B,EAAkB,CAAEyB,eAAgBD,IACpCT,GAAa,EACf,GAGIgB,EAAoBb,IACxB,MAAMM,EAAe7B,EAAMzF,KAAI8H,GAC7BA,EAAaJ,QAAUV,EAAKU,MAAQ,IAAKI,EAAcb,UAAWa,EAAab,UAAaa,IAE9FhC,EAAkB,CAAEyB,eAAgBD,GAAe,EAmBrD,OACElK,EAAAA,EAAAA,MAAC2K,EAAAA,EAAK,CAACvE,QAAS,EAAGwE,UAAU,MAAMC,WAAW,SAAQ3K,SAAA,EACpDN,EAAAA,EAAAA,KAACkL,EAAAA,EAAW,CACVtK,GAAI,CACF,CAACS,EAAMO,YAAYC,KAAK,OAAQ,CAAEa,MAAO,QACzCnB,SAAU,QACV,uBAAwB,CAAE4J,aAAa,GAADC,OAAK/J,EAAMgK,MAAMF,aAAY,QAErE9I,KAAK,QAAO/B,UAEZF,EAAAA,EAAAA,MAACkL,EAAAA,EAAM,CACLC,QAAO,GAAAH,OAAKzC,EAAU,UACtBb,GAAIa,EACJ6C,SAAU5C,EACVwB,MAAO3B,EAAMgC,QAAOT,GAAQA,EAAKC,WAAUjH,KAAIgH,GAAQA,EAAKU,QAC5DvD,SAAU+C,EACVjB,UAAWA,EACXwC,YAAcxB,GAjCCA,KAMnB7J,EAAAA,EAAAA,MAAC2K,EAAAA,EAAK,CAACC,UAAU,MAAMC,WAAW,SAASzE,QAAS,GAAIlG,SAAA,EACtDN,EAAAA,EAAAA,KAAC0L,EAAAA,EAAc,CAAClK,SAAS,SAASZ,GAAI,CAAED,MAAOU,EAAMI,QAAQC,KAAKC,cAClE3B,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CAACE,QAAQ,UAAUC,MAAM,iBAAgBL,SAEjDsI,EARC,GAANwC,OAAUnB,EAAS3F,OAAM,KAAA8G,OAAI3C,EAAMnE,OAAM,KAAA8G,OAAIvC,GAAe,GAAE,cAQZoB,OAuBnB0B,CAAc1B,GACzCrJ,GAAI,CAAEY,SAAU,UAAWlB,SAAA,CAG1BmI,EAAMzF,KAAKgH,IACV5J,EAAAA,EAAAA,MAACwL,EAAAA,EAAQ,CACPC,WAIkD,IAA/CpD,EAAMgC,QAAOT,GAAQA,EAAKC,WAAU3F,SAAgB0F,EAAKC,UAG5DG,MAAOJ,EAAKU,MACZ9J,GAAI,CACFwC,gBAAiB,mBACjB,UAAW,CACTA,gBAAiB,uBAEnB9C,SAAA,CAGDsI,GAAgB5I,EAAAA,EAAAA,KAAC8L,EAAAA,EAAQ,CACxBC,QAAS/B,EAAKC,SACd+B,QAASA,IAAMnB,EAAiBb,GAEhCpJ,GAAI,CAAEqL,EAAG,IAAMC,UAAW,iBACxBlM,EAAAA,EAAAA,KAACmM,EAAAA,EAAK,CACNJ,QAAS/B,EAAKC,SACd9C,SAAUA,IAAM+C,EAAaF,GAE7BpJ,GAAI,CAAEqL,EAAG,IAAMC,UAAW,iBAE9BlM,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CAACE,QAAQ,UAASJ,SAAE0J,EAAKU,UArB/BV,EAAKU,SA0Bb9B,IAAiB5I,EAAAA,EAAAA,KAAC4L,EAAAA,EAAQ,CAAkBxB,MAAO/B,EAAYzH,GAAI,CAClEwL,UAAW,cAAeC,YAAahL,EAAMI,QAAQC,KAAKC,UAC1DsD,SAAU,SAAUqH,OAAQ,EAAGC,OAAQ,MAAO1F,aAAcxF,EAAMmF,SAAS,GAC3ER,WAAY3E,EAAMI,QAAQ4H,0BAC1B,UAAW,CACTrD,WAAY3E,EAAMI,QAAQ4H,4BAE5B/I,UACAF,EAAAA,EAAAA,MAAC2K,EAAAA,EAAK,CAACC,UAAU,MAAMtI,MAAM,OAAOuI,WAAW,SAASuB,eAAe,gBAAelM,SAAA,EACpFN,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CAACsB,WAAY,IAAKpB,QAAQ,UAAUE,GAAI,CAAEgC,GAAI,GAAItC,SAAE+H,KAC/DrI,EAAAA,EAAAA,KAACyM,EAAAA,EAAM,CACLV,QAASnC,EACToC,QAASA,IAAMnB,EAAiBxC,GAChCzH,GAAI,CAAEsL,UAAW,oBAbU7D,QAsBnCU,GAAeH,IAAkB5I,EAAAA,EAAAA,KAAC0M,EAAAA,GAAI,CAACC,WAAS,EAACnG,QAAS,EAC1D5F,GAAI,CACF,CAACS,EAAMO,YAAYC,KAAK,OAAQ,CAC9B+K,QAAS,SAEXtM,SAEDmI,EAAMgC,QAAOT,GAAQA,EAAKC,WAAUjH,KAAKgH,IACxChK,EAAAA,EAAAA,KAAC0M,EAAAA,GAAI,CAAC1C,MAAI,EAAA1J,UACRN,EAAAA,EAAAA,KAAC6M,EAAAA,EAAI,CACHnC,OAAO1K,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CAACE,QAAQ,UAASJ,SAAE0J,EAAKU,QAC3CrI,KAAK,WAC+C,IAA/CoG,EAAMgC,QAAOT,GAAQA,EAAKC,WAAU3F,QAAgB,CAAEwI,SAAUA,IAAMjC,EAAiBb,OAJhFA,EAAKU,aAa/B,CCxMO,MAAMqC,EAAmB,CAC9BC,eAAgB,CAAE/H,SAAU,MAAOgI,eAAgB,UACnDC,gBAAiB,CAAEjI,SAAU,SAAUgI,eAAgB,kBACvDE,iBAAkB,CAAElI,SAAU,SAAUgI,eAAgB,kBACxDG,kBAAmB,CAAEnI,SAAU,MAAOgI,eAAgB,WAuF3CI,EAAgCC,IACpC,CACLC,IAAKD,EAAYE,QAAO,CAACD,EAAKE,IAAaA,EAAUF,EAAME,EAAUF,IACrEG,IAAKJ,EAAYE,QAAO,CAACE,EAAKD,IAAaA,EAAUC,EAAMD,EAAUC,MAG5DC,EAAiCC,IACrC,CAAEL,IAAK/I,KAAK+I,OAAOK,GAASF,IAAKlJ,KAAKkJ,OAAOE,KAIzCC,EAAmBA,IACvBrJ,KAAKsJ,SAASC,SAAS,IAAIC,OAAO,EAAG,GAKxCC,EAAkB,CACtBC,KAAM,CACJ5J,OAAQ,GAEV6J,UAAW,CACTC,QAAS,GAEXC,SAAU,MAGNC,EAAmCrK,IAAgC,IAA/B,WAAEsK,EAAU,UAAEC,GAAWvK,EACjE,OACEuK,EAAaD,EAAa,EAAI,EAAMA,EAAa,EAAI,EAAG,EAI/CE,EAAwBxM,IAAW,IAADyM,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAC7C,MAAM,UAAEzM,EAAS,cAAE0M,EAAa,WAAE/C,EAAU,WAAEgD,EAAU,MAAElQ,GAAUY,EAG9DuP,EAAqB,CACzBC,QAAQ,EACRC,MAAM,EACN/Q,MAAOU,EAAMI,QAAQkQ,MAAMC,UAC3BpQ,SAAU8M,EAAiC,CAAEC,gBAEzCsD,EAAgB,CACpBlR,MAAOU,EAAMI,QAAQkQ,MAAMG,SAC3BtQ,SAAU8M,EAAiC,CAAEC,gBAK/C,IAAIzJ,GAA6B,QAAnB4J,EAAA9J,EAAUmN,iBAAS,IAAArD,GAAnBA,EAAsB4C,GAAexM,QAC/C,IAAKF,EAAUmN,UAAUT,GAAexM,SACxC,CAAC,EAoFL,GAjFAA,GAAU,IACLA,MACAF,EAAUE,QACbzD,MAAO,WACP2Q,UAAWlN,GAAQkN,YAA8B,QAArBrD,EAAI/J,EAAUE,eAAO,IAAA6J,OAAA,EAAjBA,EAAmBqD,YAAa,WAChEC,UAAW,CAAEC,YAAa,OAAQC,QAAS,QAAS/D,QAAS,IAC7DhL,gBAAiB,CAAEgP,KAAM,eACzBhN,UAAW,IACW,QAApBwJ,EAAGhK,EAAUE,eAAO,IAAA8J,OAAA,EAAjBA,EAAmBxJ,UACtB1C,MAAO6L,GAA+B,QAAjBM,EAAAjK,EAAUE,eAAO,IAAA+J,GAAW,QAAXC,EAAjBD,EAAmBzJ,iBAAS,IAAA0J,GAAO,QAAPC,EAA5BD,EAA8BpM,aAAK,IAAAqM,OAAlB,EAAjBA,EAAqC1J,WAAY,OAA2B,QAAjB2J,EAAApK,EAAUE,eAAO,IAAAkK,GAAW,QAAXC,EAAjBD,EAAmB5J,iBAAS,IAAA6J,GAAO,QAAPC,EAA5BD,EAA8BvM,aAAK,IAAAwM,OAAlB,EAAjBA,EAAqC5J,YAAa,MAClI3C,OAAQ4L,GAA+B,QAAjBY,EAAAvK,EAAUE,eAAO,IAAAqK,GAAW,QAAXC,EAAjBD,EAAmB/J,iBAAS,IAAAgK,GAAQ,QAARC,EAA5BD,EAA8BzM,cAAM,IAAA0M,OAAnB,EAAjBA,EAAsChK,WAAY,OAA2B,QAAjBiK,EAAA1K,EAAUE,eAAO,IAAAwK,GAAW,QAAXC,EAAjBD,EAAmBlK,iBAAS,IAAAmK,GAAQ,QAARC,EAA5BD,EAA8B5M,cAAM,IAAA6M,OAAnB,EAAjBA,EAAsClK,YAAa,OAEvI5C,MAAO6L,GAA+B,QAAjBkB,EAAA7K,EAAUE,eAAO,IAAA2K,GAAO,QAAPC,EAAjBD,EAAmB/M,aAAK,IAAAgN,OAAP,EAAjBA,EAA0BrK,WAAY,QAA4B,QAAjBsK,EAAA/K,EAAUE,eAAO,IAAA6K,GAAO,QAAPC,EAAjBD,EAAmBjN,aAAK,IAAAkN,OAAP,EAAjBA,EAA0BtK,YAAa,OAI7G3C,OAAQiC,EAAUjC,QAAU,OAC5B0P,QAAS,CACPC,QAAQ,EACRC,eAAe,GAEjBvN,OAAQ,CACNwN,UAAWjE,EAAa,SAAW,QACnCtJ,SACqC,QAD7B4K,EACW,QADXC,EACNlL,EAAUE,eAAO,IAAAgL,GAAQ,QAARC,EAAjBD,EAAmB9K,cAAM,IAAA+K,OAAR,EAAjBA,EAA2B9K,gBAAQ,IAAA4K,EAAAA,EAC/BtB,EAAa,MAAQ,QAC3BkE,aAAc,CACZC,YAAarR,EAAMI,QAAQkQ,MAAMC,UACjCe,cAAetR,EAAMI,QAAQC,KAAKC,WAEpCiR,gBAAiB,CACfpR,SAAU,GACVb,MAAOU,EAAMI,QAAQkQ,MAAMC,UAC3BF,MAAM,KAMZ5M,GAAQ+N,MAAQ,IACX/N,GAAQ+N,MACXC,OAA6B,QAAvB9C,EAAe,QAAfC,EAAEnL,GAAQ+N,aAAK,IAAA5C,OAAA,EAAbA,EAAe6C,cAAM,IAAA9C,EAAAA,EAAI,UACjC9P,MAA2B,QAAtBgQ,EAAe,QAAfC,EAAErL,GAAQ+N,aAAK,IAAA1C,OAAA,EAAbA,EAAejQ,aAAK,IAAAgQ,EAAAA,EAAI,GAC/B6C,WAAY,CACVxF,IAAmC,QAAhC6C,EAAe,QAAfC,EAAEvL,GAAQ+N,aAAK,IAAAxC,GAAY,QAAZC,EAAbD,EAAe0C,kBAAU,IAAAzC,OAAZ,EAAbA,EAA2B/C,WAAG,IAAA6C,EAAAA,EAAI,EACvC1C,IAAmC,QAAhC6C,EAAe,QAAfC,EAAE1L,GAAQ+N,aAAK,IAAArC,GAAY,QAAZC,EAAbD,EAAeuC,kBAAU,IAAAtC,OAAZ,EAAbA,EAA2B/C,WAAG,IAAA6C,EAAAA,EAAI,OAG3CzL,GAAQI,MAAQ,IACXJ,GAAQI,MACXhF,MAA2B,QAAtBwQ,EAAe,QAAfC,EAAE7L,GAAQI,aAAK,IAAAyL,OAAA,EAAbA,EAAezQ,aAAK,IAAAwQ,EAAAA,EAAI,IAG7BnC,IACFzJ,GAAQI,MAAQ,IACXJ,GAAQI,MACX8N,aAAa,EACbC,iBAAkB,KAMQ,kBAAnBnO,GAAQU,QAAwBV,GAAQU,SAAQV,GAAQU,OAASnE,EAAMI,QAAQkQ,MAAMuB,cAAcpO,GAAQU,QAAU,eAE5HV,GAAQqO,QACVC,OAAOxF,OAAO9I,GAAQqO,QAAQE,SAASC,IACrC,MAAMC,EAAQD,EACM,YAAhBC,EAAM5S,QACR4S,EAAM5S,MAAQU,EAAMI,QAAQM,QAAQ6E,KACtC,IAIA9B,GAAQ0O,YACV1O,GAAQ0O,WAAWH,SAASI,IACbA,EACR9S,MAAQU,EAAMI,QAAQM,QAAQ6E,IAAI,IAIvC9B,GAAQ4O,UACV,OAAQ5O,GAAQ4O,UAAUlO,QACxB,IAAK,gBACHV,GAAQ4O,UAAUlO,OAAS,CACzBnE,EAAMI,QAAQkQ,MAAMgC,oBACpBtS,EAAMI,QAAQkQ,MAAMuB,cAAcU,WAAW9O,GAAQ4O,UAAUG,aAEjE,MACF,IAAK,UACH/O,GAAQ4O,UAAUlO,OAAS,CACzBnE,EAAMI,QAAQkQ,MAAMgC,oBACpBtS,EAAMI,QAAQqS,WAEhB,MACF,IAAK,MACHhP,GAAQ4O,UAAYrS,EAAMI,QAAQkQ,MAAMoC,aA2F9C,OApFAjP,GAAQ+N,MAAQ,IACX/N,GAAQ+N,MACXmB,eAAgBxC,EAChBrD,UAAW0D,EACXoC,UAAW,IACO,QAAhBrD,EAAG9L,GAAQ+N,aAAK,IAAAjC,OAAA,EAAbA,EAAeqD,UAClBtT,OAAoB,QAAbkQ,EAAA/L,GAAQ+N,aAAK,IAAAhC,GAAW,QAAXC,EAAbD,EAAeoD,iBAAS,IAAAnD,OAAX,EAAbA,EAA0BnQ,QAASU,EAAMI,QAAQkQ,MAAMsC,WAEhEC,eAAgB,CAAEC,MAAO,IAE3BrP,GAAQI,MAAQ,IACXJ,GAAQI,MACX8O,eAAgBxC,EAChBrD,UAAW0D,EACXoC,UAAW,IACO,QAAhBlD,EAAGjM,GAAQI,aAAK,IAAA6L,OAAA,EAAbA,EAAekD,UAClBtT,OAAoB,QAAbqQ,EAAAlM,GAAQI,aAAK,IAAA8L,GAAW,QAAXC,EAAbD,EAAeiD,iBAAS,IAAAhD,OAAX,EAAbA,EAA0BtQ,QAASU,EAAMI,QAAQkQ,MAAMsC,WAEhEC,eAAgB,IACE,QAAhBhD,EAAGpM,GAAQI,aAAK,IAAAgM,OAAA,EAAbA,EAAegD,eAClBvT,OAAoB,QAAbwQ,EAAArM,GAAQI,aAAK,IAAAiM,GAAW,QAAXC,EAAbD,EAAe8C,iBAAS,IAAA7C,OAAX,EAAbA,EAA0BzQ,QAASU,EAAMI,QAAQkQ,MAAMsC,YAGlEnP,GAAQE,OAAS,IACZF,GAAQE,OACXmJ,UAAW0D,GAEb/M,GAAQsP,YAAc,IACjBtP,GAAQsP,YACXC,cAAc,EACdlG,UAAW,CACTxN,MAAOU,EAAMI,QAAQM,QAAQuS,aAC7B9S,SAAU8M,EAAiC,CAAEC,aAAYC,WAAW,IACpEJ,QAAS,IAEXF,KAAM,IACkB,QAAtBmD,EAAGvM,GAAQsP,mBAAW,IAAA/C,OAAA,EAAnBA,EAAqBnD,KACxBvN,MAAOU,EAAMI,QAAQkQ,MAAMC,UAC3B2C,UAAW,GAEblG,SAAU,CACRmG,GAAInT,EAAMgK,MAAMF,aAChBsJ,GAAIpT,EAAMgK,MAAMF,aAChBiH,KAAM/Q,EAAMI,QAAQkQ,MAAM+C,kBAC1BC,YAAa,KAKbpD,IACFzM,GAAU,IACLA,GACHM,UAAW,IACNN,GAAQM,UACX1C,MAAO,MACPC,OAAQ,OAEViS,gBAAgB,EAChBC,UAAW,EACX9P,qBAAqB,EACrBqP,YAAanG,EACbjJ,OAAQ,OACR6N,MAAO,IACF/N,GAAQ+N,MACXiC,aAAc,OACdd,eAAgB,IACXlP,GAAQ+N,MAAMmB,eACjBtC,MAAM,GAERuC,UAAW,CAAEtT,MAAO,cAAewT,MAAO,GAC1CY,eAAgB,aAElB7P,MAAO,IACFJ,GAAQI,MACX4P,aAAc,OACdb,UAAW,CAAEtT,MAAO,cAAewT,MAAO,GAC1CH,eAAgB,IACXlP,GAAQI,MAAM8O,eACjBtC,MAAM,MAMP5M,EAAO,EAGHkQ,EAA8BC,IACzC,MAAMC,EAAqBC,EAA4B,CAAEC,YAAa,GAAIC,YAAa,KACvF,MAAO,IACFJ,EACHvS,MAAOwS,EAAmBI,WAC1BC,SAAU,CACRC,SAAUN,EAAmBM,SAC7BC,UAAW,CACTjU,SAAU0T,EAAmBQ,oBAGjCC,cAAe,CACbvS,gBAAiB,OACjBzC,MAAO,QAEV,EAGUiV,EAAwB3T,IAAW,IAAD4T,EAC7C,MAAM,aAAEC,EAAY,cAAEC,EAAa,iBAAEC,EAAgB,cAAE1E,EAAa,MAAEjQ,EAAK,WAAEkN,GAAetM,EAC5F,IAAIgU,EAAiB,IACI,QAAvBJ,EAAGC,EAAahR,eAAO,IAAA+Q,OAAA,EAApBA,EAAsBK,GACzBC,YAAY,GAkCd,MA9BiC,qBAA7BL,EAAaM,cACfH,EAAiB,IACZA,EACHpR,UAAWkR,EAAclR,UACzBwR,UAAW,CACTC,QACEP,EAAcO,SACVP,EAAchE,WACbgE,EAAchE,UAAUT,GAAegF,SAEzC,MAEPC,aAAc,IACTP,EACH9Q,MAAO,IACF8Q,EAAiB9Q,MACpB4P,aAAc,MACd3G,UAAW,CAAExN,MAAOU,EAAMI,QAAQkQ,MAAMG,SAAUtQ,SAAU8M,EAAiC,CAAEC,aAAYC,WAAW,KACtHtO,MAAO,MAET2S,MAAO,IACFmD,EAAiBnD,MACpB3S,MAAO,MAETkU,YAAanG,EACbjJ,OAAQ,QAKPiR,CAAc,EAGjBd,EAA8BpO,IAAmC,IAAlC,YAAEqO,EAAW,YAAEC,GAAatO,EAC/D,MAAMyO,EAAWhR,KAAK+I,IAAI/I,KAAKkJ,IAAyB,GAApB8I,OAAOC,WAAoB,GAAIrB,GAAcC,GACjF,MAAO,CACLC,WAAuB,GAAXE,EACZA,WACAE,kBAA8B,EAAXF,EACpB,EAGUkB,EAAuCC,IAAkC,IAAjC,eAAEC,EAAc,QAAEC,GAASF,EAC9E,MAAMG,EAAgBzP,IACpB,IACE0P,EADY1P,EAAM2P,eACF,GAChBC,EAAO,GAET,OAAQ5P,EAAM4P,MACZ,IAAK,aACHA,EAAO,YACP,MACF,IAAK,YACHA,EAAO,YACP,MACF,IAAK,WACHA,EAAO,UACP,MACF,QACE,OAGJ,IAAIC,EAAiB,IAAIC,WAAWF,EAAM,CACxCG,SAAS,EACTC,YAAY,EACZC,KAAMd,OACNe,OAAQ,EACRC,QAAST,EAAMS,QACfC,QAASV,EAAMU,QACfC,QAASX,EAAMW,QACfC,QAASZ,EAAMY,QACfC,OAAQ,EACRC,cAAe,OAGjBd,EAAM5M,OAAO2N,cAAcZ,GAC3B7P,EAAM0Q,gBAAgB,EAGxB,IAAIC,GAAY,EAChB,IAAKpB,EAAgB,OAErB,MAAMqB,EAAaC,SAASC,cAAc,YAAD/M,OAAayL,IACtD,OAAKoB,GAEL,CAAC,aAAc,YAAa,WAAY,eACrC5E,SAAS+E,IACRH,EAAWI,iBAAiBD,EAAYtB,EAAc,CAAEwB,SAAS,GAAO,IAGrE,KACLN,GAAY,EAEZ,CAAC,aAAc,YAAa,WAAY,eAAe3E,SAAS+E,IAC9DH,EAAWM,oBAAoBH,EAAYtB,EAAc,CAAEwB,SAAS,GAAO,GAC3E,QAZJ,CAaC,ECxUH,GAjIgCpX,EAAAA,EAAAA,IAAOiB,EAAAA,EAAPjB,EAAYE,IAAA,IAAC,MAAEC,EAAK,WAAEkN,GAAYnN,EAAA,MAAM,CAEtE,iDAAkD,CAChDsB,MAAO,mBACP8V,SAAU,QACV7V,OAAQ,QACR8V,QAAS,MACTvS,UAAW,2CACXwS,aAAc,2CACdC,gBAAiB,2CACjBxV,OAAQ,YACRkJ,YAAahL,EAAMI,QAAQC,KAAKkX,aAChCpX,SAAS,GAAD4J,OAAKmD,EAAa,EAAI,GAAE,MAChC5N,MAAOU,EAAMI,QAAQkQ,MAAMU,QAAQ3Q,KACnCsE,WAAY3E,EAAMI,QAAQkQ,MAAMU,QAAQrM,WACxCmF,aAAc9J,EAAMgK,MAAMF,aAC1B,OAAQ,CACN0N,OAAQ,eACR,OAAQ,CACNA,OAAQ,eACRJ,QAAS,eACT,SAAU,CACRjX,SAAS,GAAD4J,OAAKmD,EAAa,EAAI,GAAE,iBAChC5N,MAAM,GAADyK,OAAK/J,EAAMI,QAAQkQ,MAAMU,QAAQ3Q,KAAI,mBAOlD,mDAAoD,CAClD0B,gBAAgB,GAADgI,OAAK/J,EAAMI,QAAQM,QAAO,gBAI3C,kDAAmD,CACjDP,SAAU,UACV+E,UAAW,UACXM,aAAc,WAEd,2CAA4C,CAC1CN,UAAW,GAGb,6GAA8G,CAC5G8F,YAAa,sBAGf,yCAA0C,CACxC1L,MAAOU,EAAMI,QAAQC,KAAKC,UAC1BG,WAAY,IACZgX,cAAe,SACfjS,aAAc,WAEhB,gCAAiC,CAC/BzD,gBAAiB/B,EAAMI,QAAQuE,WAAW+S,MAC1C5V,OAAQ,QAER,gCAAiC,CAC/B6V,WAAY3X,EAAMmF,QAAQ,IAC1ByS,cAAe5X,EAAMmF,QAAQ,IAC7BE,YAAarF,EAAMmF,QAAQ,GAC3B0S,aAAc7X,EAAMmF,QAAQ,GAC5BrD,OAAQ,QACRgW,YAAa,QACbhO,aAAc9J,EAAMgK,MAAMF,aAC1BkB,YAAahL,EAAMI,QAAQC,KAAKC,UAEhC,8BAA+B,CAC7BhB,MAAOU,EAAMI,QAAQC,KAAKC,cAOlC,+CAAgD,CAC9Ce,MAAO,OACPlB,SAAU,UACV,uBAAwB,CACtBkB,MAAO,QAET,qDAAsD,CACpDA,MAAO,MACPmW,OAAQ,QAEV,yEAA0E,CACxE5T,SAAU,WACVmU,IAAK,QACLC,KAAM,MAER,yEAA0E,CACxEpU,SAAU,WACVmU,IAAK,QACLE,MAAO,MAET,iDAAkD,CAChDtT,WAAY3E,EAAMI,QAAQM,QAAQ6E,MAEpC,0DAA2D,CACzDjG,MAAOU,EAAMI,QAAQC,KAAKC,UAC1B8W,QAAS,EACT3W,WAAY,KAEd,gDAAiD,CAC/CkE,WAAY3E,EAAMI,QAAQM,QAAQ6E,KAClCzD,OAAQ,QACRgI,aAAc9J,EAAMgK,MAAMF,eAQ9B,8GAA+G,CAC7GoO,OAAQlY,EAAMI,QAAQC,KAAKK,QAC3ByX,YAAa,GAIf,4BAA6B,CAC3BC,OAAQ,UACR,SAAU,CACR3X,WAAY,MAGjB,I,+CCzHM,MAAM4X,EAAc,GAEdC,EAA0BpL,GAC5BA,EACD,CAAE6K,IAAK,GAAIE,MAAO,EAAGhN,OAAQ,EAAG+M,KAAM,IACtC,CAAED,IAAK,GAAIE,MAAO,GAAIhN,OAAQ,EAAG+M,KAAM,IAGpCO,EAAiB3X,IAAW,IAAD4X,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACpC,MAAM,KAAEC,EAAI,UAAEC,EAAS,WAAEC,EAAU,WAAE/L,EAAU,QAAEzJ,GAAY7C,EAEvDsY,EAAsBZ,EAAuBpL,GAE7ClN,GAAQ2H,EAAAA,EAAAA,KAYRwR,EAAwBA,CAACC,EAASJ,KACpC,MAAMK,EAAO,IAAIC,KAAKF,GAChBG,EAAYF,EAAKG,SAGjBC,EAAqC,IAAdF,GAAiC,IAAdA,EAG1CG,EAAY,IAAIJ,KAAKN,EAAU9M,KAAKyN,cAGpCC,EAAgBP,EAAKM,gBAAkBD,EAE7C,OAAOD,GAAwBG,CAAa,EAI1CzV,EAAgB,OAAPV,QAAO,IAAPA,GAAkB,QAAX+U,EAAP/U,EAAS4O,iBAAS,IAAAmG,GAAlBA,EAAoBqB,WAC/BC,EAA6B,OAAPrW,QAAO,IAAPA,GAAkB,QAAXgV,EAAPhV,EAAS4O,iBAAS,IAAAoG,OAAX,EAAPA,EAAoBtU,OAAO,GAAW,OAAPV,QAAO,IAAPA,GAAkB,QAAXiV,EAAPjV,EAAS4O,iBAAS,IAAAqG,OAAX,EAAPA,EAAoBvU,OAAO,GAAI,KAC7E,OAAPV,QAAO,IAAPA,GAAkB,QAAXkV,EAAPlV,EAAS4O,iBAAS,IAAAsG,OAAX,EAAPA,EAAoBxU,OAYxB,OACIpF,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACmC,UAAvB,OAAPwE,QAAO,IAAPA,GAAe,QAARmV,EAAPnV,EAASE,cAAM,IAAAiV,OAAR,EAAPA,EAAiBhV,WAZPmW,MAAO,IAADC,EACrB,OACIrb,EAAAA,EAAAA,KAACsb,EAAW,CACRhB,WAAYA,EACZ9U,OAAe,OAAPV,QAAO,IAAPA,GAAkB,QAAXuW,EAAPvW,EAAS4O,iBAAS,IAAA2H,OAAX,EAAPA,EAAoB7V,OAC5B+I,WAAYA,GACd,EAMuC6M,IACzCpb,EAAAA,EAAAA,KAACub,EAAAA,GAAkB,CACfnB,KAAMA,EACNoB,KAAe,OAATnB,QAAS,IAATA,OAAS,EAATA,EAAW9M,IACjBkO,GAAa,OAATpB,QAAS,IAATA,OAAS,EAATA,EAAW3M,IACfgO,WAAY,cACZra,MAAO,CACHK,KAAM,CACF0Q,KAAM/Q,EAAMI,QAAQC,KAAKC,WAE7BH,SAAU,UACV6Q,QAAS,CACL1F,UAAW,CACP3G,WAAmC,SAAvB3E,EAAMI,QAAQka,KAAkB,UAAY,OACxDhb,MAAOU,EAAMI,QAAQC,KAAKK,UAGlC6Z,KAAM,CACFzW,MAAO,CACH0W,KAAM,CACFtC,OAA+B,SAAvBlY,EAAMI,QAAQka,KAAkB,UAAY,QAExDja,KAAM,CACF0Q,KAAM/Q,EAAMI,QAAQC,KAAKK,WAIrC+Z,KAAM,CACFD,KAAM,CACFtC,OAA+B,SAAvBlY,EAAMI,QAAQka,KAAkB,UAAY,UAIhEnW,OAAQA,EACRuW,SAAiB,OAAPjX,QAAO,IAAPA,GAAkB,QAAXoV,EAAPpV,EAAS4O,iBAAS,IAAAwG,OAAX,EAAPA,EAAoB6B,SAC9BC,SAAiB,OAAPlX,QAAO,IAAPA,GAAkB,QAAXqV,EAAPrV,EAAS4O,iBAAS,IAAAyG,OAAX,EAAPA,EAAoB6B,SAC9BnD,OAAQ0B,EACRb,YAAaA,EACbuC,iBAAkB5a,EAAMI,QAAQC,KAAKK,QACrCma,iBAAkB,EAClBC,WAAY,IACZC,eAAgB,EAChB/J,QAASjR,IAA4B,IAA3B,IAAEib,EAAG,MAAEjS,EAAK,MAAEzJ,GAAOS,EAC3B,MAAMkb,EAAclC,EAAKmC,MAAKvS,GAAQA,EAAKqS,MAAQA,IAC7CG,EAAcF,GAtFRjK,EAsFyCiK,EAAYjK,SArF9D,IAAIoK,WACAC,gBAAgBrK,EAAS,aACjCsK,KAAKC,WAmFwE,GAtFhEvK,MAwFZ,OACIrS,EAAAA,EAAAA,KAAC6c,EAAa,CACVR,IAAKA,EACL1b,MAAOA,EACP6b,YAAaA,EACbnC,UAAWA,EACXG,sBAAuBA,GACzB,MAIf,EAKLqC,EAAgB5Y,IAAoE,IAAnE,IAAEoY,EAAG,MAAE1b,EAAK,YAAE6b,EAAW,UAAEnC,EAAS,sBAAEG,GAAuBvW,EAChF,MAAM6Y,GAAgBC,EAAAA,EAAAA,QAAO,MAiB7B,OAZAjT,EAAAA,EAAAA,YAAU,KACN,GAAIgT,EAAcrP,SAAW+M,EAAsB6B,EAAKhC,GAAY,CAChE,MAAM2C,EAAYF,EAAcrP,QAAQwP,cACpCD,IACAA,EAAU7T,MAAMiQ,IAAM,OAE9B,IACD,CAAC0D,EAAetC,KAMfpa,EAAAA,EAAAA,MAAC+B,EAAAA,EAAG,CAAC+a,IAAKJ,EAAeK,UAAU,eAAc7c,SAAA,EAC7CN,EAAAA,EAAAA,KAAC6M,EAAAA,EAAI,CAACjM,GAAI,CAAEwC,gBAAiBzC,EAAOyc,GAAI,GAAKza,OAAQ,OAAQD,MAAO,OAAQyI,aAAc,UACzFrK,EAAAA,EAAAA,IAAM0b,EAAa,CAAEzb,QAASC,EAAAA,MAC7B,EAIRsa,EAAcvU,IAAyC,IAAxC,WAAEuT,EAAU,OAAE9U,EAAM,WAAE+I,GAAYxH,EAEnD,GAAwB,QAAV,OAAVuT,QAAU,IAAVA,OAAU,EAAVA,EAAY/M,MAAoC,QAAV,OAAV+M,QAAU,IAAVA,OAAU,EAAVA,EAAY5M,KAAc,OAAO,KAEjE,MAAMrM,GAAQ2H,EAAAA,EAAAA,KAGRqU,EAAW7X,EAAOxC,KAAI,CAACrC,EAAOuC,EAAOoa,KAEvC,MAAMrY,EAAY/B,GAASoa,EAAMhZ,OAAS,GAAM,IAChD,MAAM,GAAN8G,OAAUzK,EAAK,KAAAyK,OAAInG,EAAQ,QAC5BsY,KAAK,MAEFC,EAAiB,CACnBvY,SAAU,SACVvC,MAAO,cACP6D,UAAW,OACX8S,KAAO9K,EAAa,qBAAuB,oBAGzCkP,EAAgB,CAClBzX,WAAW,6BAADoF,OAA+BiS,EAAQ,KACjD1c,MAAOU,EAAMI,QAAQC,KAAKK,QAC1BoB,OAAO,aAADiI,OAAe/J,EAAMI,QAAQC,KAAKK,SACxCR,SAAU,QACVoB,OAAQ,SACRyG,UAAW,UACXwD,QAAS,OACTJ,eAAgB,iBAGdkR,EAAa,CACfzY,SAAU,WACVmU,IAAK,WACL5X,SAAU,UAGd,OACIxB,EAAAA,EAAAA,KAACmC,EAAAA,EAAG,CAACgH,MAAOqU,EAAeld,UACvBF,EAAAA,EAAAA,MAAC+B,EAAAA,EAAG,CAACgH,MAAOsU,EAAcnd,SAAA,EACtBN,EAAAA,EAAAA,KAAA,QAAMmJ,MAAOuU,EAAWpd,SAAEga,EAAW/M,OACrCvN,EAAAA,EAAAA,KAAA,QAAMmJ,MAAOuU,EAAWpd,SAAEga,EAAW5M,UAEvC,EAKRyN,EAAwBA,CAACwC,EAAYC,EAAUC,KACjD,SAASC,EAASC,GAGdA,EAAMA,EAAIhd,QADa,oCACW,SAAUid,EAAGC,EAAGC,EAAGC,GACjD,OAAOF,EAAIA,EAAIC,EAAIA,EAAIC,EAAIA,CAC/B,IAEA,MAAMC,EAAS,4CAA4CC,KAAKN,GAChE,OAAOK,EAAS,CAACE,SAASF,EAAO,GAAI,IAAKE,SAASF,EAAO,GAAI,IAAKE,SAASF,EAAO,GAAI,KACjF,CAAC,KAAM,KAAM,KACvB,CAEA,SAASG,EAASN,EAAGC,EAAGC,GACpB,MAAO,IAAM,CAACF,EAAGC,EAAGC,GAAGnb,KAAIwb,IACvB,MAAMT,EAAMS,EAAEzQ,SAAS,IACvB,OAAsB,IAAfgQ,EAAIzZ,OAAe,IAAMyZ,EAAMA,CAAG,IAC1CR,KAAK,GACZ,CAEA,SAASkB,EAAiBC,EAAQC,EAAQC,GACtC,IAAIR,EAASM,EAAOG,QACpB,IAAK,IAAIxa,EAAI,EAAGA,EAAI,EAAGA,IACnB+Z,EAAO/Z,GAAKG,KAAKsa,MAAMV,EAAO/Z,GAAKua,GAAUD,EAAOta,GAAKqa,EAAOra,KAEpE,OAAO+Z,CACX,CAEA,IAAIW,EAAWjB,EAASH,GACpBqB,EAASlB,EAASF,GAClBqB,EAAa,GAEjB,IAAK,IAAI5a,EAAI,EAAGA,EAAIwZ,EAAOxZ,IAAK,CAC5B,IACI6a,EAAoBT,EAAiBM,EAAUC,EADtC3a,GAAKwZ,EAAQ,IAE1BoB,EAAW1a,KAAKga,KAAYW,GAChC,CAEA,OAAOD,CAAU,E,8GCjPrB,MAKA,GALwB,CACtBE,OAAQ,SACRC,MAAO,SCMIC,GAA2Bje,IAAmD,IAAlD,MAAEke,EAAK,iBAAEC,EAAgB,gBAAEC,GAAiBpe,EACnF,MAAMqe,EAAe,CACnB,CACE/U,MAAO,WACPgV,MAAOA,KAAA,CACLC,WAAWC,EAAAA,GAAAA,IAAWC,EAAAA,GAAAA,GAAQP,GAAQ,KACtCQ,SAASC,EAAAA,GAAAA,GAAST,MAGtB,CACE5U,MAAO,WACPgV,MAAOA,KAAA,CACLC,WAAWC,EAAAA,GAAAA,IAAWC,EAAAA,GAAAA,GAAQP,GAAQ,KACtCQ,SAASC,EAAAA,GAAAA,GAAST,OAKlBU,EAAc,CAAC,CACnBtV,MAAO,WACPgV,MAAOA,KAAA,CACLC,WAAWC,EAAAA,GAAAA,IAAWC,EAAAA,GAAAA,GAAQP,GAAQ,KACtCQ,SAASC,EAAAA,GAAAA,GAAST,MAGtB,CACE5U,MAAO,YACPgV,MAAOA,KAAA,CACLC,WAAWC,EAAAA,GAAAA,IAAWC,EAAAA,GAAAA,GAAQP,GAAQ,MACtCQ,SAASC,EAAAA,GAAAA,GAAST,MAGtB,CACE5U,MAAO,WACPgV,MAAOA,KAAA,CACLC,UAAWJ,EACXO,SAASC,EAAAA,GAAAA,GAAST,OAKtB,OAAQE,IAAoBS,GAAgBd,OAAUM,EAAe,IAAIA,KAAiBO,EAAY,EAG3FE,IAAwBhf,EAAAA,EAAAA,IAAOif,EAAAA,EAAPjf,EAAc+C,IAAA,IAAC,MAAE5C,EAAK,gBAAE+e,EAAe,YAAEC,GAAapc,EAAA,MAAM,CAC/FsI,QAA4B,IAApB6T,GAA4B,IACpCnb,SAAU,WACVwT,QAAS2H,EAAkB/e,EAAMmF,QAAQ,GAAK,EAC9CqS,OAASuH,IAAoBC,EAAehf,EAAMmF,SAAS,GAAK,EAChEgS,SAAU,OACVxS,WAAYoa,EAAkB/e,EAAMI,QAAQ4H,0BAA4B,cACxEnD,WAA+B,IAApBka,GAA6B,OACxC,0CAA2C,CACzCpa,WAAY3E,EAAMI,QAAQE,WAE5B,gHAAiH,CAC/GqE,WAAY,eAEd,kBAAmB,CACjBmF,aAAc9J,EAAMgK,MAAMF,aAC1BjF,UAAW,QAEb,8BAA+B,CAC7B/C,QAA4B,IAApBid,GAA6B,QAEvC,oBAAqB,CACnBvH,OAAQ,EACRtX,SAAU,SAEZ,wBAAyB,CACvBsX,OAAQ,EACR1N,aAAciV,EAAkB/e,EAAMgK,MAAMF,aAAe,EAC3D,yCAA0C,CACxChI,OAAQid,EAAe,aAAAhV,OAAgB/J,EAAMI,QAAQ6e,OAAOzU,UAAa,SAG7E,6DAA8D,CAC5D1I,QAA4B,IAApBid,GAA6B,yBAEvC,8CAA+C,CAC7CvH,OAAQ,GAEV,sCAAuC,CACrC0H,aAAiC,IAApBH,GAAyB,aAAAhV,OAAiB/J,EAAMI,QAAQ6e,OAAOzU,SAAQ,gBAEtF,6CAA8C,CAC5Ce,SAA6B,IAApBwT,GAA6B,kBACtC3H,QAAS,GAEX,kBAAmB,CACjB7L,QAAS,QAEX,yCAA0C,CACxCA,SAA6B,IAApBwT,GAA6B,QAExC,wBAAyB,CACvBI,YAAgC,IAApBJ,GAA6B,SACzC1d,MAAO,kBACP8V,SAAU,QACVK,OAAQ,QAEV,2BAA4B,CAC1BtX,SAAU,QACV4J,aAAc9J,EAAMgK,MAAMF,aAC1BhI,OAAQid,EAAkB,OAAM,aAAAhV,OAAgB/J,EAAMI,QAAQ6e,OAAOzU,UACrE,UAAW,CACT1I,OAAQid,EAAkB,OAAM,aAAAhV,OAAgB/J,EAAMI,QAAQC,KAAKK,WAGvE,+BAAgC,CAC9BW,MAAO,OACP+D,cAAe,kBAEjB,qBAAsB,CACpBA,cAAe,MACflF,SAAU,SAEZ,yBAA0B,CACxBZ,MAAOU,EAAMI,QAAQC,KAAKC,UAC1BwJ,aAAc9J,EAAMgK,MAAMF,aAC1BsN,QAAQ,GAADrN,OAAK/J,EAAMmF,QAAQ,IAAI,KAAA4E,OAAI/J,EAAMmF,QAAQ,KAElD,6BAA8B,CAC5BrD,OAAQ,OACRT,MAAO,QAET,uBAAwB,CACtBsD,WAAY3E,EAAMI,QAAQM,QAAQ6E,KAClCuE,aAAc9J,EAAMgK,MAAMF,aAC1BiD,QAAS,EACT,UAAW,CACTA,QAAS,GACTpI,WAAY3E,EAAMI,QAAQM,QAAQ6E,OAGtC,2BAA4B,CAC1BjG,MAAO,SAET,uBAAwB,CACtB0L,YAAY,6CAEd,wBAAyB,CACvBA,YAAY,6CAEd,oBAAqB,CACnBlJ,OAAQ,QAEV,4EAA6E,CAC3ExC,MAAOU,EAAMI,QAAQM,QAAQ6E,MAE/B,4BAA6B,CAC3BpF,SAAU,QAEZ,2FAA4F,CAC1FwE,WAAY3E,EAAMI,QAAQgf,iBAAiB1S,YAE7C,uBAAwB,CACtBpN,MAAOU,EAAMI,QAAQC,KAAKK,QAAQgM,YAEpC,sCAAuC,CACrCK,QAAS,IAEX,mCAAoC,CAClCzN,MAAOU,EAAMI,QAAQC,KAAKC,UAAUoM,WACpC/H,WAAY,OACZyS,QAAQ,GAADrN,OAAK/J,EAAMmF,QAAQ,GAAE,KAAA4E,OAAI/J,EAAMmF,QAAQ,IAC9C,UAAW,CACTrD,OAAO,aAADiI,OAAe/J,EAAMI,QAAQC,KAAKC,aAG5C,8BAA+B,CAC7BhB,MAAOU,EAAMI,QAAQC,KAAKC,WAE5B,oBAAqB,CACnByB,gBAAiB/B,EAAMI,QAAQgf,kBAEjC,qTAAsT,CACpTC,qBAAsB,OACtBC,wBAAyB,QAE3B,iUAAkU,CAChUC,oBAAqB,OACrBC,uBAAwB,QAE1B,oJAAqJ,CACnJxH,KAAM,GAER,6GAA8G,CAC5GC,MAAO,GAET,0DAA2D,CACzDF,IAAK,MACL9M,OAAQ,OAEV,eAAgB,CACdE,eAAgB,SAChBvB,WAAY,UAEd,YAAa,CACXpE,aAAc,MACd,SAAU,CACRuS,IAAK,MACL9M,OAAQ,QAGZ,yBAA0B,CACxBwU,UAAW,UAEb,uCAAwC,CACtC3gB,QAAS,KACT4F,gBAAgB,8VAADqF,OAA+V/J,EAAMI,QAAQC,KAAKC,UAAS,sBAC1Ye,MAAO,UACPC,OAAQ,UACRiK,QAAS,QACT3H,SAAU,WACVmU,IAAK,MACLlN,UAAW,mBACXmN,KAAM,WAER,iCAAkC,CAChC1Y,MAAOU,EAAMI,QAAQM,QAAQ6E,MAE/B,0CAA2C,CACzCZ,WAAY3E,EAAMI,QAAQE,UAAUiF,KACpClE,MAAO,UACPC,OAAQ,UACRwI,aAAc,OAEjB,I,wCCxOc,SAAS4V,GAAqB3f,GAAwD,IAAvD,gBAAEoe,EAAe,mBAAEwB,EAAkB,YAAEX,GAAajf,EAOhG,OACEhB,EAAAA,EAAAA,MAAC2K,EAAAA,EAAK,CACJC,UAAU,MACVC,WAAW,SACXzE,QAAS,EAAElG,SAAA,EAEXN,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CAACE,QAAQ,UAAUkM,QAAQ,QAAQjM,MAAM,iBAAgBL,SAAC,kBAIrEF,EAAAA,EAAAA,MAAC6gB,GAAAA,EAAiB,CAChBtgB,MAAM,UACNyJ,MAAOoV,EACP0B,WAAS,EACT/Z,SApBe+C,CAAC7C,EAAO8Z,KACX,OAAZA,GACFH,EAAmBG,EACrB,EAkBI,aAAW,4CACX9e,KAAK,QAAO/B,SAAA,EAEZN,EAAAA,EAAAA,KAACohB,GAAAA,EAAY,CACX/e,KAAK,QACLzB,GAAI,CAAEygB,cAAe,wBAAyBC,GAAI,KAAMC,GAAI,IAC5DnX,MAAO6V,GAAgBd,OACvB,aAAYc,GAAgBd,OAAO7e,SAElC2f,GAAgBd,UAEnBnf,EAAAA,EAAAA,KAACohB,GAAAA,EAAY,CACX/e,KAAK,QACLzB,GAAI,CAAEygB,cAAe,wBAAyBC,GAAI,KAAMC,GAAI,IAC5DnX,MAAO6V,GAAgBb,MACvB,aAAYa,GAAgBb,MAAM9e,SAEjC2f,GAAgBb,aAK3B,C,+DC5BA,MAAMoC,GACK,oCADLA,GAEK,wCA0MLC,GAAuBC,IAEzB1hB,EAAAA,EAAAA,KAAC2hB,EAAAA,EAAK,CACJC,SAAS,QACThhB,GAAI,CACF2gB,GAAI,GACJD,GAAI,EACJ1U,QAAS,OACT3B,WAAY,SACZ,QAAS,CACPzJ,SAAU,UACVyK,EAAG,GAEL,mBAAoB,CAClBzK,SAAU,OACV4b,GAAI,KAEN9c,SAEDohB,IAKP,GA/N+Bzf,IAC7B,MAAM,iBAAEsd,GAAqBtd,GAEvB,gBAAE4f,EAAe,UAAEjd,EAAS,aAAEkd,IAAiBhiB,EAAAA,EAAAA,YAAWiiB,GAAAA,IACzDvC,EAAiBwB,IAAsB/Z,EAAAA,EAAAA,UAASgZ,GAAgBd,QAEjEG,EAAQ,IAAI3E,MAEX+G,EAAqBM,IAA0B/a,EAAAA,EAAAA,YAEhD5F,GAAQ2H,EAAAA,EAAAA,KACRqX,GAAc4B,EAAAA,EAAAA,GAAc5gB,EAAMO,YAAYC,KAAK,QAIlDqgB,EAAeC,IAAoBlb,EAAAA,EAAAA,UAAS,CACjD,IAAKoY,GAAyB,CAAEC,QAAOC,qBAAoB,GAAGG,QAAS0C,IAAK,gBAGvEC,EAAUC,IAAerb,EAAAA,EAAAA,aAGzBmZ,EAAiBmC,IAAsBtb,EAAAA,EAAAA,WAAS,GACjDub,GAAWzF,EAAAA,EAAAA,QAAO,OAEjB0F,EAAgBC,IAAqBzb,EAAAA,EAAAA,WAAS,IAGrD6C,EAAAA,EAAAA,YAAU,KACR,MAAM6Y,EAAsBtb,IACtBmb,EAAS/U,UAAY+U,EAAS/U,QAAQmV,SAASvb,EAAM8C,SACvDoY,GAAmB,EACrB,EAIF,OAFArK,SAASG,iBAAiB,YAAasK,GAEhC,KACLzK,SAASK,oBAAoB,YAAaoK,EAAmB,CAC9D,GACA,CAACH,IAEJ,MAAMK,EAAmBX,IACvB,MAAM,UAAEvC,EAAS,QAAEG,GAAYoC,EAG/B,IAAIY,EAAAA,GAAAA,GAAUnD,EAAWG,GACvBkC,EAAuBR,SAQzB,GAJEQ,EAAuB,MAIrBxC,IAAoBS,GAAgBd,OAAQ,CAC9C,MAAM4D,GAAOC,EAAAA,GAAAA,GAAiBlD,EAASH,GACvCqC,EAAwBe,EAAO,GAAMvB,GAA+B,KACtE,MAG8B,OAAxBE,GAA8BM,EAAuB,KAC3D,GAWFlY,EAAAA,EAAAA,YAAU,KACR+Y,EAAgBX,EAAc,GAAG,GAChC,CAAC1C,IAkDJ,OACExf,EAAAA,EAAAA,KAACkgB,GAAqB,CACpBE,gBAAiBA,EACjBC,YAAaA,EACbnD,IAAKsF,EACLS,UAAW,EACXjX,QAASA,IAAMuW,GAAmB,GAAMjiB,UAExCF,EAAAA,EAAAA,MAAC2K,EAAAA,EAAK,CAACC,UAAW,SAAUxE,QAAS,EAAElG,SAAA,EACrCN,EAAAA,EAAAA,KAACkjB,EAAAA,GAAe,CACdC,OAAQjB,EACR/a,SAtEcgc,IACfA,IAELN,EAAgBM,EAAOC,WACvBjB,EAAiB,CAACgB,EAAOC,YAAW,EAmE9BC,cACEC,EAAAA,EAAAA,IACEjE,GAAyB,CACvBC,QAAOC,mBAAkBC,qBAI/B+D,YAAa,GACbC,YAAa,CAACniB,EAAMI,QAAQM,QAAQ6E,KAAMvF,EAAMI,QAAQE,UAAUiF,KAAMvF,EAAMI,QAAQC,KAAKC,WAC3F8hB,QAASlE,EACTmE,QAASpE,EACTqE,OAAQ,EACRC,yBAAyB,EACzB5Y,UAAW,aACX6Y,aAAa,EACbC,oBAAoB,EACpBC,cAAc,YACdC,qBAAqB,aACrBC,mBAAmB,WACnBC,oBAAoB,EACpBC,gBAAgB,IAGjB/D,IACChgB,EAAAA,EAAAA,MAAC2K,EAAAA,EAAK,CACJC,UAAU,SACVC,WAAW,MACXvI,MAAM,OACN8D,QAAS,EAAElG,SAAA,EAEXN,EAAAA,EAAAA,KAAC+gB,GAAqB,CACpBvB,gBAAiBA,EACjBwB,mBAAoBA,EACpBX,YAAaA,KAEfjgB,EAAAA,EAAAA,MAAC2K,EAAAA,EAAK,CAACC,UAAU,MAAMxE,QAAS,EAAElG,SAAA,CAE9BohB,GAAuBD,GAAoBC,IAE7C1hB,EAAAA,EAAAA,KAACokB,EAAAA,EAAM,CACL1jB,QAAQ,YACR2B,KAAK,QACLwJ,SAAkC,OAAxB6V,EACV1V,QArGkB3E,IAC9B,GAA4B,OAAxBqa,EAA8B,OAElCra,EAAMgd,kBAEN,MAAMC,GAASC,EAAAA,GAAAA,IAAU,CACvBC,SAAUC,GAAAA,GAAUC,cACpBC,UAAW9C,EACXrC,gBAAiBA,EACjBG,WAAW7M,EAAAA,GAAAA,IAAOoP,EAAc,GAAGvC,UAAW,cAC9CG,SAAShN,EAAAA,GAAAA,IAAOoP,EAAc,GAAGpC,QAAS,gBAGxCwE,IAAWjC,IACbK,GAAkB,IAElBkC,EAAAA,GAAAA,GAAiB,CACfC,IAAKP,EACLQ,UAAW,OACXC,oBAAoB,IAEnBC,MAAM5K,IACL,MAAM6K,EAAS,IAAIrgB,EAAUqgB,QAC7BA,EAAO,GAAK7K,EACZ0H,EAAa,IACRld,EACHqgB,OAAQA,IAGV3C,EAAYgC,GACZ5B,GAAkB,GAClBH,GAAmB,EAAM,IAE1B2C,OAAOC,IACNC,QAAQC,IAAIF,EAAM,IAExB,EAkEYvkB,GAAI,CACF2L,OAAQ,KACRL,UAAW,oBACX5L,SA/DZmiB,GAAiBziB,EAAAA,EAAAA,KAACslB,EAAAA,EAAgB,CAACC,eAAa,EAACljB,KAAK,YAAY1B,MAAM,YAAe,oBA0EjE,ECvMb,SAAS6kB,GAASvjB,GAAQ,IAADyM,EAEtC,MAAM,UAAE9J,EAAS,cAAE0M,EAAa,WAAEmU,EAAU,WAAElX,EAAU,WAAEgD,EAAU,OAAE5O,EAAM,UAAEyG,GAAcnH,EAGtFkb,EAAYvY,EAAU8gB,gBAAe,GAAAta,OAAMxG,EAAUC,UAAS,KAAAuG,OAAIxG,EAAU8gB,iBAAoB9gB,EAAUC,UAG1G8gB,GAAS7lB,EAAAA,EAAAA,YAAW8lB,EAAAA,IAGnBC,EAAWC,IAAgB7e,EAAAA,EAAAA,aAC3B8e,EAAcC,IAAmB/e,EAAAA,EAAAA,aACjCgf,EAAkBC,IAAuBjf,EAAAA,EAAAA,aACzC2P,EAAgBuP,IAAqBlf,EAAAA,EAAAA,aAErCmf,EAAmBC,IAAwBpf,EAAAA,EAAAA,YAG5C5F,GAAQ2H,EAAAA,EAAAA,MAGPsd,EAAeC,IAAoBtf,EAAAA,EAAAA,WAAS,IAG5Cuf,EAAmBC,IAAwBxf,EAAAA,EAAAA,aAC3Cyf,EAAaC,IAAkB1f,EAAAA,EAAAA,aAC/B2f,EAAmBC,IAAuB5f,EAAAA,EAAAA,aAG1C4P,EAASiQ,IAAM7f,EAAAA,EAAAA,UAAS4G,MAGxBkZ,EAAkBC,KAAuB/f,EAAAA,EAAAA,UAAS,KAGzD,IAAInC,IAAUmiB,EAAAA,EAAAA,UAAQ,KACpB,IAAIC,EAAOzY,EAAqB,IAAKxM,EAAOZ,UAI5C,MAH4B,aAAxBuD,EAAUC,YACZqiB,EAAOlS,EAA2BkS,IAE7BA,CAAI,GACV,CAACjlB,EAAOZ,EAAOuD,EAAUC,YAE5B,MAAOsiB,GAAcC,KAAmBngB,EAAAA,EAAAA,UAAS,OAC1CogB,GAAgBC,KAAqBrgB,EAAAA,EAAAA,UAAS,MAC9CsgB,GAAgBC,KAAqBvgB,EAAAA,EAAAA,UAAS,MAErD,GAA4B,aAAxBrC,EAAUC,UA0CZ,OAzCAiF,EAAAA,EAAAA,YAAU,KACR,MAAM1F,EAAYQ,EAAUR,WACtBQ,EAAUmN,WACTnN,EAAUmN,UAAUT,GAAelN,WAErC,KACL,IAAKA,EAAW,OAEhB,MAAMkJ,EAAclJ,EAAUpB,KAAIgH,GAAQA,EAAKqS,MACzCzO,EAASxJ,EAAUpB,KAAIgH,GAAQA,EAAKI,QACpCiQ,EAAYhN,EAA6BC,GAE/C8Z,GAAgB,CACdhN,KAAMhW,EACNiW,UAAWA,EACXC,WAAY3M,EAA8BC,KAI5C,MAAM6Z,EAAY,IAAI9M,KAAKN,EAAU9M,KAAKyN,cAEpC0M,EADU,IAAI/M,KAAKN,EAAU3M,KAAKsN,cACTyM,EAAY,EAIrCE,EAAwB,EADbnjB,KAAK+I,IAAIga,GAAiB,GAAI,IAGzChN,EAAsBZ,EAAuBpL,GAGnD,IAAIqZ,EAEFA,EADkB,GAAhBF,EACYC,EAAajO,EAAca,EAAoBnB,IAAMmB,EAAoBjO,OAGzEob,GAAgBC,EAAajO,GAAea,EAAoBnB,IAAMmB,EAAoBjO,OAE1Ggb,GAAkBM,EAAY,GAE7B,CAAChjB,KAGF5E,EAAAA,EAAAA,KAAC6nB,EAAuB,CACtBtZ,WAAYA,EACZ4O,UAAWA,EACXlY,SAAS,WACT1D,SAAS,QACTumB,UAAWvZ,EAAa,QAAU8Y,GAAiB,KACnD1kB,OAAQ0kB,GAAiB,KACzBje,UAAWmF,GAAc,QAAQjO,SAEhC6mB,IACCnnB,EAAAA,EAAAA,KAAC4Z,EAAa,CACZQ,KAAM+M,GAAa/M,KACnBC,UAAW8M,GAAa9M,UACxBC,WAAY6M,GAAa7M,WACzB/L,WAAYA,EACZzJ,QAASA,MAIT9E,EAAAA,EAAAA,KAACmC,EAAAA,EAAG,CAACvB,GAAI,CAAEqE,SAAU,WAAYmU,IAAK,EAAGC,KAAM,EAAG3W,MAAO,OAAQC,OAAQ,QAASrC,UAChFN,EAAAA,EAAAA,KAAC+nB,EAAAA,EAAgB,QAU7B,IACIC,GADAC,IAAkB,EAKlBnS,GAAelR,EAAUsjB,UAA8B,QAAvBxZ,EAAI9J,EAAUmN,iBAAS,IAAArD,OAAA,EAAnBA,EAAsB4C,GAAe4W,SACzEpS,KAAgC,IAAfvE,IACnB0W,IAAkB,EAGlBD,GAAsB,IACjBlS,GAAahR,QAChBoR,GAAIN,EAAqB,CACvBE,gBACAC,cAAenR,EACfoR,iBAAkBlR,GAClBwM,gBACAjQ,QACAkN,gBAM6B,qBAA7BuH,GAAaM,cACftM,EAAAA,EAAAA,YAAU,IAC0B4M,EAAqC,CAAEE,iBAAgBC,aAExF,CAACD,KAKR,MAAMhC,GAAiB9P,GAAQ8P,iBAAkB,EAG3CuT,GAAkBrjB,GAAQqjB,iBAAmB,MAGnDre,EAAAA,EAAAA,YAAU,KACJ8K,GAAgBwT,GAAsB,CAAE7d,eAAgBmc,KAE9C,OAAZX,QAAY,IAAZA,GAAAA,EAAcsC,WAAW,IACpBvjB,MACyB,aAAxBF,EAAUC,WAA4B,CAAElC,OAAQokB,KAG1C,OAAZhB,QAAY,IAAZA,GAAAA,EAAcuC,OACVL,KACY,OAAdrR,QAAc,IAAdA,GAAAA,EAAgByR,WAAWL,IACb,OAAdpR,QAAc,IAAdA,GAAAA,EAAgB0R,QAEpB,GACC,CAACjnB,EAAOkN,EAAYkX,EAAYsB,KAInCjd,EAAAA,EAAAA,YAAU,KACH4c,GACD9R,IAA2C,iBAAzBA,GAAe2T,SACnCC,GAAwB,CAAE9B,YAAaA,IACvC0B,GAAsB,CAAE7d,eAAgBmc,IAC1C,GACC,CAACrlB,IAEJ,MA2EMmnB,GAA0BvkB,IAAsB,IAArB,YAAEyiB,GAAaziB,EAC9CyiB,EAAYrT,SAASoV,IAAS,IAADC,EAE3BD,EAAI9nB,MAAQmE,GAAQU,OAAOijB,EAAIE,YAAc7jB,GAAQU,OAAOlB,QAE5DmkB,EAAIG,eAA+B,QAAjBF,EAAG5jB,GAAQqO,cAAM,IAAAuV,OAAA,EAAdA,EAAiBD,EAAIE,YAAY,GACtD,EAGEE,GAAuB9hB,IAAuC,IAC9D+hB,EAAUC,GADc,UAAElD,EAAS,kBAAEW,GAAmBzf,EAQ5D,OANAyf,EAAkBnT,SAAQ,CAACoV,EAAKvlB,KAC9B,GAAc,IAAVA,EAAa,OACjB,MAAMwc,EAAQmG,EAAUmD,eAAeP,EAAIQ,eACtCC,MAAMxJ,EAAMnS,MAAQmS,EAAMnS,MAAKub,EAAWA,EAAWtkB,KAAK+I,IAAIub,EAAUpJ,EAAMnS,KAAOmS,EAAMnS,MAC3F2b,MAAMxJ,EAAMhS,MAAQgS,EAAMhS,MAAKqb,EAAWA,EAAWvkB,KAAKkJ,IAAIqb,EAAUrJ,EAAMhS,KAAOgS,EAAMhS,IAAG,IAE9F,CAAEH,IAAKub,EAAUpb,IAAKqb,EAAU,EAGnCX,GAAwBzR,IAA+F,IAA9F,eAAEpM,EAAc,mBAAE4e,EAAqB3C,EAAiB,cAAE4C,EAAgBrD,GAAcpP,EACrH,GAAKwS,EAAL,CAIA,GAFAxC,EAAepc,GAEe,qBAA1BqK,GAAe2T,QAA2D,OAA1B3T,GAAe2T,OAAiB,CAClF,MAAMc,EAAqB,CAAC,EAC5B9e,EAAe8I,SAASoV,IACjBA,EAAIxe,WACPof,EAAmBZ,EAAIE,aAAe,CACpChoB,MAAO,cACPoE,qBAAqB,EACrBukB,iBAAiB,GAClB,IAGQ,OAAbF,QAAa,IAAbA,GAAAA,EAAef,WAAW,IACrBvjB,GACHqO,OAAQ,IACHrO,GAAQqO,UACRkW,IAGT,MACK,GAA8B,kBAA1BzU,GAAe2T,OAA4B,CAClD,IAAIgB,EAAiB,GACrBA,EAAehlB,KAAK,GACpBgG,EAAe8I,SAASmW,IACtB,GAAIA,EAAWvf,SAAU,CACvBsf,EAAehlB,KAAKilB,GAGpB,IAAK,IAAInlB,EAAImlB,EAAWC,SAAW,EAAGplB,EAAI8kB,EAAmB7kB,QACxB,SAA/B6kB,EAAmB9kB,GAAGqlB,KADyCrlB,IAEjEklB,EAAehlB,KAAK4kB,EAAmB9kB,GAO7C,KAEW,OAAb+kB,QAAa,IAAbA,GAAAA,EAAeO,QAAQ,CAAErT,QAASiT,IAElC,MAAMK,EAAa,IAAK9kB,IAOxB8kB,EAAWpkB,OAAS+E,EAAeE,QAAQge,GAAQA,EAAIxe,WAAUjH,KAAKylB,GAAQA,EAAI9nB,QAGlF,MAAMwS,EAAS,CAAC,EAChB,IAAI0W,EAAsB,EAC1Btf,EAAe8I,SAASoV,IACjBA,EAAIxe,WACiB,MAAtBwe,EAAIG,iBACNzV,EAAO0W,GAAuBpB,EAAIG,gBAEpCiB,IAAqB,IAEvBD,EAAWzW,OAASA,EACP,OAAbiW,QAAa,IAAbA,GAAAA,EAAef,WAAWuB,EAC5B,CAGa,OAAbR,QAAa,IAAbA,GAAAA,EAAed,OAEXL,KACY,OAAdrR,QAAc,IAAdA,GAAAA,EAAgB0R,OAvEa,CAwE/B,GA+BFxe,EAAAA,EAAAA,YAAU,KACR,GAAI6b,GAAU/gB,EAAW,CAEvB,GAAIklB,KAAKC,UAAUnlB,KAAeklB,KAAKC,UAAU3D,GAAoB,OACrEC,EAAqBzhB,GAGrB,MAAMR,EAAYQ,EAAUR,WACtBQ,EAAUmN,WACTnN,EAAUmN,UAAUT,GAAelN,WAErC,KACL,IAAKA,EAAW,OAEhB,MAAM4lB,EAAgBrE,EAAOsE,cAAcC,iBAAiB9lB,GAC5D0hB,EAAakE,GAGb,MAKMG,EAnDiC7T,KACzC,IAAKA,EAAS,OAEd,MAAM8T,EAAmB,GACzB,IAAK,MAAMC,KAAU/T,EACnB,GAAsB,kBAAX+T,EAETD,EAAiB7lB,KAAK8lB,QACjB,GAAsB,kBAAXA,EAChB,GAAIA,EAAOC,MAAwB,cAAhBD,EAAOC,KAAsB,CAG9C,MAAMC,EAAe,IAAIC,SAAS,YAAa,SAAUH,EAAOC,MAChEF,EAAiB7lB,KAAK,IACjB8lB,EACHC,KAAMC,GAEV,MAEEH,EAAiB7lB,KAAK8lB,GAI5B,OAAOD,CAAgB,EA4BQK,CALb7lB,EAAU0R,SACpB1R,EAAUmN,WACTnN,EAAUmN,UAAUT,GAAegF,SAErC,MAICoU,EAAmB,IAAI/E,EAAOsE,cAAcU,aAAa,CAC7D9lB,UAAWD,EAAUC,UACrBghB,UAAaoC,QAAmC/gB,EAAhB8iB,EAChCllB,QAASA,GACTwS,KAAM,CACJhB,QAAS6T,GAEXS,YAAa/T,IAIf,GAFAmP,EAAgB0E,GAEZzC,GAAiB,CACnB,MAAM4C,EAAuB,IAAIlF,EAAOsE,cAAca,UACpD5S,SAAS6S,eAAe,aAAD3f,OAAcyL,KACvCqP,EAAoB2E,GAEpBlF,EAAOsE,cAAce,OAAOC,YAAYJ,EAAsB,QAASK,IAEvE,MAAMC,EAAqB,IAAIxF,EAAOsE,cAAcmB,eAAe,CACjEhV,YAAaN,GAAaM,YAC1BtR,QAASkjB,GACT4C,YAAY,WAADxf,OAAayL,KAE1BsP,EAAkBgF,GAGlBN,EAAqBQ,KAAKF,EAAoBT,GAE9CG,EAAqBvC,KAAK0B,EAC5B,MAEErE,EAAOsE,cAAce,OAAOC,YAAYP,EAAkB,QAASQ,IACnER,EAAiBpC,OAInB,GAAI1T,GAAgB,CAClB,MAAM,sBAAE0W,EAAqB,gBAAEC,GAtQXnqB,KAAkD,IAAjD,aAAE2kB,EAAY,UAAEF,EAAS,eAAEjR,GAAgBxT,EAEpE,IAAIoqB,EAAczF,EAAa0F,UAG/B,GAA2B,MAAvBD,EAAYlV,QAAiB,CAC/B,MAAMoV,EAAoB,IAAI/F,EAAOsE,cAAc0B,SAAS9F,GAC5DE,EAAa4D,QAAQ,CACnBrT,QAASoV,EAAkBpV,UAE7BkV,EAAczF,EAAa0F,SAC7B,CAEA,IAAIG,GAAqC,EACrCC,EAAkB,EACtB,MAAMrF,EAAoBgF,EAAYlV,QAAQtT,KAAI,CAACylB,EAAKvlB,KAGnC,kBAARulB,IAAkBA,EAAM,CACjCiB,KAAMkC,EAAqC,SAAW,OACtD3C,aAAcR,IAEhBA,EAAI/d,MAAQmb,EAAUiG,eAAerD,EAAIQ,cACzCR,EAAIsD,yBAA2B7oB,EAE/B0oB,EAAqCA,IAAsC,EAG1D,SAAbnD,EAAIiB,OAGF9U,EAAeoX,gCACbpX,EAAeoX,gCAAgC3hB,SAASnH,GAC1DulB,EAAIxe,UAAW,EAGfwe,EAAIxe,UAAW,EAMb2K,EAAehM,cACjB6f,EAAIxe,UAAW,EAIbwe,EAAIxe,SADkB,IAApB4hB,EAQRpD,EAAIE,YAAckD,EAClBA,KAEKpD,KAEThC,EAAqBD,GACrB,MAAMI,EAAoBiC,GAAqB,CAAEhD,UAAWA,EAAWW,kBAAmBA,IAC1FK,EAAoBD,GAIpB,MAAMF,EAAcF,EAAkB/b,QAAQge,IAAS,IAADwD,EAAAC,EACpD,MAAoB,SAAbzD,EAAIiB,OAA0E,KAAzC,QAAduC,EAAAnnB,GAAQqO,cAAM,IAAA8Y,GAAmB,QAAnBC,EAAdD,EAAiBxD,EAAIE,oBAAY,IAAAuD,OAAnB,EAAdA,EAAmC5C,gBAAyB,IAM5F,MAH8B,kBAA1B1U,EAAe2T,QAA4BC,GAAwB,CAAE9B,YAAaA,IAEtFC,EAAeD,GACR,CAAE4E,sBAAuB9E,EAAmB+E,gBAAiB7E,EAAa,EA8L1ByF,CAAkB,CAAEpG,aAAc2E,EAAkB7E,UAAWmE,EAAepV,eAAgBA,KAEjJwT,GAAsB,CACpBe,mBAAoBmC,EACpB/gB,eAAgBghB,EAChBnC,cAAesB,GAEnB,CACF,IACC,CAAC/E,EAAQ/gB,IAEZ,MAuBMsmB,GAAeA,KACd5E,GAELC,GAAiB,EAAM,EA+CzB,OACEnmB,EAAAA,EAAAA,MAACynB,EAAuB,CACtBtZ,WAAYA,EACZ4O,UAAWA,EACXlY,SAAS,WACTtC,OAAO,OACPmlB,UAAmC,aAAxBljB,EAAUC,WAA4B,QAAQvE,SAAA,CAGxDgmB,IACCtmB,EAAAA,EAAAA,KAACmC,EAAAA,EAAG,CAACvB,GAAI,CAAEqE,SAAU,WAAYmU,IAAK,EAAGC,KAAM,EAAG3W,MAAO,OAAQC,OAAQ,QAASrC,UAChFN,EAAAA,EAAAA,KAAC+nB,EAAAA,EAAgB,MAtDlBzB,EAuCI,MArCLlmB,EAAAA,EAAAA,MAACsM,EAAAA,GAAI,CACHC,WAAS,EACT9L,GAAI,EACJD,GAAI,CACFwrB,IAAK,EACL,CAAC/qB,EAAMO,YAAYC,KAAK,OAAQ,CAAEuqB,IAAK,IACvC9rB,SAAA,CAEDsU,KACC5U,EAAAA,EAAAA,KAAC0M,EAAAA,GAAI,CAAC1C,MAAI,EACRpJ,GAAI,CACF,CAACS,EAAMO,YAAYC,KAAK,OAAQ,CAAEa,MAAO,SACzCpC,UAEFN,EAAAA,EAAAA,KAACwI,EAAc,CACbC,MAAOie,EACP9d,cAAegM,GAAehM,cAC9BC,YAAa+L,GAAe/L,YAC5BF,WAAU,GAAAyC,OAAKxG,EAAU1E,MAAK,aAC9B4I,kBAAmBsf,GACnBrf,aAAa,MAKjBof,KACAnoB,EAAAA,EAAAA,KAAC0M,EAAAA,GAAI,CAAC1C,MAAI,EACRpJ,GAAI,CACF+B,OAAQ,OACRD,MAAO,CAAE,CAACrB,EAAMO,YAAYC,KAAK,OAAQ,CAAEa,MAAO,UAClDpC,UACFN,EAAAA,EAAAA,KAACqsB,GAAqB,CAAC9M,iBAAkB,IAAI5E,KAAKwN,GAAgB1E,gBA/D1D6I,MACI,IAADC,EAArB,OAAItE,IAEA7nB,EAAAA,EAAAA,MAAC2K,EAAAA,EAAK,CACJjD,GAAE,aAAAsD,OAAeyL,GACjB7L,WAAqD,QAA1CuhB,EAAAxf,EAAiB+I,GAAaM,oBAAY,IAAAmW,OAAA,EAA1CA,EAA4Ctf,iBAAkB,iBACzErM,GAAI,CAAE+B,OAAQ,QAASrC,SAAA,EAEvBN,EAAAA,EAAAA,KAACmC,EAAAA,EAAG,CACF2F,GAAE,WAAAsD,OAAayL,GACfjW,GAAI,CACF+B,OAAO,QAADyI,OAAUzI,EAAM,SACtByL,QAAS,GACT3D,OAAQ,oBAGZzK,EAAAA,EAAAA,KAACmC,EAAAA,EAAG,CAAC2F,GAAI+O,EAASjW,GAAI,CAAE+B,OAAQA,EAAQyG,UAAWA,SAI7CpJ,EAAAA,EAAAA,KAACmC,EAAAA,EAAG,CAAC2F,GAAI+O,EAASjW,GAAI,CAAE+B,OAAQA,EAAQyG,UAAWA,IAAe,EAuE3EkjB,KAGP,C,gBCneA,SAlFA,SAA4BlrB,GAAuC,IAAtC,KAAEM,EAAI,UAAE8qB,EAAY,GAAE,UAAEC,GAAWrrB,EAC9D,MAAOkG,EAAYolB,IAAiBzlB,EAAAA,EAAAA,WAAS,GACvC5F,GAAQ2H,EAAAA,EAAAA,KACR2jB,GAAW1K,EAAAA,EAAAA,GAAc5gB,EAAMO,YAAYC,KAAK,OAChD+qB,GAAc7P,EAAAA,EAAAA,QAAO,MAErB8P,EAAQnrB,EAAKorB,MAAM,KAGzB,IAAKH,GAAYE,EAAMvoB,OAASkoB,GAAa,IAC3C,OACEpsB,EAAAA,EAAAA,MAAC+B,EAAAA,EAAG,CAAA7B,SAAA,EACFN,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CAAAF,UAAEQ,EAAAA,EAAAA,IAAMY,EAAM,CAAEX,QAASC,EAAAA,MACnCyrB,IACCzsB,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CAACE,QAAQ,UAAUC,MAAM,iBAAgBL,UACjDQ,EAAAA,EAAAA,IAAM2rB,EAAW,CAAE1rB,QAASC,EAAAA,SAOvC,IAAI+rB,EAAcF,EAAMhO,MAAM,EAAG2N,GAAWjP,KAAK,KACjD,MAAMyP,EAAeD,EAAYE,YAAY,KAmC7C,OAjCsB,IAAlBD,IACFD,EAAcA,EAAYlO,MAAM,EAAGmO,EAAe,KAiClDhtB,EAAAA,EAAAA,KAACktB,GAAAA,EAAiB,CAACC,YAPM9lB,IAtBQA,KACjC,IAAI,OAAE8C,GAAW9C,EAEjB,MAAM+lB,EAAiBR,EAAYnf,QAAQ4f,QAAQ,sBAE7CC,EAAgB,IAAIC,IAAI,CAAC,OAAQ,OAAQ,MAAO,WAEtD,KAAiB,MAAVpjB,GAAgB,CAErB,GAAImjB,EAAcE,IAAIrjB,EAAOsjB,SAK3B,OADqBtjB,EAAOkjB,QAAQ,wBACZD,EAE1BjjB,EAASA,EAAOujB,UAClB,CACA,OAAO,CAAK,EAKPC,CAA0BtmB,IAC7BqlB,GAAc,EAChB,EAIkDpsB,UAChDN,EAAAA,EAAAA,KAACmC,EAAAA,EAAG,CAAC+a,IAAK0P,EAAa5gB,QAASA,IAAM0gB,GAAeplB,GAAa6B,MAAO,CAAEsQ,OAAQ,WAAYnZ,SAC5FgH,GACClH,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEN,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CAAAF,UAAEQ,EAAAA,EAAAA,IAAMY,EAAM,CAAEX,QAASC,EAAAA,MACnCyrB,IAAazsB,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CAACE,QAAQ,UAAUC,MAAM,iBAAgBL,UAAEQ,EAAAA,EAAAA,IAAM2rB,EAAW,CAAE1rB,QAASC,EAAAA,UAGlGZ,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAACI,EAAAA,EAAU,CAACoM,QAAQ,SAAQtM,SAAA,EACzBQ,EAAAA,EAAAA,IAAMisB,EAAa,CAAEhsB,QAASC,EAAAA,IAAqC,UAGtEhB,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CAACoM,QAAQ,SAASjM,MAAM,eAAemB,WAAW,MAAMlB,GAAI,CAAEgtB,GAAI,GAAK,WAAY,CAAEjnB,eAAgB,cAAgBrG,SAAC,mBAQ7I,EC9EMutB,IAAoB3sB,EAAAA,EAAAA,IAAOiB,EAAAA,EAAPjB,EAAYE,IAAA,IAAC,MAAEC,GAAOD,EAAA,MAAM,IAEzB,SAAvBC,EAAMI,QAAQka,MAAmB,CAEnClR,OAAQ,iBAER,qBAAsB,CACpBA,OAAQ,qCAIZ,mMAAoM,CAClM2D,QAAS,IAGX,gCAAiC,CAC/ByK,OAAQ,QAIV,6CAA8C,CAC5CiV,UAAW,OACXhN,UAAW,SACXiN,gBAAiB,UAEpB,IAEKC,IAAa9sB,EAAAA,EAAAA,IAAO+sB,EAAAA,EAAP/sB,EAAa+C,IAAA,IAAC,MAAE5C,GAAO4C,EAAA,MAAM,CAC9C,6BAA8B,CAC5BtD,MAAOU,EAAMI,QAAQC,KAAKK,SAE5B,iBAAkB,CAChB,CAACV,EAAMO,YAAYC,KAAK,OAAQ,CAC9BL,SAAU,UACVkF,YAAarF,EAAMmF,QAAQ,GAC3B0S,aAAc7X,EAAMmF,QAAQ,KAGjC,IAqLD,SAlLA,SAA+BvE,GAC7B,MAAM,qBACJisB,EAAoB,sBACpBC,EACAvpB,UAAWwpB,EACXzpB,YAAa0pB,EAAiB,WAC9B9c,GACEtP,EACEqsB,GAAerM,EAAAA,EAAAA,IAAe5gB,GAAUA,EAAMO,YAAYC,KAAK,SAE9D0M,EAAYggB,IAAiBtnB,EAAAA,EAAAA,UAASuP,OAAOgY,WAAW,2BAA2BC,UACnFhJ,EAAYiJ,IAAiBznB,EAAAA,EAAAA,UAAS,CAC3CuP,OAAOC,WACPD,OAAOmY,cAGT,IAAIC,EACAjqB,EAAc0pB,EAClB,MAAMzpB,EAAYwpB,GAGXS,EAAYC,IAAiB7nB,EAAAA,EAAAA,UAAS,IAM7C6C,EAAAA,EAAAA,YAAU,KACRglB,EAAc,GAEd,IAAIC,EAAY,KAEhB,MAAMC,EAAqBA,KACzBC,aAAaF,GAKbA,EAAYG,YAAW,KAGrBX,EAAc/X,OAAOgY,WAAW,2BAA2BC,SAG3DC,EAAc,CAAClY,OAAOC,WAAYD,OAAOmY,aAAa,GAvFjC,IAwFC,EAM1B,OAFAnY,OAAO6B,iBAAiB,SAAU2W,GAE3B,KACLxY,OAAO+B,oBAAoB,SAAUyW,EAAmB,CACzD,GACA,CAACpqB,IAEwB,aAAxBA,EAAUC,WAA6BF,IACzCA,EAAc4J,EAAa,OAAS,OACpCqgB,EAAiBrgB,EAAa,QAAU,SAI1C,MAAMrE,EAAeA,CAAC4c,EAAIqI,KACxBL,EAAcK,EAAS,EA6FzB,OACE/uB,EAAAA,EAAAA,MAACytB,GAAiB,CAAClrB,OAAO,OAAMrC,SAAA,CAC7BsE,EAAUmN,WA5EX3R,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEN,EAAAA,EAAAA,KAACguB,GAAU,CACT5jB,MAAOykB,EACP1nB,SAAU+C,EACVxJ,QAAS4tB,EAAe,YAAc,WAAWhuB,SAEhDsE,EAAUmN,UAAU/O,KAAI,CAACC,EAASC,KACjClD,EAAAA,EAAAA,KAACovB,EAAAA,EAAG,CAEFhlB,MAAOlH,EACPwH,MAAO9F,EAAUmN,UAAU7O,GAAOmsB,eAF7BnsB,QAMXlD,EAAAA,EAAAA,KAACmC,EAAAA,EAAG,CACF8C,SAAS,WACTrE,GAAI,CACFktB,UAAWvf,GAAc,OACzB+gB,wBAAyB/gB,GAAc,QACvCuS,UAAW,UACXxgB,SAEDsE,EAAUmN,UAAU/O,KAAI,CAAC8jB,EAAI5jB,KAC5BlD,EAAAA,EAAAA,KAACmC,EAAAA,EAAG,CAEFO,MAAM,OACNC,OAAO,OACP+mB,KAAK,WACL9oB,GAAI,CACFwF,WAAY,QACZnB,SAAqB,IAAV/B,EAAe,GAAK,WAC/BkL,QAASygB,IAAe3rB,EAAQ,IAAM,IACtCqsB,cAAeV,IAAe3rB,EAAQ,OAAS,OAC/CkW,IAAgB,IAAVlW,EAAe,GAAK,GAC1B5C,UAEFN,EAAAA,EAAAA,KAACwlB,GAAQ,CACP5gB,UAAWA,EACX0M,cAAepO,EACfqL,WAAYA,EACZgD,WAAYA,EACZkU,WAAYA,EACZ9iB,OAAQiC,EAAUjC,OAASiC,EAAUjC,OAASgC,EAC9CyE,UACE,CAAC,YAAYiB,SAASzF,EAAUC,WAC5B,GACA+pB,KAtBH1rB,WArCblD,EAAAA,EAAAA,KAACwlB,GAAQ,CACP5gB,UAAWA,EACX2J,WAAYA,EACZgD,WAAYA,EACZkU,WAAYA,EACZ9iB,OAAQiC,EAAUjC,OAASiC,EAAUjC,OAASgC,KAuFhD3E,EAAAA,EAAAA,KAACmC,EAAAA,EAAG,CAACvB,GAAI,CAAE4uB,GAAI,GAAIlvB,UACjBN,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CACTC,UAAU,MACVC,QAAQ,QACRC,MAAM,iBACNC,GAAI,CAAE6uB,GAAI,GAAInvB,UAEdN,EAAAA,EAAAA,KAAC0vB,GAAmB,CAClBhuB,KA9BWiuB,MAAO,IAADC,EACzB,IAAIluB,EAAOwsB,GAAwB,GAKnC,OAJItpB,EAAUmN,WAA4C,QAAnC6d,EAAIhrB,EAAUmN,UAAU8c,UAAW,IAAAe,GAA/BA,EAAiCC,mBAC1DnuB,GAAQ,QACRA,GAAQkD,EAAUmN,UAAU8c,GAAYgB,kBAEnCnuB,CAAI,EAwBGiuB,GACNlD,UAvBYqD,MAAO,IAADC,EAC1B,IAAIruB,EAAOysB,GAAyB,GAKpC,OAJIvpB,EAAUmN,WAA4C,QAAnCge,EAAInrB,EAAUmN,UAAU8c,UAAW,IAAAkB,GAA/BA,EAAiCtD,YAC1D/qB,GAAQ,QACRA,GAAQkD,EAAUmN,UAAU8c,GAAYpC,WAEnC/qB,CAAI,EAiBQouB,WAMvB,C","sources":["Components/AirQuality/AQIexplanation.jsx","Components/AirQuality/AirQualityIndexTable.jsx","Components/ExpandableSection.jsx","Graphs/Subchart/SubchartUtils/SeriesSelector.jsx","Graphs/GoogleChartHelper.jsx","Graphs/Subchart/SubchartUtils/GoogleChartStyleWrapper.jsx","Graphs/Subchart/NivoCharts/NivoCalendarChart.jsx","Components/DateRangePicker/AggregationType.jsx","Components/DateRangePicker/DateRangePickerUtils.jsx","Components/DateRangePicker/AggregationTypeToggle.jsx","Components/DateRangePicker/CustomDateRangePicker.jsx","Graphs/Subchart/SubChart.jsx","Components/CollapsibleSubtitle.jsx","Graphs/ChartComponentWrapper.jsx"],"sourcesContent":["import { useContext } from 'react';\nimport { Typography } from '@mui/material';\nimport parse from 'html-react-parser';\nimport { replacePlainHTMLWithMuiComponents } from '../../Utils/Utils';\nimport AirQualityIndexTable from './AirQualityIndexTable';\nimport ExpandableSection from '../ExpandableSection';\nimport { PreferenceContext } from '../../ContextProviders/PreferenceContext';\n\nconst Explanation = {\n  title: \"Explanation of the US Air Quality Index (AQI) for PM2.5\",\n  subtitle: \"CITIESair uses the <a href='https://www.airnow.gov/aqi/aqi-basics/'>Air Quality Index (AQI)</a> developed by the United States Environmental Protection Agency (EPA) to effectively communicate different levels of PM2.5 air pollution. To calculate the AQI from the raw measurement of PM2.5 concentration (µg/m³), different breakpoints and piecewise linear function are utilized (read more <a href='https://en.wikipedia.org/wiki/Air_quality_index#United_States'>here</a>). Higher AQI values correspond to poorer air quality and greater heath risks to humans.<br><br>The US EPA sets thresholds for PM2.5 concentration: <sup>[1]</sup><ul><li><b>Annual average</b>: 12.0 µg/m³, corresponding to US AQI <b>50</b></li><li><b>24-hour average</b>: 35.0 µg/m³, corresponding to US AQI <b>100</b></li></ul>In 2021, the World's Heath Organization (WHO) proposed a new guideline for PM2.5<sup>[2]</sup> with stricter thresholds than those of the US EPA:<ul><li><b>Annual average</b>: 5.0 µg/m³, corresponding to US AQI <b>21</b></li><li><b>24-hour average</b>: 15.0 µg/m³, corresponding to US AQI <b>56</b></li></ul>\",\n  reference: \"[1] \\\"National Ambient Air Quality Standards (NAAQS) for PM.\\\" EPA, Environmental Protection Agency, https://www.epa.gov/pm-pollution/national-ambient-air-quality-standards-naaqs-pm.<br>[2] World Health Organization. \\\"WHO global air quality guidelines: particulate matter (PM2. 5 and PM10), ozone, nitrogen dioxide, sulfur dioxide and carbon monoxide: executive summary.\\\" (2021).\",\n}\n\nconst AQIexplanation = () => {\n  const { themePreference } = useContext(PreferenceContext);\n\n  return (\n    <ExpandableSection\n      title={Explanation.title}\n      content={(\n        <>\n          <AirQualityIndexTable themePreference={themePreference} />\n          <Typography\n            component=\"div\"\n            variant=\"body1\"\n            color=\"text.secondary\"\n            sx={{ mt: 2 }}\n          >\n            {parse(Explanation.subtitle, {\n              replace: replacePlainHTMLWithMuiComponents,\n            })}\n          </Typography>\n          <ExpandableSection\n            title={\"Reference\"}\n            content={(\n              <Typography variant=\"caption\" color=\"text.secondary\">\n                {parse(Explanation.reference, {\n                  replace: replacePlainHTMLWithMuiComponents,\n                })}\n              </Typography>\n            )}\n          />\n        </>\n      )}\n    />\n  )\n};\n\nexport default AQIexplanation;","import { Box, Table, TableBody, TableCell, TableHead, TableRow, styled } from '@mui/material';\nimport parse from 'html-react-parser';\nimport { replacePlainHTMLWithMuiComponents } from '../../Utils/Utils';\nimport ChartComponentWrapper from '../../Graphs/ChartComponentWrapper';\nimport AQIdatabase from '../../Utils/AirQuality/AirQualityIndexHelper';\nimport ThemePreferences from '../../Themes/ThemePreferences';\nimport { useContext } from 'react';\nimport { PreferenceContext } from '../../ContextProviders/PreferenceContext';\n\nexport const StyledTable = styled(Table)(({ theme, isTiny }) => ({\n  minWidth: isTiny || 700,\n  '& th, td': {\n    fontSize: isTiny ? '0.625rem' : '0.6875rem',\n    color: theme.palette.text.secondary,\n    [theme.breakpoints.down('sm')]: {\n      fontSize: isTiny ? '0.5rem' : '0.6875rem',\n    },\n  },\n  '& th': {\n    fontWeight: 500,\n    color: theme.palette.text.primary,\n    lineHeight: '1rem'\n  }\n}));\n\nfunction AirQualityIndexTable(props) {\n  const { themePreference } = useContext(PreferenceContext);\n\n  const { isTiny, hideAQIDescription } = props;\n\n  const renderAQIchart = ({ shouldRender }) => {\n    let aqiChart = null;\n\n    if (shouldRender) {\n      const dataArray = [['category'], ['US AQI']];\n      for (let i = 0; i < AQIdatabase.length; i += 1) {\n        dataArray[0].push(AQIdatabase[i].category);\n        dataArray[1].push(\n          Math.ceil((AQIdatabase[i].aqiUS.high - AQIdatabase[i].aqiUS.low) / 50) * 50\n        );\n      }\n\n      aqiChart = (\n        <ChartComponentWrapper\n          chartHeight=\"4rem\"\n          chartData={\n            {\n              dataArray,\n              chartType: 'BarChart',\n              options: {\n                enableInteractivity: false,\n                legend: { position: 'none' },\n                hAxis: {\n                  ticks: [0, 50, 100, 150, 200, 300, 500]\n                },\n                chartArea:\n                {\n                  width: { portrait: '98%', landscape: '50%' },\n                  height: { portrait: '20%', landscape: '30%' }\n                },\n                isStacked: true,\n                colors: 'aqi',\n                bar: { groupWidth: '100%' }\n              }\n            }\n          }\n        />\n      );\n    }\n\n    return aqiChart;\n  };\n\n  return (\n    <>\n      <Box overflow=\"auto\">\n        <StyledTable size=\"small\" isTiny={isTiny}>\n          <TableHead>\n            <TableRow>\n              <TableCell sx={{ pr: 0 }}>\n                <Box sx={{ width: '1em', height: '1em' }} />\n              </TableCell>\n              <TableCell sx={{ pl: 1 }}>\n                Category\n              </TableCell>\n              <TableCell align=\"right\">US AQI</TableCell>\n              <TableCell align=\"right\">\n                PM2.5 Concentration\n                (µg/m\n                <sup>3</sup>\n                )\n              </TableCell>\n              {!hideAQIDescription && <TableCell align=\"left\">Description</TableCell>}\n              {!hideAQIDescription && <TableCell align=\"left\">CITIESair&apos; Suggested Actions</TableCell>}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {AQIdatabase.map((element, index) => (\n              <TableRow\n                key={index}\n                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n              >\n                <TableCell sx={{ pr: 0 }}>\n                  <Box sx={{ width: '1em', height: '1em', backgroundColor: themePreference === ThemePreferences.light ? element.lightThemeColor : element.darkThemeColor }} />\n                </TableCell>\n                <TableCell sx={{ pl: 1 }}>\n                  {element.category}\n                </TableCell>\n                <TableCell align=\"right\">\n                  {element.aqiUS.low}\n                  &nbsp;\n                  -\n                  &nbsp;\n                  {element.aqiUS.high}\n                </TableCell>\n                <TableCell align=\"right\">\n                  {element.rawPM2_5.low}\n                  &nbsp;\n                  -\n                  &nbsp;\n                  {element.rawPM2_5.high}\n                </TableCell>\n                {!hideAQIDescription && <TableCell align=\"left\">{element.description}</TableCell>}\n                {!hideAQIDescription\n                  && (\n                    <TableCell align=\"left\">\n                      {\n                        parse(element.healthSuggestions.outdoors, {\n                          replace: replacePlainHTMLWithMuiComponents,\n                        })\n                      }\n                    </TableCell>\n                  )}\n              </TableRow>\n            ))}\n          </TableBody>\n        </StyledTable>\n      </Box>\n      {renderAQIchart({ shouldRender: !hideAQIDescription })}\n    </>\n\n  );\n}\n\nexport default AirQualityIndexTable;\n","// disable eslint for this file\n/* eslint-disable */\nimport { useState } from 'react';\nimport { styled } from '@mui/material/styles';\n\nimport MuiAccordion from '@mui/material/Accordion';\nimport MuiAccordionSummary from '@mui/material/AccordionSummary';\nimport MuiAccordionDetails from '@mui/material/AccordionDetails';\nimport { Box, Typography, Tooltip } from '@mui/material';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport InfoIcon from '@mui/icons-material/Info';\nimport * as Tracking from '../Utils/Tracking';\n\nconst StyledAccordion = styled(MuiAccordion)(({ theme, expanded }) => ({\n  color: theme.palette.text.secondary,\n  backgroundImage: 'none',\n  backgroundColor: expanded ? theme.palette.background.default : 'transparent',\n  boxShadow: expanded ? theme.shadows : 'none',\n  transition: 'none',\n}));\n\nconst StyledAccordionSummary = styled(MuiAccordionSummary)(({ theme, expanded }) => ({\n  marginTop: expanded ? theme.spacing(2) : 0,\n  flexDirection: 'row-reverse',\n  paddingLeft: expanded ? theme.spacing(1) : 0,\n  '& .MuiTypography-root': {\n    color: theme.palette.text.primary,\n    textDecoration: 'underline',\n    transition: 'none',\n    '&:hover': {\n      color: theme.palette.primary.main,\n    },\n  },\n  '& .MuiAccordionSummary-content.Mui-expanded': {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2)\n  }\n}));\n\nconst TooltipText = {\n  expand: \"Click to expand section\",\n  collapse: \"Click to collapse section\"\n}\n\nconst ExpandableSection = ({ title, content }) => {\n  const [expanded, setExpanded] = useState(undefined);\n\n  const handleAccordionChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : undefined);\n    Tracking.sendEventAnalytics(\n      isExpanded ? Tracking.Events.expandSection : Tracking.Events.collapseSection,\n      {\n        section: title\n      }\n    );\n  };\n\n  return (\n    <Box>\n      <StyledAccordion\n        expanded={expanded === \"panel1\"}\n        onChange={handleAccordionChange(\"panel1\")}\n        transitionDuration={0}\n      >\n        <StyledAccordionSummary expanded={expanded} expandIcon={<ArrowDropDownIcon />} aria-controls=\"panel1a-content\" id=\"panel1a-header\">\n          <Tooltip title={expanded ? TooltipText.collapse : TooltipText.expand} enterDelay={0} leaveDelay={200}>\n            <Typography component=\"a\" variant=\"body1\">\n              {title}\n              <InfoIcon sx={{ fontSize: \"1rem\", marginLeft: \"0.25rem\" }} />\n            </Typography>\n          </Tooltip>\n        </StyledAccordionSummary>\n        <MuiAccordionDetails>\n          {content}\n        </MuiAccordionDetails>\n      </StyledAccordion>\n    </Box>\n  );\n}\n\nexport default ExpandableSection;","/* eslint-disable */\nimport { useState, useEffect } from 'react';\nimport { Stack, Grid, MenuItem, FormControl, Select, Chip, Radio, Checkbox, Typography, Switch } from \"@mui/material\";\nimport { useTheme } from '@mui/material/styles';\n\nimport VisibilityIcon from '@mui/icons-material/Visibility';\n\nconst SELECT_ALL = 'Display All Series';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\n\nexport default function SeriesSelector(props) {\n  const { items: itemsFromChart,\n    selectorID,\n    allowMultiple,\n    seriesLabel,\n    onSeriesSelection,\n    displayChip = true\n  } = props;\n\n  const theme = useTheme();\n\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 5.55 + ITEM_PADDING_TOP,\n        overflow: 'visible !important',\n        background: theme.palette.customAlternateBackground\n      }\n    },\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"left\"\n    },\n    transformOrigin: {\n      vertical: \"top\",\n      horizontal: \"left\"\n    },\n    getContentAnchorEl: null\n  };\n\n  const [items, setItems] = useState(itemsFromChart);\n  const [selectAll, setSelectAll] = useState(allowMultiple); // default: all is selected if multiSelect is true\n\n  useEffect(() => {\n    setItems(itemsFromChart);\n  }, [itemsFromChart]);\n\n  useEffect(() => {\n    setSelectAll(items.every(item => item.selected)); // set selectAll if all items are selected\n  }, [items]);\n\n  const handleChange = (event) => {\n    // Get the array of the currently selected value(s)\n    const {\n      target: { value }\n    } = event;\n\n    // If the current selection has SELECT_ALL\n    // Behavior:\n    // - If SELECT_ALL is being selected now, then set all items to selected\n    // - IF SELECT_ALL is being de-selected now, then set all items but the first one to be unselected \n    // (to make sure there's always at least 1 item being selected)\n    if (value.includes(SELECT_ALL)) {\n      const updatedItems = items.map((item, index) => ({ ...item, selected: index == 0 ? true : !selectAll }));\n      onSeriesSelection({ newDataColumns: updatedItems });\n      setSelectAll(!selectAll);\n    }\n    // Else, if an ordinary item is selected/de-selected:\n    else {\n      const selectedItems = items.filter(item => value.includes(item.label));\n      const updatedItems = items.map(item => ({\n        ...item,\n        selected: selectedItems.some(selectedItem => selectedItem.label === item.label)\n      }));\n      onSeriesSelection({ newDataColumns: updatedItems });\n      setSelectAll(false);\n    }\n  };\n\n  const handleItemToggle = (item) => {\n    const updatedItems = items.map(existingItem =>\n      existingItem.label === item.label ? { ...existingItem, selected: !existingItem.selected } : existingItem\n    );\n    onSeriesSelection({ newDataColumns: updatedItems });\n  };\n\n  const renderedLabel = (selected) => {\n    const returnNumSeriesDisplayed = () => {\n      return `${selected.length}/${items.length} ${seriesLabel || \"\"} displayed`;\n    };\n\n    return (\n      <Stack direction=\"row\" alignItems=\"center\" spacing={0.5}>\n        <VisibilityIcon fontSize=\"1.5rem\" sx={{ color: theme.palette.text.secondary }} />\n        <Typography variant=\"caption\" color=\"text.secondary\">\n          {/* show # of series selected if multiSelect. show cur selected serie if singleSelect */}\n          {allowMultiple ? returnNumSeriesDisplayed() : selected}\n        </Typography>\n      </Stack>\n    );\n  };\n\n  return (\n    <Stack spacing={1} direction=\"row\" alignItems=\"center\">\n      <FormControl\n        sx={{\n          [theme.breakpoints.down('sm')]: { width: '100%' },\n          minWidth: '200px',\n          '& .MuiInputBase-root': { borderRadius: `${theme.shape.borderRadius}px` }\n        }}\n        size=\"small\"\n      >\n        <Select\n          labelId={`${selectorID}-label`}\n          id={selectorID}\n          multiple={allowMultiple}\n          value={items.filter(item => item.selected).map(item => item.label)}\n          onChange={handleChange}\n          MenuProps={MenuProps}\n          renderValue={(selected) => renderedLabel(selected)}\n          sx={{ fontSize: '0.75em' }}\n        >\n          {/* Display all available items, together with checkbox for each item to select from */}\n          {items.map((item) => (\n            <MenuItem\n              disabled={\n                // If there is only 1 selected item and this is the selected item\n                // Then, prevent user from de-select this item too\n                // To ensure at least there is 1 selected item at all times\n                (items.filter(item => item.selected).length === 1 && item.selected) ? true : false\n              }\n              key={item.label}\n              value={item.label}\n              sx={{\n                backgroundColor: 'unset !important',\n                \"&:hover\": {\n                  backgroundColor: 'inherit !important',\n                }\n              }}\n            >\n              { /* checkboxes for MultiSelect, radioButtons for singleSelect*/}\n              {allowMultiple ? <Checkbox\n                checked={item.selected}\n                onClick={() => handleItemToggle(item)}\n\n                sx={{ p: 0.25, transform: 'scale(0.8)' }} />\n                : <Radio\n                  checked={item.selected}\n                  onChange={() => handleChange(item)}\n\n                  sx={{ p: 0.25, transform: 'scale(0.8)' }} />\n              }\n              <Typography variant='caption'>{item.label}</Typography>\n            </MenuItem>\n          ))}\n\n          {/* Show the option to select all if multiSelect is true*/}\n          {allowMultiple && <MenuItem key={SELECT_ALL} value={SELECT_ALL} sx={{\n            borderTop: 'solid 0.5px', borderColor: theme.palette.text.secondary,\n            position: 'sticky', bottom: 0, zIndex: 99999, marginBottom: theme.spacing(-1),\n            background: theme.palette.customAlternateBackground,\n            \"&:hover\": {\n              background: theme.palette.customAlternateBackground\n            }\n          }}>\n            <Stack direction='row' width='100%' alignItems='center' justifyContent='space-between'>\n              <Typography fontWeight={500} variant='caption' sx={{ pl: 1 }}>{SELECT_ALL}</Typography>\n              <Switch\n                checked={selectAll}\n                onClick={() => handleItemToggle(SELECT_ALL)}\n                sx={{ transform: 'scale(0.8)' }}\n              />\n            </Stack>\n          </MenuItem>\n          }\n        </Select>\n      </FormControl>\n\n      {/* Display only selected items in the Grids, and only in landscape mode and if multiSelect is true*/}\n      {(displayChip && allowMultiple) && <Grid container spacing={1}\n        sx={{\n          [theme.breakpoints.down('sm')]: {\n            display: 'none'\n          },\n        }}\n      >\n        {items.filter(item => item.selected).map((item) => (\n          <Grid item key={item.label}>\n            <Chip\n              label={<Typography variant='caption'>{item.label}</Typography>}\n              size=\"small\"\n              {...(items.filter(item => item.selected).length !== 1 && { onDelete: () => handleItemToggle(item) })}\n            />\n          </Grid>\n        ))}\n      </Grid>}\n\n\n    </Stack>\n  );\n}\n","/* eslint-disable */\n\nexport const ChartControlType = {\n  CategoryFilter: { position: 'top', stackDirection: 'column' },\n  DateRangeFilter: { position: 'bottom', stackDirection: 'column-reverse' },\n  ChartRangeFilter: { position: 'bottom', stackDirection: 'column-reverse' },\n  NumberRangeFilter: { position: 'top', stackDirection: 'column' }\n}\n// Async function to fetch data from sheet using Google Visualization query language\nexport const fetchDataFromSheet = ({ chartData, subchartIndex }) => {\n  const urlParams =\n    subchartIndex == null\n      ? {\n        headers: chartData.headers || 1,\n        query: chartData.query,\n        gid: chartData.gid,\n      }\n      : {\n        headers:\n          chartData.headers\n          || chartData.subcharts[subchartIndex].headers\n          || null,\n        query:\n          chartData.query\n          || chartData.subcharts[subchartIndex].query\n          || null,\n        gid:\n          chartData.gid\n          || chartData.subcharts[subchartIndex].gid\n          || null,\n      };\n\n  const url = `https://docs.google.com/spreadsheets/d/${chartData.sheetId}/gviz/tq?gid=${urlParams.gid}&headers=${urlParams.headers}&tqx${urlParams.query ? `&tq=${encodeURIComponent(urlParams.query)}` : ''}`;\n  const query = new google.visualization.Query(url);\n\n  return new Promise((resolve, reject) => {\n    query.send(response => {\n      if (response.isError()) {\n        reject(response.getMessage() + ' ' + response.getDetailedMessage());\n      } else {\n        resolve(response);\n      }\n    });\n  });\n};\n\nexport const transformDataForNivo = (dataTable, dataColumn, tooltipColumn) => {\n  const data = JSON.parse(dataTable.toJSON())\n  const transformed = [];\n\n  const parseDate = (dateString) => {\n    const date = new Date(dateString);\n    const year = date.getFullYear();\n    const month = date.getMonth() + 1;\n    const day = date.getDate();\n    const formattedDate = `${year}-${month < 10 ? '0' + month : month}-${day < 10 ? '0' + day : day}`;\n    return formattedDate;\n  }\n\n  data.rows.forEach(row => {\n    // Get the date string from the first column \n    const dateString = row.c[0].f;\n    // Parse and convert the date string to a 'YYYY-MM-DD' format\n    const formattedDate = parseDate(dateString);\n    // Get the data from the appropriate column\n    const value = row.c[dataColumn]?.v;\n    // Get the tooltip from the appropriate column\n    const tooltip = row.c[tooltipColumn]?.v;\n\n    // If the date string and value are both valid, push them into the result array\n    if (dateString && value !== undefined && value !== null) {\n      transformed.push({\n        day: formattedDate,\n        value: value,\n        tooltip: tooltip\n      });\n    }\n  });\n\n  // Get dateRange (from - to)\n  const dateStrings = transformed.map(item => item.day);\n  const dateRange = getDateRangeForCalendarChart(dateStrings);\n\n  // Get valueRange (min - max)\n  const values = transformed.map(item => item.value);\n  const valueRange = getValueRangeForCalendarChart(values);\n\n  return {\n    data: transformed,\n    dateRange: dateRange,\n    valueRange: valueRange\n  };\n};\nexport const getDateRangeForCalendarChart = (dateStrings) => {\n  return {\n    min: dateStrings.reduce((min, current) => (current < min ? current : min)),\n    max: dateStrings.reduce((max, current) => (current > max ? current : max))\n  }\n}\nexport const getValueRangeForCalendarChart = (values) => {\n  return { min: Math.min(...values), max: Math.max(...values) }\n}\n\n// Function to generate a random ID for the google chart container\nexport const generateRandomID = () => {\n  return Math.random().toString(36).substr(2, 9); // Generates a random string of length 9\n}\n\n// -------- Chart options --------\n\nconst hideAnnotations = {\n  stem: {\n    length: 0,\n  },\n  textStyle: {\n    opacity: 0,\n  },\n  boxStyle: null,\n};\n\nconst returnResponsiveFontSizeInPixels = ({ isPortrait, isSmaller }) => {\n  return (\n    isSmaller ? (isPortrait ? 6 : 8) : (isPortrait ? 8 : 10)\n  );\n}\n\nexport const returnGenericOptions = (props) => {\n  const { chartData, subchartIndex, isPortrait, isHomepage, theme } = props;\n\n  // Define some shared styling rules for the chart\n  const axisTitleTextStyle = {\n    italic: false,\n    bold: true,\n    color: theme.palette.chart.axisTitle,\n    fontSize: returnResponsiveFontSizeInPixels({ isPortrait })\n  };\n  const axisTextStyle = {\n    color: theme.palette.chart.axisText,\n    fontSize: returnResponsiveFontSizeInPixels({ isPortrait })\n  };\n\n  // ---- Formulate the options for this specific chart:\n  // 1. Populate first with subchart's options (if any)\n  let options = chartData.subcharts?.[subchartIndex].options\n    ? { ...chartData.subcharts[subchartIndex].options }\n    : {};\n\n  // 2. Append own chart's options and then populate with universal options for all charts\n  options = {\n    ...options,\n    ...chartData.options,\n    theme: 'material',\n    curveType: options.curveType || chartData.options?.curveType || 'function',\n    crosshair: { orientation: 'both', trigger: 'focus', opacity: 0.5 },\n    backgroundColor: { fill: 'transparent' },\n    chartArea: {\n      ...chartData.options?.chartArea,\n      width: isPortrait ? (chartData.options?.chartArea?.width?.portrait || '80%') : (chartData.options?.chartArea?.width?.landscape || '75%'),\n      height: isPortrait ? (chartData.options?.chartArea?.height?.portrait || '60%') : (chartData.options?.chartArea?.height?.landscape || '70%'),\n    },\n    width: isPortrait ? (chartData.options?.width?.portrait || '100%') : (chartData.options?.width?.landscape || '100%'),\n    // if there is a filter, we make space for the chartFilter from the chart's height.\n    // value is divided in 2 because the calculation is applied twice due to\n    // how react-google-charts nest components\n    height: chartData.height || '100%',\n    tooltip: {\n      isHtml: true,\n      showColorCode: false\n    },\n    legend: {\n      alignment: isPortrait ? 'center' : 'start',\n      position:\n        chartData.options?.legend?.position\n        ?? (isPortrait ? 'top' : 'right'),\n      scrollArrows: {\n        activeColor: theme.palette.chart.axisTitle,\n        inactiveColor: theme.palette.text.secondary,\n      },\n      pagingTextStyle: {\n        fontSize: 10,\n        color: theme.palette.chart.axisTitle,\n        bold: true,\n      }\n    }\n  };\n\n  // 3. Append to vAxis and hAxis properties\n  options.vAxis = {\n    ...options.vAxis,\n    format: options.vAxis?.format ?? 'decimal',\n    title: options.vAxis?.title ?? '',\n    viewWindow: {\n      min: options.vAxis?.viewWindow?.min ?? 0,\n      max: options.vAxis?.viewWindow?.max ?? null,\n    },\n  };\n  options.hAxis = {\n    ...options.hAxis,\n    title: options.hAxis?.title ?? '',\n  };\n  // 3.1. If in portrait mode, slant the text of the hAxis\n  if (isPortrait) {\n    options.hAxis = {\n      ...options.hAxis,\n      slantedText: true,\n      slantedTextAngle: 30,\n    };\n  }\n\n  // 4. Override with custom colors:\n  // 4.1. Color scheme of all the series of this chart\n  if (typeof options.colors === 'string' || !options.colors) options.colors = theme.palette.chart.optionsColors[options.colors || 'multiColor'];\n  // 4.2. Individual color of a single serie (if given)\n  if (options.series) {\n    Object.values(options.series).forEach((_serie) => {\n      const serie = _serie;\n      if (serie.color === 'default') {\n        serie.color = theme.palette.primary.main;\n      }\n    });\n  }\n  // 4.3. Color of the trendline\n  if (options.trendlines) {\n    options.trendlines.forEach((_item) => {\n      const item = _item;\n      item.color = theme.palette.primary.main;\n    });\n  }\n  // 4.4. Color axis of the Calendar chart\n  if (options.colorAxis) {\n    switch (options.colorAxis.colors) {\n      case 'matchingColor':\n        options.colorAxis.colors = [\n          theme.palette.chart.colorAxisFirstColor,\n          theme.palette.chart.optionsColors.multiColor[options.colorAxis.colorIndex],\n        ];\n        break;\n      case 'default':\n        options.colorAxis.colors = [\n          theme.palette.chart.colorAxisFirstColor,\n          theme.palette.NYUpurple,\n        ];\n        break;\n      case 'aqi':\n        options.colorAxis = theme.palette.chart.aqiColorAxis;\n        break;\n      default:\n        break;\n    }\n  }\n  // 4.5. Colors of other elements of the chart (typographies and gridlines)\n  options.vAxis = {\n    ...options.vAxis,\n    titleTextStyle: axisTitleTextStyle,\n    textStyle: axisTextStyle,\n    gridlines: {\n      ...options.vAxis?.gridlines,\n      color: options.vAxis?.gridlines?.color || theme.palette.chart.gridlines\n    },\n    minorGridlines: { count: 0 },\n  };\n  options.hAxis = {\n    ...options.hAxis,\n    titleTextStyle: axisTitleTextStyle,\n    textStyle: axisTextStyle,\n    gridlines: {\n      ...options.hAxis?.gridlines,\n      color: options.hAxis?.gridlines?.color || theme.palette.chart.gridlines\n    },\n    minorGridlines: {\n      ...options.hAxis?.minorGridlines,\n      color: options.hAxis?.gridlines?.color || theme.palette.chart.gridlines,\n    },\n  };\n  options.legend = {\n    ...options.legend,\n    textStyle: axisTextStyle,\n  };\n  options.annotations = {\n    ...options.annotations,\n    highContrast: true,\n    textStyle: {\n      color: theme.palette.primary.contrastText,\n      fontSize: returnResponsiveFontSizeInPixels({ isPortrait, isSmaller: true }),\n      opacity: 0.8\n    },\n    stem: {\n      ...options.annotations?.stem,\n      color: theme.palette.chart.axisTitle,\n      thickness: 2\n    },\n    boxStyle: {\n      rx: theme.shape.borderRadius, // rounded corners\n      ry: theme.shape.borderRadius,\n      fill: theme.palette.chart.annotationBoxFill,\n      fillOpacity: 0.5\n    },\n  };\n\n  // 5. If the chart is displayed on the homepage, override the options with:\n  if (isHomepage) {\n    options = {\n      ...options,\n      chartArea: {\n        ...options.chartArea,\n        width: '80%',\n        height: '80%'\n      },\n      seriesSelector: false,\n      pointSize: 0,\n      enableInteractivity: false,\n      annotations: hideAnnotations,\n      legend: 'none',\n      vAxis: {\n        ...options.vAxis,\n        textPosition: 'none',\n        titleTextStyle: {\n          ...options.vAxis.titleTextStyle,\n          bold: false\n        },\n        gridlines: { color: 'transparent', count: 0 },\n        viewWindowMode: 'maximized'\n      },\n      hAxis: {\n        ...options.hAxis,\n        textPosition: 'none',\n        gridlines: { color: 'transparent', count: 0 },\n        titleTextStyle: {\n          ...options.hAxis.titleTextStyle,\n          bold: false\n        }\n      },\n    };\n  }\n\n  return options;\n}\n\nexport const returnCalendarChartOptions = (existingOptions) => {\n  const calendarDimensions = calculateCalendarDimensions({ cellSizeMin: 14, cellSizeMax: 18 });\n  return {\n    ...existingOptions,\n    width: calendarDimensions.chartWidth,\n    calendar: {\n      cellSize: calendarDimensions.cellSize,\n      yearLabel: {\n        fontSize: calendarDimensions.yearLabelFontSize\n      }\n    },\n    noDataPattern: {\n      backgroundColor: 'none',\n      color: 'none',\n    },\n  }\n}\n\nexport const returnChartControlUI = (props) => {\n  const { chartControl, mainChartData, mainChartOptions, subchartIndex, theme, isPortrait } = props;\n  let chartControlUI = {\n    ...chartControl.options?.ui,\n    snapToData: true\n  };\n\n  // Assign the appropriate UI for chartControl based on controlType (if existed)\n  if (chartControl.controlType === 'ChartRangeFilter') {\n    chartControlUI = {\n      ...chartControlUI,\n      chartType: mainChartData.chartType,\n      chartView: {\n        columns:\n          mainChartData.columns\n          || (mainChartData.subcharts\n            && mainChartData.subcharts[subchartIndex].columns)\n          || null\n          || null,\n      },\n      chartOptions: {\n        ...mainChartOptions,\n        hAxis: {\n          ...mainChartOptions.hAxis,\n          textPosition: 'out',\n          textStyle: { color: theme.palette.chart.axisText, fontSize: returnResponsiveFontSizeInPixels({ isPortrait, isSmaller: true }) },\n          title: null\n        },\n        vAxis: {\n          ...mainChartOptions.vAxis,\n          title: null\n        },\n        annotations: hideAnnotations,\n        legend: null,\n      }\n    };\n  }\n\n  return chartControlUI;\n}\n\nconst calculateCalendarDimensions = ({ cellSizeMin, cellSizeMax }) => {\n  const cellSize = Math.min(Math.max((window.innerWidth * 0.9) / 58, cellSizeMin), cellSizeMax);\n  return {\n    chartWidth: cellSize * 56, // fixed ratio\n    cellSize,\n    yearLabelFontSize: cellSize * 2\n  };\n};\n\nexport const addTouchEventListenerForChartControl = ({ controlWrapper, chartID }) => {\n  const touchHandler = (event) => {\n    var touches = event.changedTouches,\n      first = touches[0],\n      type = '';\n\n    switch (event.type) {\n      case 'touchstart':\n        type = 'mousedown';\n        break;\n      case 'touchmove':\n        type = 'mousemove';\n        break;\n      case 'touchend':\n        type = 'mouseup';\n        break;\n      default:\n        return;\n    }\n\n    var simulatedEvent = new MouseEvent(type, {\n      bubbles: true,\n      cancelable: true,\n      view: window,\n      detail: 1,\n      screenX: first.screenX,\n      screenY: first.screenY,\n      clientX: first.clientX,\n      clientY: first.clientY,\n      button: 0, // left button\n      relatedTarget: null,\n    });\n\n    first.target.dispatchEvent(simulatedEvent);\n    event.preventDefault();\n  }\n\n  let isMounted = true; // Flag to track component's mount status\n  if (!controlWrapper) return;\n\n  const controlDOM = document.querySelector(`#control-${chartID}`);\n  if (!controlDOM) return;\n\n  ['touchstart', 'touchmove', 'touchend', 'touchcancel']\n    .forEach((touchEvent) => {\n      controlDOM.addEventListener(touchEvent, touchHandler, { capture: true });\n    });\n\n  return () => {\n    isMounted = false; // Component is unmounting\n\n    ['touchstart', 'touchmove', 'touchend', 'touchcancel'].forEach((touchEvent) => {\n      controlDOM.removeEventListener(touchEvent, touchHandler, { capture: true });\n    });\n  };\n}","import { Box } from '@mui/material/';\nimport { styled } from '@mui/material/styles';\n\nconst GoogleChartStyleWrapper = styled(Box)(({ theme, isPortrait }) => ({\n  // CSS for HTML tooltip\n  '& .google-visualization-tooltip, .nivo-tooltip': {\n    width: 'unset !important',\n    maxWidth: '350px',\n    height: 'unset',\n    padding: '1em',\n    boxShadow: '0px 2px 2px 0px rgba(204, 204, 204, 0.6)',\n    mozBoxShadow: '0px 2px 2px 0px rgba(204, 204, 204, 0.6)',\n    webkitBoxShadow: '0px 2px 2px 0px rgba(204, 204, 204, 0.6)',\n    border: 'solid 1px',\n    borderColor: theme.palette.text.secondaryRGB,\n    fontSize: `${isPortrait ? 9 : 12}px`,\n    color: theme.palette.chart.tooltip.text,\n    background: theme.palette.chart.tooltip.background,\n    borderRadius: theme.shape.borderRadius,\n    '& ul': {\n      margin: '0 !important',\n      '& li': {\n        margin: '0 !important',\n        padding: '0 !important',\n        '& span': {\n          fontSize: `${isPortrait ? 9 : 12}px !important`,\n          color: `${theme.palette.chart.tooltip.text} !important`,\n        }\n      }\n    }\n  },\n\n  // -------- chartControl's additional stylings\n  '& .goog-menuitem-highlight, .goog-menuitem-hover': {\n    backgroundColor: `${theme.palette.primary} !important`\n  },\n\n  // CategoryFilter\n  '& .google-visualization-controls-categoryfilter': {\n    fontSize: '0.85rem',\n    marginTop: '0.75rem',\n    marginBottom: '-0.75rem',\n\n    '& .goog-inline-block > .goog-menu-button': {\n      marginTop: 0\n    },\n\n    '& .goog-menu-button-hover .goog-menu-button-outer-box, .goog-menu-button-hover .goog-menu-button-inner-box': {\n      borderColor: 'inherit !important'\n    },\n\n    '& .google-visualization-controls-label': {\n      color: theme.palette.text.secondary,\n      fontWeight: 500,\n      verticalAlign: 'middle',\n      marginBottom: '0.25rem'\n    },\n    '& .goog-menu-button-outer-box': {\n      backgroundColor: theme.palette.background.paper,\n      border: 'unset',\n\n      '& .goog-menu-button-inner-box': {\n        paddingTop: theme.spacing(0.5),\n        paddingBottom: theme.spacing(0.5),\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(2),\n        border: 'solid',\n        borderWidth: '0.5px',\n        borderRadius: theme.shape.borderRadius,\n        borderColor: theme.palette.text.secondary,\n\n        '& .goog-menu-button-caption': {\n          color: theme.palette.text.secondary\n        }\n      }\n    }\n  },\n\n  // DateRangeFilter\n  '& .google-visualization-controls-rangefilter': {\n    width: '100%',\n    fontSize: '0.75rem',\n    '& .goog-inline-block': {\n      width: '100%',\n    },\n    '& .google-visualization-controls-slider-horizontal': {\n      width: '90%',\n      margin: '0 5%',\n    },\n    '& .google-visualization-controls-rangefilter-thumblabel:nth-of-type(1)': {\n      position: 'absolute',\n      top: '1.5em',\n      left: '5%'\n    },\n    '& .google-visualization-controls-rangefilter-thumblabel:nth-of-type(2)': {\n      position: 'absolute',\n      top: '1.5em',\n      right: '5%'\n    },\n    '& .google-visualization-controls-slider-handle': {\n      background: theme.palette.primary.main\n    },\n    '& .google-visualization-controls-rangefilter-thumblabel': {\n      color: theme.palette.text.secondary,\n      padding: 0,\n      fontWeight: 500\n    },\n    '& .google-visualization-controls-slider-thumb': {\n      background: theme.palette.primary.main,\n      border: 'unset',\n      borderRadius: theme.shape.borderRadius\n    }\n  },\n\n  // These are the paths showing on top of the line chart\n  // and the stroke around the bar/column chart\n  // when the user hovers on the legend to make the serie stand out\n  // by Google Chart's default doesn't change color based on light/dark theme, but we modify here:\n  '& path[stroke-opacity=\"0.3\"], path[stroke-opacity=\"0.1\"], path[stroke-opacity=\"0.05\"], rect[stroke-opacity]': {\n    stroke: theme.palette.text.primary,\n    strokeWidth: 3\n  },\n\n  // Cursor of series in legends\n  '& [column-id]:not(:empty)': {\n    cursor: 'pointer',\n    ':hover': {\n      fontWeight: 600\n    }\n  }\n}));\n\nexport default GoogleChartStyleWrapper;\n","/* eslint-disable */\nimport { ResponsiveCalendar } from '@nivo/calendar';\nimport { useEffect, useRef } from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport { Box, Chip } from '@mui/material';\n\nimport parse from 'html-react-parser';\nimport { replacePlainHTMLWithMuiComponents } from '../../../Utils/Utils';\n\nexport const yearSpacing = 40;\n\nexport const getCalendarChartMargin = (isPortrait) => {\n    return isPortrait\n        ? { top: 20, right: 0, bottom: 0, left: 20 }\n        : { top: 30, right: 40, bottom: 0, left: 40 }\n}\n\nexport const CalendarChart = (props) => {\n    const { data, dateRange, valueRange, isPortrait, options } = props;\n\n    const calendarChartMargin = getCalendarChartMargin(isPortrait);\n\n    const theme = useTheme();\n\n    // Function to extract tooltip text from HTML tooltip\n    const extractTooltipText = (tooltip) => {\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(tooltip, 'text/html');\n        return doc.body.innerHTML;\n    };\n\n    // Function to check if a date is in the first two rows of the chart\n    // Used to anchor the tooltip to the bottom while hovering over\n    // the first two rows of the chart\n    const inFirstTwoRowsOfChart = (dateStr, dateRange) => {\n        const date = new Date(dateStr);\n        const dayOfWeek = date.getDay();\n\n        // Check if the date is Sunday (0) or Monday (1)\n        const isFirstTwoDaysOfWeek = dayOfWeek === 0 || dayOfWeek === 1;\n\n        // Extract the first year from the date range once\n        const firstYear = new Date(dateRange.min).getFullYear();\n\n        // Check if the date is in the first year of the date range\n        const isInFirstYear = date.getFullYear() === firstYear;\n\n        return isFirstTwoDaysOfWeek && isInFirstYear;\n    };\n\n    // Function to get color of the Calendar cells\n    const colors = options?.colorAxis?.isGradient ?\n        generateColorGradient(options?.colorAxis?.colors[0], options?.colorAxis?.colors[1], 100) :\n        options?.colorAxis?.colors;\n\n    const showLegend = () => {\n        return (\n            <GradientBox\n                valueRange={valueRange}\n                colors={options?.colorAxis?.colors}\n                isPortrait={isPortrait}\n            />\n        )\n    }\n\n    return (\n        <>\n            {options?.legend?.position !== \"none\" && showLegend()}\n            <ResponsiveCalendar\n                data={data}\n                from={dateRange?.min}\n                to={dateRange?.max}\n                emptyColor={'transparent'}\n                theme={{\n                    text: {\n                        fill: theme.palette.text.secondary,\n                    },\n                    fontSize: '0.75rem',\n                    tooltip: {\n                        container: {\n                            background: theme.palette.mode === 'dark' ? '#2b2b2b' : '#fff',\n                            color: theme.palette.text.primary,\n                        },\n                    },\n                    axis: {\n                        ticks: {\n                            line: {\n                                stroke: theme.palette.mode === 'dark' ? '#2b2b2b' : '#fff',\n                            },\n                            text: {\n                                fill: theme.palette.text.primary,\n                            },\n                        },\n                    },\n                    grid: {\n                        line: {\n                            stroke: theme.palette.mode === 'dark' ? '#2b2b2b' : '#fff',\n                        },\n                    },\n                }}\n                colors={colors}\n                minValue={options?.colorAxis?.minValue}\n                maxValue={options?.colorAxis?.maxValue}\n                margin={calendarChartMargin}\n                yearSpacing={yearSpacing}\n                monthBorderColor={theme.palette.text.primary}\n                monthBorderWidth={1}\n                daySpacing={0.25}\n                dayBorderWidth={0}\n                tooltip={({ day, value, color }) => {\n                    const tooltipData = data.find(item => item.day === day);\n                    const tooltipText = tooltipData ? extractTooltipText(tooltipData.tooltip) : '';\n\n                    return (\n                        <CustomTooltip\n                            day={day}\n                            color={color}\n                            tooltipText={tooltipText}\n                            dateRange={dateRange}\n                            inFirstTwoRowsOfChart={inFirstTwoRowsOfChart}\n                        />\n                    );\n                }}\n            />\n        </>\n    );\n};\n\n// Custom tooltip component for the Calendar chart\nconst CustomTooltip = ({ day, color, tooltipText, dateRange, inFirstTwoRowsOfChart }) => {\n    const tooltipBoxRef = useRef(null);\n\n    // If the cell hovered over is in the first two rows of the chart,\n    // move the tooltip to the bottom of the chart\n    // Read subsequent comments to understand why we need to do this\n    useEffect(() => {\n        if (tooltipBoxRef.current && inFirstTwoRowsOfChart(day, dateRange)) {\n            const parentDiv = tooltipBoxRef.current.parentElement;\n            if (parentDiv) {\n                parentDiv.style.top = '11vh';\n            }\n        }\n    }, [tooltipBoxRef, inFirstTwoRowsOfChart]);\n\n\n    // Note that our Box is just a container 'inside' the tooltip\n    // The tooltip itself is actually the Box's parent div\n    return (\n        <Box ref={tooltipBoxRef} className='nivo-tooltip'>\n            <Chip sx={{ backgroundColor: color, mr: 0.5, height: '10px', width: '10px', borderRadius: '50%' }} />\n            {parse(tooltipText, { replace: replacePlainHTMLWithMuiComponents })}\n        </Box>\n    );\n};\n\nconst GradientBox = ({ valueRange, colors, isPortrait }) => {\n\n    if (valueRange?.min === null || valueRange?.max === null) return null;\n\n    const theme = useTheme();\n\n    // Create a gradient string from all colors in the colors array\n    const gradient = colors.map((color, index, array) => {\n        // Calculate the percentage position for each color\n        const position = (index / (array.length - 1)) * 100;\n        return `${color} ${position}%`;\n    }).join(', ');\n\n    const containerStyle = {\n        position: 'sticky',\n        width: 'fit-content',\n        marginTop: '1rem',\n        left: (isPortrait ? 'calc(80dvw - 7rem)' : 'calc(80% + 1rem)'),\n    }\n\n    const gradientStyle = {\n        background: `linear-gradient(to right, ${gradient})`,\n        color: theme.palette.text.primary,\n        border: `1px solid ${theme.palette.text.primary}`,\n        minWidth: '150px',\n        height: '1.1rem',\n        maxHeight: '1.25rem',\n        display: 'flex',\n        justifyContent: 'space-between',\n    };\n\n    const labelStyle = {\n        position: 'relative',\n        top: '-1.15rem',\n        fontSize: '0.8rem',\n    };\n\n    return (\n        <Box style={containerStyle}>\n            <Box style={gradientStyle}>\n                <span style={labelStyle}>{valueRange.min}</span>\n                <span style={labelStyle}>{valueRange.max}</span>\n            </Box>\n        </Box>\n    );\n};\n\n// Function to return an array of STEPS discrete colors in a gradient from startColor and endColor\nconst generateColorGradient = (startColor, endColor, steps) => {\n    function hexToRgb(hex) {\n        // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\n        const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n        hex = hex.replace(shorthandRegex, function (m, r, g, b) {\n            return r + r + g + g + b + b;\n        });\n\n        const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n        return result ? [parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)]\n            : [null, null, null];\n    }\n\n    function rgbToHex(r, g, b) {\n        return \"#\" + [r, g, b].map(x => {\n            const hex = x.toString(16);\n            return hex.length === 1 ? '0' + hex : hex;\n        }).join('');\n    }\n\n    function interpolateColor(color1, color2, factor) {\n        let result = color1.slice();\n        for (let i = 0; i < 3; i++) {\n            result[i] = Math.round(result[i] + factor * (color2[i] - color1[i]));\n        }\n        return result;\n    }\n\n    let startRGB = hexToRgb(startColor);\n    let endRGB = hexToRgb(endColor);\n    let colorArray = [];\n\n    for (let i = 0; i < steps; i++) {\n        let factor = i / (steps - 1);\n        let interpolatedColor = interpolateColor(startRGB, endRGB, factor);\n        colorArray.push(rgbToHex(...interpolatedColor));\n    }\n\n    return colorArray;\n}","const AggregationType = {\n  hourly: 'hourly',\n  daily: 'daily'\n}\n\nexport default AggregationType;","/* eslint-disable */\n\nimport { styled } from '@mui/material/styles';\nimport { Paper } from '@mui/material';\n\nimport { addDays, endOfDay, startOfDay } from \"date-fns\";\nimport AggregationType from './AggregationType';\n\nexport const returnCustomStaticRanges = ({ today, minDateOfDataset, aggregationType }) => {\n  const hourlyReturn = [\n    {\n      label: \"Last 14d\",\n      range: () => ({\n        startDate: startOfDay(addDays(today, -14)),\n        endDate: endOfDay(today)\n      })\n    },\n    {\n      label: \"Last 30d\",\n      range: () => ({\n        startDate: startOfDay(addDays(today, -30)),\n        endDate: endOfDay(today)\n      })\n    }\n  ];\n\n  const dailyReturn = [{\n    label: \"Last 90d\",\n    range: () => ({\n      startDate: startOfDay(addDays(today, -90)),\n      endDate: endOfDay(today)\n    })\n  },\n  {\n    label: \"Last 365d\",\n    range: () => ({\n      startDate: startOfDay(addDays(today, -365)),\n      endDate: endOfDay(today)\n    })\n  },\n  {\n    label: \"All Time\",\n    range: () => ({\n      startDate: minDateOfDataset,\n      endDate: endOfDay(today)\n    })\n  }\n  ];\n\n  return (aggregationType === AggregationType.hourly) ? hourlyReturn : [...hourlyReturn, ...dailyReturn];\n};\n\nexport const StyledDateRangePicker = styled(Paper)(({ theme, showPickerPanel, smallScreen }) => ({\n  zIndex: showPickerPanel === true && 1000,\n  position: \"relative\",\n  padding: showPickerPanel ? theme.spacing(1) : 0,\n  margin: (showPickerPanel && !smallScreen) ? theme.spacing(-1) : 0,\n  maxWidth: '100%',\n  background: showPickerPanel ? theme.palette.customAlternateBackground : 'transparent',\n  boxShadow: showPickerPanel === false && 'none',\n  '& .rdrDayToday .rdrDayNumber span:after': {\n    background: theme.palette.secondary\n  },\n  '& .rdrDateDisplayWrapper, .rdrCalendarWrapper, .rdrDefinedRangesWrapper, .rdrStaticRange, .rdrDateDisplayItem': {\n    background: 'transparent'\n  },\n  '& .rdrDateInput': {\n    borderRadius: theme.shape.borderRadius,\n    boxShadow: 'none'\n  },\n  '& .rdrDateDisplayItemActive': {\n    border: showPickerPanel === false && 'none'\n  },\n  '& .rdrDateDisplay': {\n    margin: 0,\n    minWidth: \"20rem\"\n  },\n  '& .rdrDateDisplayItem': {\n    margin: 0,\n    borderRadius: showPickerPanel ? theme.shape.borderRadius : 0,\n    \"&:hover:not(.rdrDateDisplayItemActive)\": {\n      border: showPickerPanel ? `1px solid ${theme.palette.action.disabled}` : \"none\"\n    }\n  },\n  '& .rdrDateDisplayItem:hover:not(.rdrDateDisplayItemActive)': {\n    border: showPickerPanel === false && '1px solid transparent'\n  },\n  '& .rdrDateDisplayItem + .rdrDateDisplayItem': {\n    margin: 0\n  },\n  '& .rdrDateDisplayItem:first-of-type': {\n    borderRight: showPickerPanel === false && `1px solid ${theme.palette.action.disabled} !important`\n  },\n  '& .rdrMonthAndYearWrapper, .rdrInputRanges': {\n    display: showPickerPanel === false && 'none !important',\n    padding: 0\n  },\n  '& .rdrMonthName': {\n    display: 'none',\n  },\n  '& .rdrDefinedRangesWrapper, .rdrMonths': {\n    display: showPickerPanel === false && 'none'\n  },\n  '&  .rdrInfiniteMonths': {\n    visibility: showPickerPanel === false && 'hidden',\n    width: \"100% !important\",\n    maxWidth: \"675px\",\n    margin: \"auto\"\n  },\n  '& .rdrDateDisplayWrapper': {\n    minWidth: '18rem',\n    borderRadius: theme.shape.borderRadius,\n    border: showPickerPanel ? \"none\" : `1px solid ${theme.palette.action.disabled}`,\n    \"&:hover\": {\n      border: showPickerPanel ? \"none\" : `1px solid ${theme.palette.text.primary}`,\n    }\n  },\n  '& .rdrDateRangePickerWrapper': {\n    width: '100%',\n    flexDirection: 'column-reverse'\n  },\n  '& .rdrStaticRanges': {\n    flexDirection: 'row',\n    minWidth: '21rem'\n  },\n  '& .rdrStaticRangeLabel': {\n    color: theme.palette.text.secondary,\n    borderRadius: theme.shape.borderRadius,\n    padding: `${theme.spacing(0.5)} ${theme.spacing(1)}`\n  },\n  '& .rdrDefinedRangesWrapper': {\n    border: 'none',\n    width: '100%'\n  },\n  '& .rdrNextPrevButton': {\n    background: theme.palette.primary.main,\n    borderRadius: theme.shape.borderRadius,\n    opacity: 1,\n    '&:hover': {\n      opacity: 0.5,\n      background: theme.palette.primary.main\n    }\n  },\n  '& .rdrNextPrevButton > i': {\n    color: \"white\"\n  },\n  '& .rdrNextButton > i': {\n    borderColor: `transparent transparent transparent white`\n  },\n  '& .rdrPprevButton > i': {\n    borderColor: `transparent white transparent transparent`\n  },\n  '& .rdrStaticRange': {\n    border: 'none'\n  },\n  '& .rdrStaticRangeSelected > .rdrStaticRangeLabel, .rdrMonthAndYearPickers': {\n    color: theme.palette.primary.main\n  },\n  '& .rdrMonthAndYearPickers': {\n    fontSize: '1rem'\n  },\n  '& .rdrStaticRange:hover .rdrStaticRangeLabel, .rdrStaticRange:focus .rdrStaticRangeLabel': {\n    background: theme.palette.customBackground.toString()\n  },\n  '& .rdrDayNumber span': {\n    color: theme.palette.text.primary.toString()\n  },\n  '& .rdrDayPassive .rdrDayNumber span': {\n    opacity: 0.5\n  },\n  '& .rdrMonthAndYearWrapper select': {\n    color: theme.palette.text.secondary.toString(),\n    background: 'none',\n    padding: `${theme.spacing(1)} ${theme.spacing(2)}`,\n    '&:hover': {\n      border: `1px solid ${theme.palette.text.secondary}`\n    }\n  },\n  '& .rdrDateDisplayItem input': {\n    color: theme.palette.text.secondary\n  },\n  '& .rdrDayDisabled': {\n    backgroundColor: theme.palette.customBackground\n  },\n  '& .rdrDayEndOfMonth .rdrInRange, .rdrDayEndOfMonth .rdrStartEdge, .rdrDayEndOfWeek .rdrInRange, .rdrDayEndOfWeek .rdrStartEdge, .rdrEndEdge, .rdrDayEndOfMonth .rdrDayInPreview, .rdrDayEndOfMonth .rdrDayStartPreview, .rdrDayEndOfWeek .rdrDayInPreview, .rdrDayEndOfWeek .rdrDayStartPreview, .rdrDayEndPreview': {\n    borderTopRightRadius: '2rem',\n    borderBottomRightRadius: '2rem'\n  },\n  '& .rdrStartEdge, .rdrDayStartOfMonth .rdrInRange, .rdrDayStartOfMonth .rdrEndEdge, .rdrDayStartOfWeek .rdrInRange, .rdrDayStartOfWeek .rdrEndEdge, .rdrDayStartOfMonth .rdrDayInPreview, .rdrDayStartOfMonth .rdrDayEndPreview, .rdrDayStartOfWeek .rdrDayInPreview, .rdrDayStartOfWeek .rdrDayEndPreview, .rdrDayStartPreview': {\n    borderTopLeftRadius: '2rem',\n    borderBottomLeftRadius: '2rem'\n  },\n  '& .rdrStartEdge, .rdrDayStartOfWeek .rdrInRange, .rdrDayStartOfMonth .rdrInRange, .rdrDayStartOfMonth .rdrEndEdge, .rdrDayStartOfWeek .rdrEndEdge': {\n    left: 0\n  },\n  '& .rdrEndEdge, .rdrDayEndOfWeek .rdrInRange, .rdrDayEndOfMonth .rdrInRange, .rdrDayEndOfWeek .rdrStartEdge': {\n    right: 0\n  },\n  '& .rdrSelected, .rdrInRange, .rdrStartEdge, .rdrEndEdge': {\n    top: '0px',\n    bottom: '0px',\n  },\n  '& .rdrMonths': {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  '& .rdrDay': {\n    marginBottom: \"1px\",\n    '& span': {\n      top: '0px',\n      bottom: '0px'\n    }\n  },\n  '& .rdrMonthsHorizontal': {\n    overflowY: 'hidden'\n  },\n  '& .rdrDateInput:first-of-type:before': {\n    content: '\"\"',\n    backgroundImage: `url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' class='MuiSvgIcon-root' focusable='false' aria-hidden='true' viewBox='0 0 24 24' data-testid='DateRangeIcon'%3E%3Cpath d='M9 11H7v2h2zm4 0h-2v2h2zm4 0h-2v2h2zm2-7h-1V2h-2v2H8V2H6v2H5c-1.11 0-1.99.9-1.99 2L3 20c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2m0 16H5V9h14z' fill='${theme.palette.text.secondary}'/%3E%3C/svg%3E\")`,\n    width: \"0.75rem\",\n    height: \"0.75rem\",\n    display: \"block\",\n    position: \"absolute\",\n    top: \"50%\",\n    transform: \"translateY(-50%)\",\n    left: \"0.75rem\"\n  },\n  '& .rdrStaticRangeSelected span': {\n    color: theme.palette.primary.main\n  },\n  '& .rdrDayToday .rdrDayNumber span:after': {\n    background: theme.palette.secondary.main,\n    width: \"0.25rem\",\n    height: \"0.25rem\",\n    borderRadius: \"50%\"\n  }\n}));","import { ToggleButton, ToggleButtonGroup, Typography, Stack } from '@mui/material';\n\nimport AggregationType from './AggregationType';\n\nexport default function AggregationTypeToggle({ aggregationType, setAggregationType, smallScreen }) {\n  const handleChange = (event, newType) => {\n    if (newType !== null) {\n      setAggregationType(newType);\n    }\n  };\n\n  return (\n    <Stack\n      direction=\"row\"\n      alignItems=\"center\"\n      spacing={1}\n    >\n      <Typography variant=\"caption\" display=\"block\" color=\"text.secondary\">\n        DATA AVERAGE\n      </Typography>\n\n      <ToggleButtonGroup\n        color=\"primary\"\n        value={aggregationType}\n        exclusive\n        onChange={handleChange}\n        aria-label=\"aggregation type toggle for graph average\"\n        size=\"small\"\n      >\n        <ToggleButton\n          size=\"small\"\n          sx={{ textTransform: \"capitalize !important\", px: 1.25, py: 0.5 }}\n          value={AggregationType.hourly}\n          aria-label={AggregationType.hourly}\n        >\n          {AggregationType.hourly}\n        </ToggleButton>\n        <ToggleButton\n          size=\"small\"\n          sx={{ textTransform: \"capitalize !important\", px: 1.25, py: 0.5 }}\n          value={AggregationType.daily}\n          aria-label={AggregationType.daily}\n        >\n          {AggregationType.daily}\n        </ToggleButton>\n      </ToggleButtonGroup>\n    </Stack >\n  );\n}","/* eslint-disable */\n\nimport { useState, useRef, useEffect, useContext } from 'react';\n\nimport { DateRangePicker, createStaticRanges } from 'react-date-range';\nimport 'react-date-range/dist/styles.css'; // main style file\nimport 'react-date-range/dist/theme/default.css'; // theme css file\n\nimport { CircularProgress, useMediaQuery, useTheme } from '@mui/material';\nimport { Alert, Button, Stack } from '@mui/material';\n\nimport { StyledDateRangePicker, returnCustomStaticRanges } from './DateRangePickerUtils';\nimport { EndPoints, getApiUrl } from '../../Utils/ApiUtils';\nimport AggregationTypeToggle from './AggregationTypeToggle';\nimport AggregationType from './AggregationType';\nimport { DashboardContext } from '../../ContextProviders/DashboardContext';\n\nimport { differenceInDays, isSameDay, format } from 'date-fns';\nimport { fetchDataFromURL } from '../DatasetDownload/DatasetFetcher';\n\nconst InvalidRangeMessages = {\n  tooLong: \"HOURLY data is limited to max 30d\",\n  sameDay: \"Start and end dates must be different\"\n}\n\nconst CustomDateRangePicker = (props) => {\n  const { minDateOfDataset } = props;\n\n  const { currentSchoolID, chartData, setChartData } = useContext(DashboardContext);\n  const [aggregationType, setAggregationType] = useState(AggregationType.hourly);\n\n  const today = new Date();\n\n  const [invalidRangeMessage, setInvalidRangeMessage] = useState();\n\n  const theme = useTheme();\n  const smallScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n\n  // Keep track of the date range being selected by the user\n  const [selectedRange, setSelectedRange] = useState([\n    { ...returnCustomStaticRanges({ today, minDateOfDataset })[0].range(), key: 'selection' } // Initialize with the range of the first static range\n  ]);\n\n  const [chartUrl, setChartUrl] = useState();\n\n  // Control displaying / hiding of the date range picker\n  const [showPickerPanel, setShowPickerPanel] = useState(false);\n  const paperRef = useRef(null);\n\n  const [isFetchingData, setIsFetchingData] = useState(false);\n\n  // Hide or show the date-range-picker panel\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (paperRef.current && !paperRef.current.contains(event.target)) {\n        setShowPickerPanel(false);\n      }\n    };\n    document.addEventListener(\"mousedown\", handleClickOutside);\n\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [paperRef]);\n\n  const checkValidRange = (selectedRange) => {\n    const { startDate, endDate } = selectedRange;\n\n    // Start date and end date can't be the same date\n    if (isSameDay(startDate, endDate)) {\n      setInvalidRangeMessage(InvalidRangeMessages.sameDay);\n      return;\n    }\n    else {\n      setInvalidRangeMessage(null);\n    }\n\n    // Restrict the selection to only 30 days if aggregationType is hourly\n    if (aggregationType === AggregationType.hourly) {\n      const diff = differenceInDays(endDate, startDate);\n      setInvalidRangeMessage((diff > 30) ? InvalidRangeMessages.tooLong : null);\n    }\n    // No restriction for daily aggregationType\n    else {\n      if (invalidRangeMessage !== null) setInvalidRangeMessage(null);\n    }\n  }\n\n  // Method to handle date range selection changes\n  const handleSelect = (ranges) => {\n    if (!ranges) return;\n\n    checkValidRange(ranges.selection)\n    setSelectedRange([ranges.selection]);\n  };\n\n  useEffect(() => {\n    checkValidRange(selectedRange[0]);\n  }, [aggregationType]);\n\n  // Send query request to backend when APPLY button is clicked\n  // Check if a new date range is selected as well\n  const handleApplyButtonClick = (event) => {\n    if (invalidRangeMessage !== null) return;\n\n    event.stopPropagation(); // Prevents Paper onClick from firing\n\n    const newUrl = getApiUrl({\n      endpoint: EndPoints.historicalAQI,\n      school_id: currentSchoolID,\n      aggregationType: aggregationType,\n      startDate: format(selectedRange[0].startDate, 'yyyy-MM-dd'), // only one range can be selected at a time --> [0]\n      endDate: format(selectedRange[0].endDate, 'yyyy-MM-dd')\n    });\n\n    if (newUrl !== chartUrl) {\n      setIsFetchingData(true);\n\n      fetchDataFromURL({\n        url: newUrl,\n        extension: 'json',\n        needsAuthorization: true\n      })\n        .then((data) => {\n          const charts = [...chartData.charts];\n          charts[0] = data; // replace historical chart's data with the new one\n          setChartData({\n            ...chartData,\n            charts: charts\n          });\n\n          setChartUrl(newUrl);\n          setIsFetchingData(false);\n          setShowPickerPanel(false);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n\n  };\n\n  const renderApplyButtonLabel = () => {\n    return (\n      isFetchingData ? <CircularProgress disableShrink size=\"1.4375rem\" color=\"inherit\" /> : \"APPLY\"\n    )\n  };\n\n  return (\n    <StyledDateRangePicker\n      showPickerPanel={showPickerPanel}\n      smallScreen={smallScreen}\n      ref={paperRef}\n      elevation={8}\n      onClick={() => setShowPickerPanel(true)}\n    >\n      <Stack direction={\"column\"} spacing={1}>\n        <DateRangePicker\n          ranges={selectedRange}\n          onChange={handleSelect}\n          staticRanges={\n            createStaticRanges(\n              returnCustomStaticRanges({\n                today, minDateOfDataset, aggregationType\n              })\n            )\n          }\n          inputRanges={[]}\n          rangeColors={[theme.palette.primary.main, theme.palette.secondary.main, theme.palette.text.secondary]}\n          minDate={minDateOfDataset}\n          maxDate={today}\n          months={1}\n          showMonthAndYearPickers={false}\n          direction={\"horizontal\"}\n          fixedHeight={true}\n          preventSnapRefocus={true}\n          calendarFocus=\"backwards\"\n          startDatePlaceholder=\"Start Date\"\n          endDatePlaceholder=\"End Date\"\n          editableDateInputs={true}\n          showMonthArrow={true}\n        />\n\n        {showPickerPanel && (\n          <Stack\n            direction=\"column\"\n            alignItems=\"end\"\n            width=\"100%\"\n            spacing={1}\n          >\n            <AggregationTypeToggle\n              aggregationType={aggregationType}\n              setAggregationType={setAggregationType}\n              smallScreen={smallScreen}\n            />\n            <Stack direction=\"row\" spacing={1}>\n              {\n                invalidRangeMessage && displayErrorMessage(invalidRangeMessage)\n              }\n              <Button\n                variant=\"contained\"\n                size=\"small\"\n                disabled={invalidRangeMessage === null ? false : true}\n                onClick={handleApplyButtonClick}\n                sx={{\n                  zIndex: 1005,\n                  transform: \"translateY(-1px)\"\n                }}\n              >\n                {renderApplyButtonLabel()}\n              </Button>\n            </Stack>\n\n          </Stack>\n\n        )}\n      </Stack>\n\n    </StyledDateRangePicker>\n\n  );\n};\n\nconst displayErrorMessage = (invalidRangeMessage) => {\n  return (\n    <Alert\n      severity=\"error\"\n      sx={{\n        py: 0.5,\n        px: 1,\n        display: \"flex\",\n        alignItems: \"center\",\n        \"& div\": {\n          fontSize: \"0.75rem\",\n          p: 0\n        },\n        \"& .MuiAlert-icon\": {\n          fontSize: \"1rem\",\n          mr: 0.5\n        }\n      }}\n    >\n      {invalidRangeMessage}\n    </Alert>\n  )\n}\n\nexport default CustomDateRangePicker;\n","/* eslint-disable */\n\nimport { useState, useEffect, useContext, useMemo } from 'react';\n\nimport { GoogleContext } from '../../ContextProviders/GoogleContext';\n\nimport { Box, Stack, Grid } from '@mui/material/';\n\nimport { useTheme } from '@mui/material/styles';\nimport SeriesSelector from './SubchartUtils/SeriesSelector';\nimport { generateRandomID, returnGenericOptions, returnCalendarChartOptions, returnChartControlUI, ChartControlType, addTouchEventListenerForChartControl, getDateRangeForCalendarChart, getValueRangeForCalendarChart } from '../GoogleChartHelper';\n\nimport GoogleChartStyleWrapper from './SubchartUtils/GoogleChartStyleWrapper';\n\nimport LoadingAnimation from '../../Components/LoadingAnimation';\n\nimport { CalendarChart, getCalendarChartMargin, yearSpacing } from './NivoCharts/NivoCalendarChart'\n\nimport CustomDateRangePicker from '../../Components/DateRangePicker/CustomDateRangePicker'\n\nexport default function SubChart(props) {\n  // Props\n  const { chartData, subchartIndex, windowSize, isPortrait, isHomepage, height, maxHeight } = props;\n\n  // Formulate the className\n  const className = chartData.customClassName ? `${chartData.chartType} ${chartData.customClassName}` : chartData.chartType;\n\n  // Use GoogleContext for loading and manipulating the Google Charts\n  const google = useContext(GoogleContext);\n\n  // States of the Google Charts\n  const [dataTable, setDataTable] = useState();\n  const [chartWrapper, setChartWrapper] = useState();\n  const [dashboardWrapper, setDashboardWrapper] = useState();\n  const [controlWrapper, setControlWrapper] = useState();\n\n  const [previousChartData, setPreviousChartData] = useState();\n\n  // Get the current theme\n  const theme = useTheme();\n\n  // To determine the first time the chart renders to show/hide the LoadingAnimation\n  const [isFirstRender, setIsFirstRender] = useState(true);\n\n  // Keep track of the columns (series) of the chart\n  const [allInitialColumns, setAllInitialColumns] = useState();\n  const [dataColumns, setDataColumns] = useState();\n  const [initialVAxisRange, setInitialVAxisRage] = useState();\n\n  // Define the DOM container's ID for drawing the google chart inside\n  const [chartID, __] = useState(generateRandomID());\n\n  // Calendar chart's properties\n  const [chartTotalHeight, setChartTotalHeight] = useState(200);\n\n  // Get the options object for chart\n  let options = useMemo(() => {\n    let opts = returnGenericOptions({ ...props, theme });\n    if (chartData.chartType === 'Calendar') {\n      opts = returnCalendarChartOptions(opts);\n    }\n    return opts;\n  }, [props, theme, chartData.chartType]);\n  // State to store transformed data for CalendarChart\n  const [calendarData, setCalendarData] = useState(null);\n  const [calendarHeight, setCalendarHeight] = useState(200);\n  const [containerWidth, setContainerWidth] = useState(1200); // max width of the chart container\n  // Early exit for 'Calendar' chartType\n  if (chartData.chartType === 'Calendar') {\n    useEffect(() => {\n      const dataArray = chartData.dataArray\n        || (chartData.subcharts\n          && chartData.subcharts[subchartIndex].dataArray)\n        || null\n        || null;\n      if (!dataArray) return; // early return if there is no data to render\n\n      const dateStrings = dataArray.map(item => item.day);\n      const values = dataArray.map(item => item.value);\n      const dateRange = getDateRangeForCalendarChart(dateStrings);\n\n      setCalendarData({\n        data: dataArray,\n        dateRange: dateRange,\n        valueRange: getValueRangeForCalendarChart(values)\n      });\n\n      // Get the number of years in the dateRange\n      const startYear = new Date(dateRange.min).getFullYear();\n      const endYear = new Date(dateRange.max).getFullYear();\n      const numberOfYear = endYear - startYear + 1;\n\n      // Calculate the size of each cell\n      const cellSize = Math.min(containerWidth / 60, 20); // max cell size of 20\n      const yearHeight = cellSize * 7; // Height for one year\n\n      const calendarChartMargin = getCalendarChartMargin(isPortrait);\n\n      // Calculate the total height based on the number of years and margins\n      let totalHeight;\n      if (numberOfYear == 1) {\n        totalHeight = yearHeight + yearSpacing + calendarChartMargin.top + calendarChartMargin.bottom\n      }\n      else {\n        totalHeight = numberOfYear * (yearHeight + yearSpacing) + calendarChartMargin.top + calendarChartMargin.bottom;\n      }\n      setCalendarHeight(totalHeight);\n\n    }, [chartData]);\n\n    return (\n      <GoogleChartStyleWrapper\n        isPortrait={isPortrait}\n        className={className}\n        position=\"relative\"\n        minWidth=\"700px\"\n        minHeight={isPortrait ? '200px' : calendarHeight + 'px'}\n        height={calendarHeight + 'px'}\n        maxHeight={isPortrait && '550px'}\n      >\n        {calendarData ?\n          <CalendarChart\n            data={calendarData.data}\n            dateRange={calendarData.dateRange}\n            valueRange={calendarData.valueRange}\n            isPortrait={isPortrait}\n            options={options}\n          />\n          :\n          (\n            <Box sx={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '100%' }}>\n              <LoadingAnimation />\n\n            </Box>\n          )\n        }\n      </GoogleChartStyleWrapper>\n    );\n  }\n\n  // Properties for chart control (if existed)\n  let hasChartControl = false;\n  let chartControlOptions;\n  // Only show the chart control if:\n  // It exists in the database (either for all subcharts or just for a particular subchart)\n  // And if the chart is currently not shown on homePage\n  let chartControl = chartData.control || chartData.subcharts?.[subchartIndex].control;\n  if (chartControl && (isHomepage !== true)) {\n    hasChartControl = true;\n\n    // Get the options for chartControl if hasChartControl\n    chartControlOptions = {\n      ...chartControl.options,\n      ui: returnChartControlUI({\n        chartControl,\n        mainChartData: chartData,\n        mainChartOptions: options,\n        subchartIndex,\n        theme,\n        isPortrait\n      })\n    };\n\n    // Swap touch events for mouse events on ChartRangeControl\n    // as it doesn't support touch events on mobile\n    if (chartControl.controlType === 'ChartRangeFilter') {\n      useEffect(() => {\n        const cleanupTouchEventListener = addTouchEventListenerForChartControl({ controlWrapper, chartID });\n        return cleanupTouchEventListener;\n      }, [controlWrapper]);\n    }\n  }\n\n  // Properties for selecting (showing or hiding) the serie(s)\n  const seriesSelector = options.seriesSelector || false;\n\n  // Properties for date-range-picker\n  const dateRangePicker = options.dateRangePicker || null;\n\n  // Set new options prop and re-render the chart if theme or isPortrait changes\n  useEffect(() => {\n    if (seriesSelector) handleSeriesSelection({ newDataColumns: dataColumns }); // this function set new options, too\n    else {\n      chartWrapper?.setOptions({\n        ...options,\n        ...(chartData.chartType === 'Calendar' && { height: chartTotalHeight })\n      });\n\n      chartWrapper?.draw();\n      if (hasChartControl) {\n        controlWrapper?.setOptions(chartControlOptions);\n        controlWrapper?.draw();\n      }\n    }\n  }, [theme, isPortrait, windowSize, chartTotalHeight]);\n\n  // Set new initialColumnsColors if the theme changes\n  // This only applies to when seriesSelector.method == \"setViewColumn\"\n  useEffect(() => {\n    if (!dataColumns) return;\n    if (seriesSelector && seriesSelector.method == \"setViewColumn\") {\n      setInitialColumnsColors({ dataColumns: dataColumns });\n      handleSeriesSelection({ newDataColumns: dataColumns });\n    }\n  }, [theme]);\n\n  const getInitialColumns = ({ chartWrapper, dataTable, seriesSelector }) => {\n    // Update the initial DataView's columns (often, all of the series are displayed initially)\n    var initialView = chartWrapper.getView();\n    // If (optional) columns is not specified in database\n    // Assign it from DataTable\n    if (initialView.columns == null) {\n      const viewFromDataTable = new google.visualization.DataView(dataTable);\n      chartWrapper.setView({\n        columns: viewFromDataTable.columns\n      });\n      initialView = chartWrapper.getView();\n    }\n\n    let shouldAssignDomainRoleToFistColumn = true; // variable to only assign type: 'domain' to the very first column\n    let dataSeriesIndex = 0;\n    const allInitialColumns = initialView.columns.map((col, index) => {\n      // A column can either be a number (that denotes the index of the sourceColumn) or an object\n      // The code below harmonize all columns to be an object to store crucial data to toggle their visibility\n      if (typeof col === 'number') col = {\n        role: shouldAssignDomainRoleToFistColumn ? 'domain' : 'data',\n        sourceColumn: col\n      }\n      col.label = dataTable.getColumnLabel(col.sourceColumn);\n      col.indexInAllInitialColumns = index;\n\n      shouldAssignDomainRoleToFistColumn = shouldAssignDomainRoleToFistColumn && false;\n\n      // Set the visibility of data column, \n      if (col.role === 'data') {\n        // If defaultSeriesToDisplayInitially is presented\n        // then, only show these series\n        if (seriesSelector.defaultSeriesToDisplayInitially) {\n          if (seriesSelector.defaultSeriesToDisplayInitially.includes(index)) {\n            col.selected = true;\n          }\n          else {\n            col.selected = false;\n          }\n        }\n        // If no defaultSeriesToDisplayInitially is presented\n        else {\n          // then, all data columns are selected if multiple series are selectable\n          if (seriesSelector.allowMultiple) {\n            col.selected = true;\n          } else {\n            // else for single serie selector, only first data column is selected\n            if (dataSeriesIndex === 0) {\n              col.selected = true;\n            } else {\n              col.selected = false;\n            }\n          }\n        }\n\n        col.seriesIndex = dataSeriesIndex;\n        dataSeriesIndex++;\n      }\n      return col;\n    });\n    setAllInitialColumns(allInitialColumns);\n    const initialVAxisRange = getInitialVAxisRange({ dataTable: dataTable, allInitialColumns: allInitialColumns });\n    setInitialVAxisRage(initialVAxisRange);\n    // To track selection, only get the columns that are:\n    // role === 'data'\n    // visibleInLegend !== false\n    const dataColumns = allInitialColumns.filter((col) => {\n      return col.role === 'data' && options.series?.[col.seriesIndex]?.visibleInLegend !== false;\n    });\n\n    if (seriesSelector.method === \"setViewColumn\") setInitialColumnsColors({ dataColumns: dataColumns });\n\n    setDataColumns(dataColumns);\n    return { initAllInitialColumns: allInitialColumns, initDataColumns: dataColumns };\n  };\n\n  const setInitialColumnsColors = ({ dataColumns }) => {\n    dataColumns.forEach((col) => {\n      // Assign inherit color to this data column\n      col.color = options.colors[col.seriesIndex % options.colors.length];\n      // Assign other inherit attributes from its serie object (if existed)\n      col.serieAttribute = options.series?.[col.seriesIndex];\n    });\n  }\n\n  const getInitialVAxisRange = ({ dataTable, allInitialColumns }) => {\n    let vAxisMin, vAxisMax;\n    allInitialColumns.forEach((col, index) => {\n      if (index === 0) return; // the first column is the domain (hAxis)\n      const range = dataTable.getColumnRange(col.sourceColumn);\n      if (!isNaN(range.min) && range.min) vAxisMin = vAxisMin ? Math.min(vAxisMin, range.min) : range.min;\n      if (!isNaN(range.max) && range.max) vAxisMax = vAxisMax ? Math.max(vAxisMax, range.max) : range.max;\n    });\n    return { min: vAxisMin, max: vAxisMax };\n  }\n\n  const handleSeriesSelection = ({ newDataColumns, _allInitialColumns = allInitialColumns, _chartWrapper = chartWrapper }) => {\n    if (!_allInitialColumns) return;\n\n    setDataColumns(newDataColumns);\n\n    if (seriesSelector.method === \"toggleVisibility\" || seriesSelector.method === null) {\n      const hiddenSeriesObject = {};\n      newDataColumns.forEach((col) => {\n        if (!col.selected)\n          hiddenSeriesObject[col.seriesIndex] = {\n            color: 'transparent',\n            enableInteractivity: false,\n            visibleInLegend: false\n          }; // 'hide' the serie by making it transparent\n      });\n\n      _chartWrapper?.setOptions({\n        ...options,\n        series: {\n          ...options.series,\n          ...hiddenSeriesObject\n        }\n      });\n    }\n    else if (seriesSelector.method === \"setViewColumn\") {\n      let newViewColumns = [];\n      newViewColumns.push(0); // this is the domain column\n      newDataColumns.forEach((dataColumn) => {\n        if (dataColumn.selected) {\n          newViewColumns.push(dataColumn);\n          // Find this dataColumn's supporting columns (whose role !== 'data')\n          // A dataColumn has its supporting columns (can be many) follow it immediately\n          for (let i = dataColumn.indexIn_ + 1; i < _allInitialColumns.length; i++) {\n            if (_allInitialColumns[i].role !== 'data') {\n              newViewColumns.push(_allInitialColumns[i]);\n            }\n            // If this loop encounter the next dataColumn, break the loop, all supporting columns for this dataColumn have been discovered\n            else {\n              break;\n            }\n          }\n        }\n      });\n      _chartWrapper?.setView({ columns: newViewColumns });\n\n      const newOptions = { ...options };\n      // Preserve the initial vAxis range so that the vAxis doesn't shift based on the visible serie(s)\n      // newOptions.vAxis.viewWindow = {\n      //   min: (options.vAxis.viewWindow.min == null) ? initialVAxisRange.min : options.vAxis.viewWindow.min,\n      //   max: (options.vAxis.viewWindow.max == null) ? initialVAxisRange.max : options.vAxis.viewWindow.max,\n      // }\n      // Set the new color array\n      newOptions.colors = newDataColumns.filter((col) => col.selected).map((col) => col.color);\n      // Set the new series object (if any)\n      // this contains other series' attributes (lineWidth, seriesType...)\n      const series = {};\n      let selectedSeriesCount = 0;\n      newDataColumns.forEach((col) => {\n        if (!col.selected) return;\n        if (col.serieAttribute != null) {\n          series[selectedSeriesCount] = col.serieAttribute;\n        }\n        selectedSeriesCount++;\n      })\n      newOptions.series = series;\n      _chartWrapper?.setOptions(newOptions);\n    }\n\n    // Call draw to apply the new DataView and 'refresh' the chart\n    _chartWrapper?.draw();\n\n    if (hasChartControl) {\n      controlWrapper?.draw();\n    }\n  };\n\n  const reconstructFunctionFromJSONstring = (columns) => {\n    if (!columns) return;\n\n    const evaluatedColumns = [];\n    for (const column of columns) {\n      if (typeof column === 'number') {\n        // If it's a number, add it as-is\n        evaluatedColumns.push(column);\n      } else if (typeof column === 'object') {\n        if (column.calc && column.calc !== 'stringify') {\n          // If it's an object with a 'calc' property, evaluate the 'calc' function\n          // using new Function() and add the result to the evaluatedColumns array\n          const calcFunction = new Function(\"dataTable\", \"rowNum\", column.calc);\n          evaluatedColumns.push({\n            ...column,\n            calc: calcFunction,\n          });\n        } else {\n          // If it's an object without a 'calc' property, or with calc = 'stringify', add it as-is\n          evaluatedColumns.push(column);\n        }\n      }\n    }\n    return evaluatedColumns;\n  }\n\n\n  // Call this function to fetch the data and draw the initial chart\n  useEffect(() => {\n    if (google && chartData) {\n      // Do not draw again if deep comparison between current chartData and previousChartData is true\n      if (JSON.stringify(chartData) === JSON.stringify(previousChartData)) return;\n      setPreviousChartData(chartData);\n\n      // Get and set the dataArray \n      const dataArray = chartData.dataArray\n        || (chartData.subcharts\n          && chartData.subcharts[subchartIndex].dataArray)\n        || null\n        || null;\n      if (!dataArray) return; // early return if there is no data to render\n\n      const thisDataTable = google.visualization.arrayToDataTable(dataArray);\n      setDataTable(thisDataTable);\n\n      // Get dataColumn views\n      const columns = chartData.columns\n        || (chartData.subcharts\n          && chartData.subcharts[subchartIndex].columns)\n        || null\n        || null;\n      const reconstructedColumns = reconstructFunctionFromJSONstring(columns);\n\n      // Create chartWrapper\n      const thisChartWrapper = new google.visualization.ChartWrapper({\n        chartType: chartData.chartType,\n        dataTable: (!hasChartControl) ? thisDataTable : undefined,\n        options: options,\n        view: {\n          columns: reconstructedColumns\n        },\n        containerId: chartID\n      });\n      setChartWrapper(thisChartWrapper);\n\n      if (hasChartControl) {\n        const thisDashboardWrapper = new google.visualization.Dashboard(\n          document.getElementById(`dashboard-${chartID}`));\n        setDashboardWrapper(thisDashboardWrapper);\n\n        google.visualization.events.addListener(thisDashboardWrapper, 'ready', onChartReady);\n\n        const thisControlWrapper = new google.visualization.ControlWrapper({\n          controlType: chartControl.controlType,\n          options: chartControlOptions,\n          containerId: `control-${chartID}`\n        });\n        setControlWrapper(thisControlWrapper);\n\n        // Establish dependencies\n        thisDashboardWrapper.bind(thisControlWrapper, thisChartWrapper);\n\n        thisDashboardWrapper.draw(thisDataTable);\n      }\n      else {\n        google.visualization.events.addListener(thisChartWrapper, 'ready', onChartReady);\n        thisChartWrapper.draw();\n      }\n\n      // Run the seriesSelector for the first time\n      if (seriesSelector) {\n        const { initAllInitialColumns, initDataColumns } = getInitialColumns({ chartWrapper: thisChartWrapper, dataTable: thisDataTable, seriesSelector: seriesSelector });\n\n        handleSeriesSelection({\n          _allInitialColumns: initAllInitialColumns,\n          newDataColumns: initDataColumns,\n          _chartWrapper: thisChartWrapper\n        });\n      }\n    }\n  }, [google, chartData]);\n\n  const renderChart = () => {\n    if (hasChartControl) {\n      return (\n        <Stack\n          id={`dashboard-${chartID}`}\n          direction={ChartControlType[chartControl.controlType]?.stackDirection || 'column-reverse'}\n          sx={{ height: '100%' }}\n        >\n          <Box\n            id={`control-${chartID}`}\n            sx={{\n              height: `calc(${height} / 8)`,\n              opacity: 0.8,\n              filter: 'saturate(0.3)'\n            }}\n          />\n          <Box id={chartID} sx={{ height: height, maxHeight: maxHeight }} />\n        </Stack>\n      )\n    }\n    else return <Box id={chartID} sx={{ height: height, maxHeight: maxHeight }} />;\n  }\n\n  const onChartReady = () => {\n    if (!isFirstRender) return;\n    // Hide the circleProgress when chart finishes rendering the first time\n    setIsFirstRender(false);\n  };\n\n  const showAuxiliaryControls = () => {\n    if (!isFirstRender) {\n      return (\n        <Grid\n          container\n          mt={1}\n          sx={{\n            gap: 2,\n            [theme.breakpoints.down('sm')]: { gap: 1 }\n          }}\n        >\n          {seriesSelector &&\n            <Grid item\n              sx={{\n                [theme.breakpoints.down('sm')]: { width: '100%' }\n              }}\n            >\n              <SeriesSelector\n                items={dataColumns}\n                allowMultiple={seriesSelector.allowMultiple}\n                seriesLabel={seriesSelector.seriesLabel}\n                selectorID={`${chartData.title}-selector`}\n                onSeriesSelection={handleSeriesSelection}\n                displayChip={false}\n              />\n            </Grid>\n          }\n          {\n            dateRangePicker &&\n            <Grid item\n              sx={{\n                height: \"2rem\",\n                width: { [theme.breakpoints.down('sm')]: { width: '100%' } }\n              }} >\n              <CustomDateRangePicker minDateOfDataset={new Date(dateRangePicker.minDate)} />\n            </Grid>\n          }\n        </Grid >\n      );\n    } else {\n      return null;\n    }\n  };\n\n  return (\n    <GoogleChartStyleWrapper\n      isPortrait={isPortrait}\n      className={className}\n      position=\"relative\"\n      height=\"100%\"\n      minHeight={chartData.chartType === 'Calendar' && '200px'}\n    >\n      {/* Conditionally display loading animation here */}\n      {isFirstRender && (\n        <Box sx={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '100%' }}>\n          <LoadingAnimation />\n        </Box>\n      )}\n\n      {showAuxiliaryControls()}\n\n      {/* Display chart here */}\n      {renderChart()}\n    </GoogleChartStyleWrapper>\n  );\n}","import { useState, useRef } from 'react';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport parse from 'html-react-parser';\nimport { useMediaQuery, useTheme } from '@mui/material';\nimport { replacePlainHTMLWithMuiComponents } from '../Utils/Utils';\n\nfunction CollapsibleSubtitle({ text, wordLimit = 40, reference }) {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  const subtitleRef = useRef(null);\n\n  const words = text.split(' ');\n\n  // If not on mobile or words are within limit, just display the full text\n  if (!isMobile || words.length / wordLimit <= 1.4) {\n    return (\n      <Box>\n        <Typography>{parse(text, { replace: replacePlainHTMLWithMuiComponents })}</Typography>\n        {reference && (\n          <Typography variant=\"caption\" color=\"text.secondary\">\n            {parse(reference, { replace: replacePlainHTMLWithMuiComponents })}\n          </Typography>\n        )}\n      </Box>\n    );\n  }\n\n  let displayText = words.slice(0, wordLimit).join(' ');\n  const lastFullStop = displayText.lastIndexOf('.');\n\n  if (lastFullStop !== -1) {\n    displayText = displayText.slice(0, lastFullStop + 1);\n  }\n\n  // Do not collapse if the user clicks on the chart associated with the subtitle\n  const isClickWithinSharedParent = (event) => {\n    let { target } = event;\n    // .MuiContainer-root - Container for both the subtitle and the chart\n    const subtitleParent = subtitleRef.current.closest('.MuiContainer-root');\n    // Elements used to detect if the click is on a chart\n    const chartElements = new Set(['rect', 'path', 'svg', 'circle']);\n\n    while (target != null) {\n      // Check if a chart is clicked\n      if (chartElements.has(target.tagName)) {\n        // If the chart element and the subtitle element share the same container\n        // it means that the click is on the chart associated with the subtitle\n        // As such, we should not collapse the subtitle\n        const targetParent = target.closest('.MuiContainer-root');\n        return targetParent === subtitleParent;\n      }\n      target = target.parentNode; // Move up the DOM tree\n    }\n    return false;\n  };\n\n  // Custom onClickAway handler\n  const handleOnClickAway = (event) => {\n    if (!isClickWithinSharedParent(event)) {\n      setIsExpanded(false);\n    }\n  };\n\n  return (\n    <ClickAwayListener onClickAway={handleOnClickAway}>\n      <Box ref={subtitleRef} onClick={() => setIsExpanded(!isExpanded)} style={{ cursor: 'pointer' }}>\n        {isExpanded ? (\n          <>\n            <Typography>{parse(text, { replace: replacePlainHTMLWithMuiComponents })}</Typography>\n            {reference && <Typography variant=\"caption\" color=\"text.secondary\">{parse(reference, { replace: replacePlainHTMLWithMuiComponents })}</Typography>}\n          </>\n        ) : (\n          <>\n            <Typography display=\"inline\">\n              {parse(displayText, { replace: replacePlainHTMLWithMuiComponents })}\n              ...\n            </Typography>\n            <Typography display=\"inline\" color=\"text.primary\" fontWeight=\"500\" sx={{ ml: 0.5, '& :hover': { textDecoration: 'underline' } }}>\n              See more\n            </Typography>\n          </>\n        )}\n      </Box>\n    </ClickAwayListener>\n  );\n}\n\nexport default CollapsibleSubtitle;\n","import { useState, useEffect } from 'react';\nimport { styled } from '@mui/material/styles';\nimport { Box, Tabs, Tab, useMediaQuery, Typography } from '@mui/material/';\n\nimport SubChart from './Subchart/SubChart';\n\nimport CollapsibleSubtitle from '../Components/CollapsibleSubtitle';\n\nconst debounceMilliseconds = 100;\n\nconst ChartStyleWrapper = styled(Box)(({ theme }) => ({\n  // CSS for dark theme only\n  ...(theme.palette.mode === 'dark' && {\n    // De-saturate a bit\n    filter: 'saturate(0.85)',\n    // Invert iframe\n    '& .heat-map-iframe': {\n      filter: 'invert(0.848) hue-rotate(180deg)',\n    }\n  }),\n  // Special CSS for historical-snapshot-aqi chart\n  '& .historical-snapshot-aqi svg [clip-path*=\"ABSTRACT_RENDERER\"] > g:nth-of-type(1), .historical-snapshot-aqi [id*=\"googlechart-control\"] svg [clip-path*=\"ABSTRACT_RENDERER\"] > g:nth-of-type(2)': {\n    opacity: 0.6\n  },\n  // Center Calendar chart in wrapper\n  '& .Calendar [dir]:not(:empty)': {\n    margin: 'auto'\n  },\n\n  // add horizontal scrollbar to Calendar charts\n  '& .Calendar > div > div:last-of-type > div': {\n    overflowX: 'auto',\n    overflowY: 'hidden',\n    scrollbarGutter: 'stable'\n  }\n}));\n\nconst StyledTabs = styled(Tabs)(({ theme }) => ({\n  '& .MuiTabScrollButton-root': {\n    color: theme.palette.text.primary\n  },\n  '& .MuiTab-root': {\n    [theme.breakpoints.down('sm')]: {\n      fontSize: '0.75rem',\n      paddingLeft: theme.spacing(1),\n      paddingRight: theme.spacing(1)\n    },\n  }\n}));\n\n// eslint-disable-next-line max-len\nfunction ChartComponentWrapper(props) {\n  const {\n    generalChartSubtitle,\n    generalChartReference,\n    chartData: passedChartData,\n    chartHeight: passedChartHeight,\n    isHomepage\n  } = props;\n  const isSmallWidth = useMediaQuery((theme) => theme.breakpoints.down('sm'));\n\n  const [isPortrait, setIsPortrait] = useState(window.matchMedia('(orientation: portrait)').matches);\n  const [windowSize, setWindowSize] = useState([\n    window.innerWidth,\n    window.innerHeight,\n  ]);\n\n  let chartMaxHeight;\n  let chartHeight = passedChartHeight;\n  const chartData = passedChartData;\n\n  // Props for tab panels (multiple data visualizations in the same chart area, navigate with tab panels)\n  const [currentTab, setCurrentTab] = useState(0); // start with the first tab\n\n  // eventListener for window resize\n  // redraw \"Calendar\" charts and charts with a time filter upon window resize.\n  // Filter & Calendar charts are not automatically respnsive, so we have to redraw them.\n  // redraw other charts when device orientation changes\n  useEffect(() => {\n    setCurrentTab(0); // set tab back to 0 if chartData changes (changed school)\n\n    let timeoutID = null;\n\n    const handleWindowResize = () => {\n      clearTimeout(timeoutID);\n\n      // debounce before triggering re-render. as user is resizing window, the state could\n      // change multiple times causing many expensive rerenders. we try to rerender at the\n      // end of the resize.\n      timeoutID = setTimeout(() => {\n        // Redraw all charts on device orientation change, as the chartWrapperHeights\n        // have changed.\n        setIsPortrait(window.matchMedia('(orientation: portrait)').matches);\n\n        // Redraw all charts on window resized\n        setWindowSize([window.innerWidth, window.innerHeight]);\n      }, debounceMilliseconds);\n    };\n\n    // listen to window resize events\n    window.addEventListener('resize', handleWindowResize);\n\n    return () => {\n      window.removeEventListener('resize', handleWindowResize);\n    };\n  }, [chartData]);\n\n  if (chartData.chartType !== 'Calendar' && !chartHeight) {\n    chartHeight = isPortrait ? '80vw' : '35vw';\n    chartMaxHeight = isPortrait ? '800px' : '500px';\n  }\n\n  // Handle tab change\n  const handleChange = (__, newValue) => {\n    setCurrentTab(newValue);\n  };\n\n  // Function to render only one chart (no subchart --> no tab control)\n  const renderOnlyOneChart = () => {\n    return (\n      <SubChart\n        chartData={chartData}\n        isPortrait={isPortrait}\n        isHomepage={isHomepage}\n        windowSize={windowSize}\n        height={chartData.height ? chartData.height : chartHeight}\n      />\n    );\n  }\n\n  // Function to render multiple subcharts with tab control\n  const renderMultipleSubcharts = () => {\n    return (\n      <>\n        <StyledTabs\n          value={currentTab}\n          onChange={handleChange}\n          variant={isSmallWidth ? 'fullWidth' : 'standard'}\n        >\n          {chartData.subcharts.map((element, index) => (\n            <Tab\n              key={index}\n              value={index}\n              label={chartData.subcharts[index].subchartTitle}\n            />\n          ))}\n        </StyledTabs>\n        <Box\n          position=\"relative\"\n          sx={{\n            overflowX: isPortrait && 'auto',\n            WebkitOverflowScrolling: isPortrait && 'touch',\n            overflowY: 'hidden',\n          }}\n        >\n          {chartData.subcharts.map((__, index) => (\n            <Box\n              key={index}\n              width=\"100%\"\n              height=\"100%\"\n              role=\"tabpanel\"\n              sx={{\n                transition: '0.35s',\n                position: (index === 0) ? '' : 'absolute',\n                opacity: currentTab === index ? '1' : '0',\n                pointerEvents: currentTab === index ? 'auto' : 'none',\n                top: (index === 0) ? '' : 0,\n              }}\n            >\n              <SubChart\n                chartData={chartData}\n                subchartIndex={index}\n                isPortrait={isPortrait}\n                isHomepage={isHomepage}\n                windowSize={windowSize}\n                height={chartData.height ? chartData.height : chartHeight}\n                maxHeight={\n                  ['Calendar'].includes(chartData.chartType)\n                    ? ''\n                    : chartMaxHeight\n                }\n              />\n            </Box>\n          ))}\n        </Box>\n      </>\n    )\n  };\n\n  // Function to render remaining subtitles and references for chart with multiple subcharts\n  const getSubtitles = () => {\n    let text = generalChartSubtitle || '';\n    if (chartData.subcharts && chartData.subcharts[currentTab]?.subchartSubtitle) {\n      text += '<br/>'\n      text += chartData.subcharts[currentTab].subchartSubtitle;\n    }\n    return text;\n  }\n  const getReferences = () => {\n    let text = generalChartReference || '';\n    if (chartData.subcharts && chartData.subcharts[currentTab]?.reference) {\n      text += '<br/>'\n      text += chartData.subcharts[currentTab].reference;\n    }\n    return text;\n  }\n\n  return (\n    <ChartStyleWrapper height=\"100%\">\n      {chartData.subcharts ? renderMultipleSubcharts() : renderOnlyOneChart()}\n\n      {/* Render subtitle and reference below */}\n      <Box sx={{ my: 3 }}>\n        <Typography\n          component=\"div\"\n          variant=\"body1\"\n          color=\"text.secondary\"\n          sx={{ mb: 1 }}\n        >\n          <CollapsibleSubtitle\n            text={getSubtitles()}\n            reference={getReferences()}\n          />\n        </Typography>\n      </Box>\n    </ChartStyleWrapper>\n  );\n}\n\nexport default ChartComponentWrapper;\n"],"names":["Explanation","AQIexplanation","themePreference","useContext","PreferenceContext","_jsx","ExpandableSection","title","content","_jsxs","_Fragment","children","AirQualityIndexTable","Typography","component","variant","color","sx","mt","parse","replace","replacePlainHTMLWithMuiComponents","StyledTable","styled","Table","_ref","theme","isTiny","minWidth","fontSize","palette","text","secondary","breakpoints","down","fontWeight","primary","lineHeight","props","hideAQIDescription","Box","overflow","size","TableHead","TableRow","TableCell","pr","width","height","pl","align","TableBody","AQIdatabase","map","element","index","border","backgroundColor","ThemePreferences","light","lightThemeColor","darkThemeColor","category","aqiUS","low","high","rawPM2_5","description","healthSuggestions","outdoors","_ref2","shouldRender","aqiChart","dataArray","i","length","push","Math","ceil","ChartComponentWrapper","chartHeight","chartData","chartType","options","enableInteractivity","legend","position","hAxis","ticks","chartArea","portrait","landscape","isStacked","colors","bar","groupWidth","renderAQIchart","StyledAccordion","MuiAccordion","expanded","backgroundImage","background","default","boxShadow","shadows","transition","StyledAccordionSummary","MuiAccordionSummary","marginTop","spacing","flexDirection","paddingLeft","textDecoration","main","marginBottom","TooltipText","_ref3","setExpanded","useState","undefined","onChange","panel","event","isExpanded","Tracking","expandSection","collapseSection","section","transitionDuration","expandIcon","ArrowDropDownIcon","id","Tooltip","enterDelay","leaveDelay","InfoIcon","marginLeft","MuiAccordionDetails","SELECT_ALL","ITEM_HEIGHT","ITEM_PADDING_TOP","SeriesSelector","items","itemsFromChart","selectorID","allowMultiple","seriesLabel","onSeriesSelection","displayChip","useTheme","MenuProps","PaperProps","style","maxHeight","customAlternateBackground","anchorOrigin","vertical","horizontal","transformOrigin","getContentAnchorEl","setItems","selectAll","setSelectAll","useEffect","every","item","selected","handleChange","target","value","includes","updatedItems","newDataColumns","selectedItems","filter","label","some","selectedItem","handleItemToggle","existingItem","Stack","direction","alignItems","FormControl","borderRadius","concat","shape","Select","labelId","multiple","renderValue","VisibilityIcon","renderedLabel","MenuItem","disabled","Checkbox","checked","onClick","p","transform","Radio","borderTop","borderColor","bottom","zIndex","justifyContent","Switch","Grid","container","display","Chip","onDelete","ChartControlType","CategoryFilter","stackDirection","DateRangeFilter","ChartRangeFilter","NumberRangeFilter","getDateRangeForCalendarChart","dateStrings","min","reduce","current","max","getValueRangeForCalendarChart","values","generateRandomID","random","toString","substr","hideAnnotations","stem","textStyle","opacity","boxStyle","returnResponsiveFontSizeInPixels","isPortrait","isSmaller","returnGenericOptions","_chartData$subcharts","_chartData$options","_chartData$options2","_chartData$options3","_chartData$options3$c","_chartData$options3$c2","_chartData$options4","_chartData$options4$c","_chartData$options4$c2","_chartData$options5","_chartData$options5$c","_chartData$options5$c2","_chartData$options6","_chartData$options6$c","_chartData$options6$c2","_chartData$options7","_chartData$options7$w","_chartData$options8","_chartData$options8$w","_chartData$options$le","_chartData$options9","_chartData$options9$l","_options$vAxis$format","_options$vAxis","_options$vAxis$title","_options$vAxis2","_options$vAxis$viewWi","_options$vAxis3","_options$vAxis3$viewW","_options$vAxis$viewWi2","_options$vAxis4","_options$vAxis4$viewW","_options$hAxis$title","_options$hAxis","_options$vAxis5","_options$vAxis6","_options$vAxis6$gridl","_options$hAxis2","_options$hAxis3","_options$hAxis3$gridl","_options$hAxis4","_options$hAxis5","_options$hAxis5$gridl","_options$annotations","subchartIndex","isHomepage","axisTitleTextStyle","italic","bold","chart","axisTitle","axisTextStyle","axisText","subcharts","curveType","crosshair","orientation","trigger","fill","tooltip","isHtml","showColorCode","alignment","scrollArrows","activeColor","inactiveColor","pagingTextStyle","vAxis","format","viewWindow","slantedText","slantedTextAngle","optionsColors","series","Object","forEach","_serie","serie","trendlines","_item","colorAxis","colorAxisFirstColor","multiColor","colorIndex","NYUpurple","aqiColorAxis","titleTextStyle","gridlines","minorGridlines","count","annotations","highContrast","contrastText","thickness","rx","ry","annotationBoxFill","fillOpacity","seriesSelector","pointSize","textPosition","viewWindowMode","returnCalendarChartOptions","existingOptions","calendarDimensions","calculateCalendarDimensions","cellSizeMin","cellSizeMax","chartWidth","calendar","cellSize","yearLabel","yearLabelFontSize","noDataPattern","returnChartControlUI","_chartControl$options","chartControl","mainChartData","mainChartOptions","chartControlUI","ui","snapToData","controlType","chartView","columns","chartOptions","window","innerWidth","addTouchEventListenerForChartControl","_ref4","controlWrapper","chartID","touchHandler","first","changedTouches","type","simulatedEvent","MouseEvent","bubbles","cancelable","view","detail","screenX","screenY","clientX","clientY","button","relatedTarget","dispatchEvent","preventDefault","isMounted","controlDOM","document","querySelector","touchEvent","addEventListener","capture","removeEventListener","maxWidth","padding","mozBoxShadow","webkitBoxShadow","secondaryRGB","margin","verticalAlign","paper","paddingTop","paddingBottom","paddingRight","borderWidth","top","left","right","stroke","strokeWidth","cursor","yearSpacing","getCalendarChartMargin","CalendarChart","_options$colorAxis","_options$colorAxis2","_options$colorAxis3","_options$colorAxis4","_options$legend","_options$colorAxis6","_options$colorAxis7","data","dateRange","valueRange","calendarChartMargin","inFirstTwoRowsOfChart","dateStr","date","Date","dayOfWeek","getDay","isFirstTwoDaysOfWeek","firstYear","getFullYear","isInFirstYear","isGradient","generateColorGradient","showLegend","_options$colorAxis5","GradientBox","ResponsiveCalendar","from","to","emptyColor","mode","axis","line","grid","minValue","maxValue","monthBorderColor","monthBorderWidth","daySpacing","dayBorderWidth","day","tooltipData","find","tooltipText","DOMParser","parseFromString","body","innerHTML","CustomTooltip","tooltipBoxRef","useRef","parentDiv","parentElement","ref","className","mr","gradient","array","join","containerStyle","gradientStyle","labelStyle","startColor","endColor","steps","hexToRgb","hex","m","r","g","b","result","exec","parseInt","rgbToHex","x","interpolateColor","color1","color2","factor","slice","round","startRGB","endRGB","colorArray","interpolatedColor","hourly","daily","returnCustomStaticRanges","today","minDateOfDataset","aggregationType","hourlyReturn","range","startDate","startOfDay","addDays","endDate","endOfDay","dailyReturn","AggregationType","StyledDateRangePicker","Paper","showPickerPanel","smallScreen","action","borderRight","visibility","customBackground","borderTopRightRadius","borderBottomRightRadius","borderTopLeftRadius","borderBottomLeftRadius","overflowY","AggregationTypeToggle","setAggregationType","ToggleButtonGroup","exclusive","newType","ToggleButton","textTransform","px","py","InvalidRangeMessages","displayErrorMessage","invalidRangeMessage","Alert","severity","currentSchoolID","setChartData","DashboardContext","setInvalidRangeMessage","useMediaQuery","selectedRange","setSelectedRange","key","chartUrl","setChartUrl","setShowPickerPanel","paperRef","isFetchingData","setIsFetchingData","handleClickOutside","contains","checkValidRange","isSameDay","diff","differenceInDays","elevation","DateRangePicker","ranges","selection","staticRanges","createStaticRanges","inputRanges","rangeColors","minDate","maxDate","months","showMonthAndYearPickers","fixedHeight","preventSnapRefocus","calendarFocus","startDatePlaceholder","endDatePlaceholder","editableDateInputs","showMonthArrow","Button","stopPropagation","newUrl","getApiUrl","endpoint","EndPoints","historicalAQI","school_id","fetchDataFromURL","url","extension","needsAuthorization","then","charts","catch","error","console","log","CircularProgress","disableShrink","SubChart","windowSize","customClassName","google","GoogleContext","dataTable","setDataTable","chartWrapper","setChartWrapper","dashboardWrapper","setDashboardWrapper","setControlWrapper","previousChartData","setPreviousChartData","isFirstRender","setIsFirstRender","allInitialColumns","setAllInitialColumns","dataColumns","setDataColumns","initialVAxisRange","setInitialVAxisRage","__","chartTotalHeight","setChartTotalHeight","useMemo","opts","calendarData","setCalendarData","calendarHeight","setCalendarHeight","containerWidth","setContainerWidth","startYear","numberOfYear","yearHeight","totalHeight","GoogleChartStyleWrapper","minHeight","LoadingAnimation","chartControlOptions","hasChartControl","control","dateRangePicker","handleSeriesSelection","setOptions","draw","method","setInitialColumnsColors","col","_options$series2","seriesIndex","serieAttribute","getInitialVAxisRange","vAxisMin","vAxisMax","getColumnRange","sourceColumn","isNaN","_allInitialColumns","_chartWrapper","hiddenSeriesObject","visibleInLegend","newViewColumns","dataColumn","indexIn_","role","setView","newOptions","selectedSeriesCount","JSON","stringify","thisDataTable","visualization","arrayToDataTable","reconstructedColumns","evaluatedColumns","column","calc","calcFunction","Function","reconstructFunctionFromJSONstring","thisChartWrapper","ChartWrapper","containerId","thisDashboardWrapper","Dashboard","getElementById","events","addListener","onChartReady","thisControlWrapper","ControlWrapper","bind","initAllInitialColumns","initDataColumns","initialView","getView","viewFromDataTable","DataView","shouldAssignDomainRoleToFistColumn","dataSeriesIndex","getColumnLabel","indexInAllInitialColumns","defaultSeriesToDisplayInitially","_options$series","_options$series$col$s","getInitialColumns","gap","CustomDateRangePicker","renderChart","_ChartControlType$cha","wordLimit","reference","setIsExpanded","isMobile","subtitleRef","words","split","displayText","lastFullStop","lastIndexOf","ClickAwayListener","onClickAway","subtitleParent","closest","chartElements","Set","has","tagName","parentNode","isClickWithinSharedParent","ml","ChartStyleWrapper","overflowX","scrollbarGutter","StyledTabs","Tabs","generalChartSubtitle","generalChartReference","passedChartData","passedChartHeight","isSmallWidth","setIsPortrait","matchMedia","matches","setWindowSize","innerHeight","chartMaxHeight","currentTab","setCurrentTab","timeoutID","handleWindowResize","clearTimeout","setTimeout","newValue","Tab","subchartTitle","WebkitOverflowScrolling","pointerEvents","my","mb","CollapsibleSubtitle","getSubtitles","_chartData$subcharts$","subchartSubtitle","getReferences","_chartData$subcharts$2"],"sourceRoot":""}