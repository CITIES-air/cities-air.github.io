{"version":3,"file":"static/js/429.149ceed7.chunk.js","mappings":"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","sources":["Components/AirQuality/AQIexplanation.jsx","Components/AirQuality/AirQualityIndexTable.jsx","Components/ExpandableSection.jsx","Graphs/Subchart/SubchartUtils/SeriesSelector.jsx","Graphs/GoogleChartHelper.jsx","Graphs/Subchart/SubchartUtils/GoogleChartStyleWrapper.jsx","Graphs/Subchart/NivoCharts/NivoCalendarChart.jsx","Components/DateRangePicker/DateRangePickerUtils.jsx","Components/DateRangePicker/AggregationTypeToggle.jsx","Components/DateRangePicker/CustomDateRangePicker.jsx","Graphs/Subchart/SubChart.jsx","Components/CollapsibleSubtitle.jsx","Graphs/ChartComponentWrapper.jsx"],"sourcesContent":["import { useContext } from 'react';\nimport { Typography } from '@mui/material';\nimport parse from 'html-react-parser';\nimport { replacePlainHTMLWithMuiComponents } from '../../Utils/Utils';\nimport AirQualityIndexTable from './AirQualityIndexTable';\nimport ExpandableSection from '../ExpandableSection';\nimport { PreferenceContext } from '../../ContextProviders/PreferenceContext';\n\nconst Explanation = {\n  title: \"Explanation of the US Air Quality Index (AQI) for PM2.5\",\n  subtitle: \"CITIESair uses the <a href='https://www.airnow.gov/aqi/aqi-basics/'>Air Quality Index (AQI)</a> developed by the United States Environmental Protection Agency (EPA) to effectively communicate different levels of PM2.5 air pollution. To calculate the AQI from the raw measurement of PM2.5 concentration (µg/m³), different breakpoints and piecewise linear function are utilized (read more <a href='https://en.wikipedia.org/wiki/Air_quality_index#United_States'>here</a>). Higher AQI values correspond to poorer air quality and greater heath risks to humans.<br><br>The US EPA sets thresholds for PM2.5 concentration, recently updated in February 2024: <sup>[1]</sup><ul><li><b>Annual average</b>: 9.0 µg/m³, corresponding to US AQI <b>50</b></li><li><b>24-hour average</b>: 35.0 µg/m³, corresponding to US AQI <b>100</b></li></ul>In 2021, the World's Heath Organization (WHO) proposed a new guideline for PM2.5<sup>[2]</sup> with stricter thresholds than those of the US EPA:<ul><li><b>Annual average</b>: 5.0 µg/m³, corresponding to US AQI <b>21</b></li><li><b>24-hour average</b>: 15.0 µg/m³, corresponding to US AQI <b>56</b></li></ul>\",\n  reference: \"[1] \\\"National Ambient Air Quality Standards (NAAQS) for PM.\\\" EPA, Environmental Protection Agency, https://www.epa.gov/pm-pollution/national-ambient-air-quality-standards-naaqs-pm.<br>[2] World Health Organization. \\\"WHO global air quality guidelines: particulate matter (PM2. 5 and PM10), ozone, nitrogen dioxide, sulfur dioxide and carbon monoxide: executive summary.\\\" (2021).\",\n}\n\nconst AQIexplanation = () => {\n  const { themePreference } = useContext(PreferenceContext);\n\n  return (\n    <ExpandableSection\n      title={Explanation.title}\n      content={(\n        <>\n          <AirQualityIndexTable themePreference={themePreference} />\n          <Typography\n            component=\"div\"\n            variant=\"body1\"\n            color=\"text.secondary\"\n            sx={{ mt: 2 }}\n          >\n            {parse(Explanation.subtitle, {\n              replace: replacePlainHTMLWithMuiComponents,\n            })}\n          </Typography>\n          <ExpandableSection\n            title={\"Reference\"}\n            content={(\n              <Typography variant=\"caption\" color=\"text.secondary\">\n                {parse(Explanation.reference, {\n                  replace: replacePlainHTMLWithMuiComponents,\n                })}\n              </Typography>\n            )}\n          />\n        </>\n      )}\n    />\n  )\n};\n\nexport default AQIexplanation;","import { Box, Table, TableBody, TableCell, TableHead, TableRow, styled } from '@mui/material';\nimport parse from 'html-react-parser';\nimport { replacePlainHTMLWithMuiComponents } from '../../Utils/Utils';\nimport ChartComponentWrapper from '../../Graphs/ChartComponentWrapper';\nimport AQIdatabase from '../../Utils/AirQuality/AirQualityIndexHelper';\nimport ThemePreferences from '../../Themes/ThemePreferences';\nimport { useContext } from 'react';\nimport { PreferenceContext } from '../../ContextProviders/PreferenceContext';\n\nexport const StyledTable = styled(Table)(({ theme, isTiny }) => ({\n  minWidth: isTiny || 700,\n  '& th, td': {\n    fontSize: isTiny ? '0.625rem' : '0.6875rem',\n    color: theme.palette.text.secondary,\n    [theme.breakpoints.down('sm')]: {\n      fontSize: isTiny ? '0.5rem' : '0.6875rem',\n    },\n  },\n  '& th': {\n    fontWeight: 500,\n    color: theme.palette.text.primary,\n    lineHeight: '1rem'\n  }\n}));\n\nfunction AirQualityIndexTable(props) {\n  const { themePreference } = useContext(PreferenceContext);\n\n  const { isTiny, hideAQIDescription } = props;\n\n  const renderAQIchart = ({ shouldRender }) => {\n    let aqiChart = null;\n    let ticks = [];\n    const maxValToRender = 400;\n\n    if (shouldRender) {\n      const dataArray = [['category'], ['US AQI']];\n      for (let i = 0; i < AQIdatabase.length; i += 1) {\n        dataArray[0].push(AQIdatabase[i].category);\n        let high = AQIdatabase[i].aqiUS.high;\n        let low = AQIdatabase[i].aqiUS.low;\n\n        if (high === Infinity) high = maxValToRender;\n\n        dataArray[1].push(\n          Math.ceil((high - AQIdatabase[i].aqiUS.low) / 50) * 50\n        );\n\n        if (high === maxValToRender) low = { v: low, f: `${low}+` }\n        ticks.push(low);\n      }\n\n      aqiChart = (\n        <ChartComponentWrapper\n          chartHeight=\"4rem\"\n          chartData={\n            {\n              dataArray,\n              chartType: 'BarChart',\n              options: {\n                enableInteractivity: false,\n                legend: { position: 'none' },\n                hAxis: {\n                  ticks: ticks\n                },\n                chartArea:\n                {\n                  width: { portrait: '98%', landscape: '50%' },\n                  height: { portrait: '20%', landscape: '30%' }\n                },\n                isStacked: true,\n                colors: 'aqi',\n                bar: { groupWidth: '100%' }\n              }\n            }\n          }\n        />\n      );\n    }\n\n    return aqiChart;\n  };\n\n  const returnFormattedBreakpoints = (low, high) => {\n    if (high === Infinity) return `${low}+`;\n    else return `${low} - ${high}`;\n  }\n\n  return (\n    <>\n      <Box overflow=\"auto\">\n        <StyledTable size=\"small\" isTiny={isTiny}>\n          <TableHead>\n            <TableRow>\n              <TableCell sx={{ pr: 0 }}>\n                <Box sx={{ width: '1em', height: '1em' }} />\n              </TableCell>\n              <TableCell sx={{ pl: 1 }}>\n                Category\n              </TableCell>\n              <TableCell align=\"right\">US AQI</TableCell>\n              <TableCell align=\"right\">\n                PM2.5 Concentration\n                (µg/m\n                <sup>3</sup>\n                )\n              </TableCell>\n              {!hideAQIDescription && <TableCell align=\"left\">Description</TableCell>}\n              {!hideAQIDescription && <TableCell align=\"left\">CITIESair&apos; Suggested Actions</TableCell>}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {AQIdatabase.map((element, index) => (\n              <TableRow\n                key={index}\n                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n              >\n                <TableCell sx={{ pr: 0 }}>\n                  <Box sx={{ width: '1em', height: '1em', backgroundColor: themePreference === ThemePreferences.light ? element.lightThemeColor : element.darkThemeColor }} />\n                </TableCell>\n                <TableCell sx={{ pl: 1 }}>\n                  {element.category}\n                </TableCell>\n                <TableCell align=\"right\">\n                  {returnFormattedBreakpoints(element.aqiUS.low, element.aqiUS.high)}\n                </TableCell>\n                <TableCell align=\"right\">\n                  {returnFormattedBreakpoints(element.rawPM2_5.low, element.rawPM2_5.high)}\n                </TableCell>\n                {!hideAQIDescription && <TableCell align=\"left\">{element.description}</TableCell>}\n                {!hideAQIDescription\n                  && (\n                    <TableCell align=\"left\">\n                      {\n                        parse(element.healthSuggestions.outdoors, {\n                          replace: replacePlainHTMLWithMuiComponents,\n                        })\n                      }\n                    </TableCell>\n                  )}\n              </TableRow>\n            ))}\n          </TableBody>\n        </StyledTable>\n      </Box>\n      {renderAQIchart({ shouldRender: !hideAQIDescription })}\n    </>\n  );\n}\n\nexport default AirQualityIndexTable;\n","// disable eslint for this file\n/* eslint-disable */\nimport { useState } from 'react';\nimport { styled } from '@mui/material/styles';\n\nimport MuiAccordion from '@mui/material/Accordion';\nimport MuiAccordionSummary from '@mui/material/AccordionSummary';\nimport MuiAccordionDetails from '@mui/material/AccordionDetails';\nimport { Box, Typography, Tooltip } from '@mui/material';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport InfoIcon from '@mui/icons-material/Info';\nimport * as Tracking from '../Utils/Tracking';\n\nconst StyledAccordion = styled(MuiAccordion)(({ theme, expanded }) => ({\n  color: theme.palette.text.secondary,\n  backgroundImage: 'none',\n  backgroundColor: expanded ? theme.palette.background.default : 'transparent',\n  boxShadow: expanded ? theme.shadows : 'none',\n  transition: 'none',\n}));\n\nconst StyledAccordionSummary = styled(MuiAccordionSummary)(({ theme, expanded }) => ({\n  marginTop: expanded ? theme.spacing(2) : 0,\n  flexDirection: 'row-reverse',\n  paddingLeft: expanded ? theme.spacing(1) : 0,\n  '& .MuiTypography-root': {\n    color: theme.palette.text.primary,\n    textDecoration: 'underline',\n    transition: 'none',\n    '&:hover': {\n      color: theme.palette.primary.main,\n    },\n  },\n  '& .MuiAccordionSummary-content.Mui-expanded': {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2)\n  }\n}));\n\nconst TooltipText = {\n  expand: \"Click to expand section\",\n  collapse: \"Click to collapse section\"\n}\n\nconst ExpandableSection = ({ title, content }) => {\n  const [expanded, setExpanded] = useState(undefined);\n\n  const handleAccordionChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : undefined);\n    Tracking.sendEventAnalytics(\n      isExpanded ? Tracking.Events.expandSection : Tracking.Events.collapseSection,\n      {\n        section: title\n      }\n    );\n  };\n\n  return (\n    <Box>\n      <StyledAccordion\n        expanded={expanded === \"panel1\"}\n        onChange={handleAccordionChange(\"panel1\")}\n        transitionDuration={0}\n      >\n        <StyledAccordionSummary expanded={expanded} expandIcon={<ArrowDropDownIcon />} aria-controls=\"panel1a-content\" id=\"panel1a-header\">\n          <Tooltip title={expanded ? TooltipText.collapse : TooltipText.expand} enterDelay={0} leaveDelay={200}>\n            <Typography component=\"a\" variant=\"body1\">\n              {title}\n              <InfoIcon sx={{ fontSize: \"1rem\", marginLeft: \"0.25rem\" }} />\n            </Typography>\n          </Tooltip>\n        </StyledAccordionSummary>\n        <MuiAccordionDetails>\n          {content}\n        </MuiAccordionDetails>\n      </StyledAccordion>\n    </Box>\n  );\n}\n\nexport default ExpandableSection;","/* eslint-disable */\nimport { useState, useEffect } from 'react';\nimport { Stack, Grid, MenuItem, FormControl, Select, Chip, Radio, Checkbox, Typography, Switch } from \"@mui/material\";\nimport { useTheme } from '@mui/material/styles';\n\nimport VisibilityIcon from '@mui/icons-material/Visibility';\n\nconst SELECT_ALL = 'Display All Series';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\n\nexport default function SeriesSelector(props) {\n  const { items: itemsFromChart,\n    selectorID,\n    allowMultiple,\n    seriesLabel,\n    onSeriesSelection,\n    displayChip = true\n  } = props;\n\n  const theme = useTheme();\n\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 5.55 + ITEM_PADDING_TOP,\n        overflow: 'visible !important',\n        background: theme.palette.customAlternateBackground\n      }\n    },\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"left\"\n    },\n    transformOrigin: {\n      vertical: \"top\",\n      horizontal: \"left\"\n    },\n    getContentAnchorEl: null\n  };\n\n  const [items, setItems] = useState(itemsFromChart);\n  const [selectAll, setSelectAll] = useState(allowMultiple); // default: all is selected if multiSelect is true\n\n  useEffect(() => {\n    setItems(itemsFromChart);\n  }, [itemsFromChart]);\n\n  useEffect(() => {\n    setSelectAll(items.every(item => item.selected)); // set selectAll if all items are selected\n  }, [items]);\n\n  const handleChange = (event) => {\n    // Get the array of the currently selected value(s)\n    const {\n      target: { value }\n    } = event;\n\n    // If the current selection has SELECT_ALL\n    // Behavior:\n    // - If SELECT_ALL is being selected now, then set all items to selected\n    // - IF SELECT_ALL is being de-selected now, then set all items but the first one to be unselected \n    // (to make sure there's always at least 1 item being selected)\n    if (value.includes(SELECT_ALL)) {\n      const updatedItems = items.map((item, index) => ({ ...item, selected: index == 0 ? true : !selectAll }));\n      onSeriesSelection({ newDataColumns: updatedItems });\n      setSelectAll(!selectAll);\n    }\n    // Else, if an ordinary item is selected/de-selected:\n    else {\n      const selectedItems = items.filter(item => value.includes(item.label));\n      const updatedItems = items.map(item => ({\n        ...item,\n        selected: selectedItems.some(selectedItem => selectedItem.label === item.label)\n      }));\n      onSeriesSelection({ newDataColumns: updatedItems });\n      setSelectAll(false);\n    }\n  };\n\n  const handleItemToggle = (item) => {\n    const updatedItems = items.map(existingItem =>\n      existingItem.label === item.label ? { ...existingItem, selected: !existingItem.selected } : existingItem\n    );\n    onSeriesSelection({ newDataColumns: updatedItems });\n  };\n\n  const renderedLabel = (selected) => {\n    const returnNumSeriesDisplayed = () => {\n      return `${selected.length}/${items.length} ${seriesLabel || \"\"} displayed`;\n    };\n\n    return (\n      <Stack direction=\"row\" alignItems=\"center\" spacing={0.5}>\n        <VisibilityIcon fontSize=\"1.5rem\" sx={{ color: theme.palette.text.secondary }} />\n        <Typography variant=\"caption\" color=\"text.secondary\">\n          {/* show # of series selected if multiSelect. show cur selected serie if singleSelect */}\n          {allowMultiple ? returnNumSeriesDisplayed() : selected}\n        </Typography>\n      </Stack>\n    );\n  };\n\n  return (\n    <Stack spacing={1} direction=\"row\" alignItems=\"center\">\n      <FormControl\n        sx={{\n          [theme.breakpoints.down('sm')]: { width: '100%' },\n          minWidth: '200px',\n          '& .MuiInputBase-root': { borderRadius: `${theme.shape.borderRadius}px` }\n        }}\n        size=\"small\"\n      >\n        <Select\n          labelId={`${selectorID}-label`}\n          id={selectorID}\n          multiple={allowMultiple}\n          value={items.filter(item => item.selected).map(item => item.label)}\n          onChange={handleChange}\n          MenuProps={MenuProps}\n          renderValue={(selected) => renderedLabel(selected)}\n          sx={{ fontSize: '0.75em' }}\n        >\n          {/* Display all available items, together with checkbox for each item to select from */}\n          {items.map((item) => (\n            <MenuItem\n              disabled={\n                // If there is only 1 selected item and this is the selected item\n                // Then, prevent user from de-select this item too\n                // To ensure at least there is 1 selected item at all times\n                (items.filter(item => item.selected).length === 1 && item.selected) ? true : false\n              }\n              key={item.label}\n              value={item.label}\n              sx={{\n                backgroundColor: 'unset !important',\n                \"&:hover\": {\n                  backgroundColor: 'inherit !important',\n                }\n              }}\n            >\n              { /* checkboxes for MultiSelect, radioButtons for singleSelect*/}\n              {allowMultiple ? <Checkbox\n                checked={item.selected}\n                onClick={() => handleItemToggle(item)}\n\n                sx={{ p: 0.25, transform: 'scale(0.8)' }} />\n                : <Radio\n                  checked={item.selected}\n                  onChange={() => handleChange(item)}\n\n                  sx={{ p: 0.25, transform: 'scale(0.8)' }} />\n              }\n              <Typography variant='caption'>{item.label}</Typography>\n            </MenuItem>\n          ))}\n\n          {/* Show the option to select all if multiSelect is true*/}\n          {allowMultiple && <MenuItem key={SELECT_ALL} value={SELECT_ALL} sx={{\n            borderTop: 'solid 0.5px', borderColor: theme.palette.text.secondary,\n            position: 'sticky', bottom: 0, zIndex: 99999, marginBottom: theme.spacing(-1),\n            background: theme.palette.customAlternateBackground,\n            \"&:hover\": {\n              background: theme.palette.customAlternateBackground\n            }\n          }}>\n            <Stack direction='row' width='100%' alignItems='center' justifyContent='space-between'>\n              <Typography fontWeight={500} variant='caption' sx={{ pl: 1 }}>{SELECT_ALL}</Typography>\n              <Switch\n                checked={selectAll}\n                onClick={() => handleItemToggle(SELECT_ALL)}\n                sx={{ transform: 'scale(0.8)' }}\n              />\n            </Stack>\n          </MenuItem>\n          }\n        </Select>\n      </FormControl>\n\n      {/* Display only selected items in the Grids, and only in landscape mode and if multiSelect is true*/}\n      {(displayChip && allowMultiple) && <Grid container spacing={1}\n        sx={{\n          [theme.breakpoints.down('sm')]: {\n            display: 'none'\n          },\n        }}\n      >\n        {items.filter(item => item.selected).map((item) => (\n          <Grid item key={item.label}>\n            <Chip\n              label={<Typography variant='caption'>{item.label}</Typography>}\n              size=\"small\"\n              {...(items.filter(item => item.selected).length !== 1 && { onDelete: () => handleItemToggle(item) })}\n            />\n          </Grid>\n        ))}\n      </Grid>}\n\n\n    </Stack>\n  );\n}\n","/* eslint-disable */\n\nexport const ChartControlType = {\n  CategoryFilter: { position: 'top', stackDirection: 'column' },\n  DateRangeFilter: { position: 'bottom', stackDirection: 'column-reverse' },\n  ChartRangeFilter: { position: 'bottom', stackDirection: 'column-reverse' },\n  NumberRangeFilter: { position: 'top', stackDirection: 'column' }\n}\n// Async function to fetch data from sheet using Google Visualization query language\nexport const fetchDataFromSheet = ({ chartData, subchartIndex }) => {\n  const urlParams =\n    subchartIndex == null\n      ? {\n        headers: chartData.headers || 1,\n        query: chartData.query,\n        gid: chartData.gid,\n      }\n      : {\n        headers:\n          chartData.headers\n          || chartData.subcharts[subchartIndex].headers\n          || null,\n        query:\n          chartData.query\n          || chartData.subcharts[subchartIndex].query\n          || null,\n        gid:\n          chartData.gid\n          || chartData.subcharts[subchartIndex].gid\n          || null,\n      };\n\n  const url = `https://docs.google.com/spreadsheets/d/${chartData.sheetId}/gviz/tq?gid=${urlParams.gid}&headers=${urlParams.headers}&tqx${urlParams.query ? `&tq=${encodeURIComponent(urlParams.query)}` : ''}`;\n  const query = new google.visualization.Query(url);\n\n  return new Promise((resolve, reject) => {\n    query.send(response => {\n      if (response.isError()) {\n        reject(response.getMessage() + ' ' + response.getDetailedMessage());\n      } else {\n        resolve(response);\n      }\n    });\n  });\n};\n\nexport const transformDataForNivo = (dataTable, dataColumn, tooltipColumn) => {\n  const data = JSON.parse(dataTable.toJSON())\n  const transformed = [];\n\n  const parseDate = (dateString) => {\n    const date = new Date(dateString);\n    const year = date.getFullYear();\n    const month = date.getMonth() + 1;\n    const day = date.getDate();\n    const formattedDate = `${year}-${month < 10 ? '0' + month : month}-${day < 10 ? '0' + day : day}`;\n    return formattedDate;\n  }\n\n  data.rows.forEach(row => {\n    // Get the date string from the first column \n    const dateString = row.c[0].f;\n    // Parse and convert the date string to a 'YYYY-MM-DD' format\n    const formattedDate = parseDate(dateString);\n    // Get the data from the appropriate column\n    const value = row.c[dataColumn]?.v;\n    // Get the tooltip from the appropriate column\n    const tooltip = row.c[tooltipColumn]?.v;\n\n    // If the date string and value are both valid, push them into the result array\n    if (dateString && value !== undefined && value !== null) {\n      transformed.push({\n        day: formattedDate,\n        value: value,\n        tooltip: tooltip\n      });\n    }\n  });\n\n  // Get dateRange (from - to)\n  const dateStrings = transformed.map(item => item.day);\n  const dateRange = getDateRangeForCalendarChart(dateStrings);\n\n  // Get valueRange (min - max)\n  const values = transformed.map(item => item.value);\n  const valueRange = getValueRangeForCalendarChart(values);\n\n  return {\n    data: transformed,\n    dateRange: dateRange,\n    valueRange: valueRange\n  };\n};\nexport const getDateRangeForCalendarChart = (dateStrings) => {\n  return {\n    min: dateStrings.reduce((min, current) => (current < min ? current : min)),\n    max: dateStrings.reduce((max, current) => (current > max ? current : max))\n  }\n}\nexport const getValueRangeForCalendarChart = (values) => {\n  return { min: Math.min(...values), max: Math.max(...values) }\n}\n\n// Function to generate a random ID for the google chart container\nexport const generateRandomID = () => {\n  return Math.random().toString(36).substr(2, 9); // Generates a random string of length 9\n}\n\n// -------- Chart options --------\n\nconst hideAnnotations = {\n  stem: {\n    length: 0,\n  },\n  textStyle: {\n    opacity: 0,\n  },\n  boxStyle: null,\n};\n\nconst returnResponsiveFontSizeInPixels = ({ isPortrait, isSmaller }) => {\n  return (\n    isSmaller ? (isPortrait ? 6 : 8) : (isPortrait ? 8 : 10)\n  );\n}\n\nexport const returnGenericOptions = (props) => {\n  const { chartData, subchartIndex, isPortrait, isHomepage, theme } = props;\n\n  // Define some shared styling rules for the chart\n  const axisTitleTextStyle = {\n    italic: false,\n    bold: true,\n    color: theme.palette.chart.axisTitle,\n    fontSize: returnResponsiveFontSizeInPixels({ isPortrait })\n  };\n  const axisTextStyle = {\n    color: theme.palette.chart.axisText,\n    fontSize: returnResponsiveFontSizeInPixels({ isPortrait })\n  };\n\n  // ---- Formulate the options for this specific chart:\n  // 1. Populate first with subchart's options (if any)\n  let options = chartData.subcharts?.[subchartIndex].options\n    ? { ...chartData.subcharts[subchartIndex].options }\n    : {};\n\n  // 2. Append own chart's options and then populate with universal options for all charts\n  options = {\n    ...options,\n    ...chartData.options,\n    theme: 'material',\n    curveType: options.curveType || chartData.options?.curveType || 'function',\n    crosshair: { orientation: 'both', trigger: 'focus', opacity: 0.5 },\n    backgroundColor: { fill: 'transparent' },\n    chartArea: {\n      ...chartData.options?.chartArea,\n      width: isPortrait ? (chartData.options?.chartArea?.width?.portrait || '80%') : (chartData.options?.chartArea?.width?.landscape || '75%'),\n      height: isPortrait ? (chartData.options?.chartArea?.height?.portrait || '60%') : (chartData.options?.chartArea?.height?.landscape || '70%'),\n    },\n    width: isPortrait ? (chartData.options?.width?.portrait || '100%') : (chartData.options?.width?.landscape || '100%'),\n    // if there is a filter, we make space for the chartFilter from the chart's height.\n    // value is divided in 2 because the calculation is applied twice due to\n    // how react-google-charts nest components\n    height: chartData.height || '100%',\n    tooltip: {\n      isHtml: true,\n      showColorCode: false\n    },\n    legend: {\n      alignment: isPortrait ? 'center' : 'start',\n      position:\n        chartData.options?.legend?.position\n        ?? (isPortrait ? 'top' : 'right'),\n      scrollArrows: {\n        activeColor: theme.palette.chart.axisTitle,\n        inactiveColor: theme.palette.text.secondary,\n      },\n      pagingTextStyle: {\n        fontSize: 10,\n        color: theme.palette.chart.axisTitle,\n        bold: true,\n      }\n    }\n  };\n\n  // 3. Append to vAxis and hAxis properties\n  options.vAxis = {\n    ...options.vAxis,\n    format: options.vAxis?.format ?? 'decimal',\n    title: options.vAxis?.title ?? '',\n    viewWindow: {\n      min: options.vAxis?.viewWindow?.min ?? 0,\n      max: options.vAxis?.viewWindow?.max ?? null,\n      max: options.vAxis?.viewWindow?.max ?? null,\n    },\n  };\n  options.hAxis = {\n    ...options.hAxis,\n    title: options.hAxis?.title ?? '',\n  };\n  // 3.1. If in portrait mode, slant the text of the hAxis\n  if (isPortrait) {\n    options.hAxis = {\n      ...options.hAxis,\n      slantedText: true,\n      slantedTextAngle: 30,\n    };\n  }\n\n  // 4. Override with custom colors:\n  // 4.1. Color scheme of all the series of this chart\n  if (typeof options.colors === 'string' || !options.colors) options.colors = theme.palette.chart.optionsColors[options.colors || 'multiColor'];\n  // 4.2. Individual color of a single serie (if given)\n  if (options.series) {\n    Object.values(options.series).forEach((_serie) => {\n      const serie = _serie;\n      if (serie.color === 'default') {\n        serie.color = theme.palette.primary.main;\n      }\n    });\n  }\n  // 4.3. Color of the trendline\n  if (options.trendlines) {\n    options.trendlines.forEach((_item) => {\n      const item = _item;\n      item.color = theme.palette.primary.main;\n    });\n  }\n  // 4.4. Color axis of the Calendar chart\n  if (options.colorAxis) {\n    switch (options.colorAxis.colors) {\n      case 'matchingColor':\n        options.colorAxis.colors = [\n          theme.palette.chart.colorAxisFirstColor,\n          theme.palette.chart.optionsColors.multiColor[options.colorAxis.colorIndex],\n        ];\n        break;\n      case 'default':\n        options.colorAxis.colors = [\n          theme.palette.chart.colorAxisFirstColor,\n          theme.palette.NYUpurple,\n        ];\n        break;\n      case 'aqi':\n        options.colorAxis = theme.palette.chart.aqiColorAxis;\n        break;\n      case 'temperature':\n        options.colorAxis = theme.palette.chart.temperatureColorAxis;\n        break;\n      case 'humidity':\n        options.colorAxis = theme.palette.chart.humidityColorAxis;\n        break;\n      default:\n        break;\n    }\n  }\n  // 4.5. Colors of other elements of the chart (typographies and gridlines)\n  options.vAxis = {\n    ...options.vAxis,\n    titleTextStyle: axisTitleTextStyle,\n    textStyle: axisTextStyle,\n    gridlines: {\n      ...options.vAxis?.gridlines,\n      color: options.vAxis?.gridlines?.color || theme.palette.chart.gridlines\n    },\n    minorGridlines: { count: 0 },\n  };\n  options.hAxis = {\n    ...options.hAxis,\n    titleTextStyle: axisTitleTextStyle,\n    textStyle: axisTextStyle,\n    gridlines: {\n      ...options.hAxis?.gridlines,\n      color: options.hAxis?.gridlines?.color || theme.palette.chart.gridlines\n    },\n    minorGridlines: {\n      ...options.hAxis?.minorGridlines,\n      color: options.hAxis?.gridlines?.color || theme.palette.chart.gridlines,\n    },\n  };\n  options.legend = {\n    ...options.legend,\n    textStyle: axisTextStyle,\n  };\n  options.annotations = {\n    ...options.annotations,\n    highContrast: true,\n    textStyle: {\n      color: theme.palette.primary.contrastText,\n      fontSize: returnResponsiveFontSizeInPixels({ isPortrait, isSmaller: true }),\n      opacity: 0.8\n    },\n    stem: {\n      ...options.annotations?.stem,\n      color: theme.palette.chart.axisTitle,\n      thickness: 2\n    },\n    boxStyle: {\n      rx: theme.shape.borderRadius, // rounded corners\n      ry: theme.shape.borderRadius,\n      fill: theme.palette.chart.annotationBoxFill,\n      fillOpacity: 0.5\n    },\n  };\n\n  // 5. If the chart is displayed on the homepage, override the options with:\n  if (isHomepage) {\n    options = {\n      ...options,\n      chartArea: {\n        ...options.chartArea,\n        width: '80%',\n        height: '80%'\n      },\n      seriesSelector: false,\n      pointSize: 0,\n      enableInteractivity: false,\n      annotations: hideAnnotations,\n      legend: 'none',\n      vAxis: {\n        ...options.vAxis,\n        textPosition: 'none',\n        titleTextStyle: {\n          ...options.vAxis.titleTextStyle,\n          bold: false\n        },\n        gridlines: { color: 'transparent', count: 0 },\n        viewWindowMode: 'maximized'\n      },\n      hAxis: {\n        ...options.hAxis,\n        textPosition: 'none',\n        gridlines: { color: 'transparent', count: 0 },\n        titleTextStyle: {\n          ...options.hAxis.titleTextStyle,\n          bold: false\n        }\n      },\n    };\n  }\n\n  return options;\n}\n\nexport const returnCalendarChartOptions = (existingOptions) => {\n  const calendarDimensions = calculateCalendarDimensions({ cellSizeMin: 14, cellSizeMax: 18 });\n  return {\n    ...existingOptions,\n    width: calendarDimensions.chartWidth,\n    calendar: {\n      cellSize: calendarDimensions.cellSize,\n      yearLabel: {\n        fontSize: calendarDimensions.yearLabelFontSize\n      }\n    },\n    noDataPattern: {\n      backgroundColor: 'none',\n      color: 'none',\n    },\n  }\n}\n\nexport const returnChartControlUI = (props) => {\n  const { chartControl, mainChartData, mainChartOptions, subchartIndex, theme, isPortrait } = props;\n  let chartControlUI = {\n    ...chartControl.options?.ui,\n    snapToData: true\n  };\n\n  // Assign the appropriate UI for chartControl based on controlType (if existed)\n  if (chartControl.controlType === 'ChartRangeFilter') {\n    chartControlUI = {\n      ...chartControlUI,\n      chartType: mainChartData.chartType,\n      chartView: {\n        columns:\n          mainChartData.columns\n          || (mainChartData.subcharts\n            && mainChartData.subcharts[subchartIndex].columns)\n          || null\n          || null,\n      },\n      chartOptions: {\n        ...mainChartOptions,\n        hAxis: {\n          ...mainChartOptions.hAxis,\n          textPosition: 'out',\n          textStyle: { color: theme.palette.chart.axisText, fontSize: returnResponsiveFontSizeInPixels({ isPortrait, isSmaller: true }) },\n          title: null\n        },\n        vAxis: {\n          ...mainChartOptions.vAxis,\n          title: null\n        },\n        annotations: hideAnnotations,\n        legend: null,\n      }\n    };\n  }\n  return chartControlUI;\n}\n\nconst calculateCalendarDimensions = ({ cellSizeMin, cellSizeMax }) => {\n  const cellSize = Math.min(Math.max((window.innerWidth * 0.9) / 58, cellSizeMin), cellSizeMax);\n  return {\n    chartWidth: cellSize * 56, // fixed ratio\n    cellSize,\n    yearLabelFontSize: cellSize * 2\n  };\n};\n\nexport const addTouchEventListenerForChartControl = ({ controlWrapper, chartID }) => {\n  const touchHandler = (event) => {\n    var touches = event.changedTouches,\n      first = touches[0],\n      type = '';\n\n    switch (event.type) {\n      case 'touchstart':\n        type = 'mousedown';\n        break;\n      case 'touchmove':\n        type = 'mousemove';\n        break;\n      case 'touchend':\n        type = 'mouseup';\n        break;\n      default:\n        return;\n    }\n\n    var simulatedEvent = new MouseEvent(type, {\n      bubbles: true,\n      cancelable: true,\n      view: window,\n      detail: 1,\n      screenX: first.screenX,\n      screenY: first.screenY,\n      clientX: first.clientX,\n      clientY: first.clientY,\n      button: 0, // left button\n      relatedTarget: null,\n    });\n\n    first.target.dispatchEvent(simulatedEvent);\n    event.preventDefault();\n  }\n\n  let isMounted = true; // Flag to track component's mount status\n  if (!controlWrapper) return;\n\n  const controlDOM = document.querySelector(`#control-${chartID}`);\n  if (!controlDOM) return;\n\n  ['touchstart', 'touchmove', 'touchend', 'touchcancel']\n    .forEach((touchEvent) => {\n      controlDOM.addEventListener(touchEvent, touchHandler, { capture: true });\n    });\n\n  return () => {\n    isMounted = false; // Component is unmounting\n\n    ['touchstart', 'touchmove', 'touchend', 'touchcancel'].forEach((touchEvent) => {\n      controlDOM.removeEventListener(touchEvent, touchHandler, { capture: true });\n    });\n  };\n}","import { Box } from '@mui/material/';\nimport { styled } from '@mui/material/styles';\n\nconst GoogleChartStyleWrapper = styled(Box)(({ theme, isPortrait }) => ({\n  // CSS for HTML tooltip\n  '& .google-visualization-tooltip, .nivo-tooltip': {\n    width: 'unset !important',\n    maxWidth: '350px',\n    height: 'unset',\n    padding: '1em',\n    boxShadow: '0px 2px 2px 0px rgba(204, 204, 204, 0.6)',\n    mozBoxShadow: '0px 2px 2px 0px rgba(204, 204, 204, 0.6)',\n    webkitBoxShadow: '0px 2px 2px 0px rgba(204, 204, 204, 0.6)',\n    border: 'solid 1px',\n    borderColor: theme.palette.text.secondaryRGB,\n    fontSize: `${isPortrait ? 9 : 12}px`,\n    color: theme.palette.chart.tooltip.text,\n    background: theme.palette.chart.tooltip.background,\n    borderRadius: theme.shape.borderRadius,\n    '& ul': {\n      margin: '0 !important',\n      '& li': {\n        margin: '0 !important',\n        padding: '0 !important',\n        '& span': {\n          fontSize: `${isPortrait ? 9 : 12}px !important`,\n          color: `${theme.palette.chart.tooltip.text} !important`,\n        }\n      }\n    }\n  },\n\n  // -------- chartControl's additional stylings\n  '& .goog-menuitem-highlight, .goog-menuitem-hover': {\n    backgroundColor: `${theme.palette.primary} !important`\n  },\n\n  // CategoryFilter\n  '& .google-visualization-controls-categoryfilter': {\n    fontSize: '0.85rem',\n    marginTop: '0.75rem',\n    marginBottom: '-0.75rem',\n\n    '& .goog-inline-block > .goog-menu-button': {\n      marginTop: 0\n    },\n\n    '& .goog-menu-button-hover .goog-menu-button-outer-box, .goog-menu-button-hover .goog-menu-button-inner-box': {\n      borderColor: 'inherit !important'\n    },\n\n    '& .google-visualization-controls-label': {\n      color: theme.palette.text.secondary,\n      fontWeight: 500,\n      verticalAlign: 'middle',\n      marginBottom: '0.25rem'\n    },\n    '& .goog-menu-button-outer-box': {\n      backgroundColor: theme.palette.background.paper,\n      border: 'unset',\n\n      '& .goog-menu-button-inner-box': {\n        paddingTop: theme.spacing(0.5),\n        paddingBottom: theme.spacing(0.5),\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(2),\n        border: 'solid',\n        borderWidth: '0.5px',\n        borderRadius: theme.shape.borderRadius,\n        borderColor: theme.palette.text.secondary,\n\n        '& .goog-menu-button-caption': {\n          color: theme.palette.text.secondary\n        }\n      }\n    }\n  },\n\n  // DateRangeFilter\n  '& .google-visualization-controls-rangefilter': {\n    width: '100%',\n    fontSize: '0.75rem',\n    '& .goog-inline-block': {\n      width: '100%',\n    },\n    '& .google-visualization-controls-slider-horizontal': {\n      width: '90%',\n      margin: '0 5%',\n    },\n    '& .google-visualization-controls-rangefilter-thumblabel:nth-of-type(1)': {\n      position: 'absolute',\n      top: '1.5em',\n      left: '5%'\n    },\n    '& .google-visualization-controls-rangefilter-thumblabel:nth-of-type(2)': {\n      position: 'absolute',\n      top: '1.5em',\n      right: '5%'\n    },\n    '& .google-visualization-controls-slider-handle': {\n      background: theme.palette.primary.main\n    },\n    '& .google-visualization-controls-rangefilter-thumblabel': {\n      color: theme.palette.text.secondary,\n      padding: 0,\n      fontWeight: 500\n    },\n    '& .google-visualization-controls-slider-thumb': {\n      background: theme.palette.primary.main,\n      border: 'unset',\n      borderRadius: theme.shape.borderRadius\n    }\n  },\n\n  // These are the paths showing on top of the line chart\n  // and the stroke around the bar/column chart\n  // when the user hovers on the legend to make the serie stand out\n  // by Google Chart's default doesn't change color based on light/dark theme, but we modify here:\n  '& path[stroke-opacity=\"0.3\"], path[stroke-opacity=\"0.1\"], path[stroke-opacity=\"0.05\"], rect[stroke-opacity]': {\n    stroke: theme.palette.text.primary,\n    strokeWidth: 3\n  },\n\n  // Cursor of series in legends\n  '& [column-id]:not(:empty)': {\n    cursor: 'pointer',\n    ':hover': {\n      fontWeight: 600\n    }\n  }\n}));\n\nexport default GoogleChartStyleWrapper;\n","/* eslint-disable */\nimport { ResponsiveCalendar } from '@nivo/calendar';\nimport { useEffect, useRef } from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport { Box, Menu, MenuItem, MenuList, Chip } from '@mui/material';\n\nimport parse from 'html-react-parser';\nimport { replacePlainHTMLWithMuiComponents } from '../../../Utils/Utils';\n\nexport const yearSpacing = 40;\n\nexport const getCalendarChartMargin = (isPortrait) => {\n    return isPortrait\n        ? { top: 20, right: 0, bottom: 0, left: 20 }\n        : { top: 30, right: 40, bottom: 0, left: 40 }\n}\n\nexport const CalendarChart = (props) => {\n    const { data, dateRange, valueRange, allowedDataTypes, isPortrait, options } = props;\n\n    // TODO: call api with new data type\n\n    // TODO: update with new data type\n    const calendarChartMargin = getCalendarChartMargin(isPortrait);\n\n    const theme = useTheme();\n\n    // Function to extract tooltip text from HTML tooltip\n    const extractTooltipText = (tooltip) => {\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(tooltip, 'text/html');\n        return doc.body.innerHTML;\n    };\n\n    // Function to check if a date is in the first two rows of the chart\n    // Used to anchor the tooltip to the bottom while hovering over\n    // the first two rows of the chart\n    const inFirstTwoRowsOfChart = (dateStr, dateRange) => {\n        const date = new Date(dateStr);\n        const dayOfWeek = date.getDay();\n\n        // Check if the date is Sunday (0) or Monday (1)\n        const isFirstTwoDaysOfWeek = dayOfWeek === 0 || dayOfWeek === 1;\n\n        // Extract the first year from the date range once\n        const firstYear = new Date(dateRange.min).getFullYear();\n\n        // Check if the date is in the first year of the date range\n        const isInFirstYear = date.getFullYear() === firstYear;\n\n        return isFirstTwoDaysOfWeek && isInFirstYear;\n    };\n\n    // Function to get color of the Calendar cells\n    const colors = options?.colorAxis?.isGradient ?\n        generateColorGradient(options?.colorAxis?.colors, 100) :\n        options?.colorAxis?.colors;\n\n    const showLegend = () => {\n        return (\n            <ValueRangeBox\n                valueRange={valueRange}\n                colorAxis={options?.colorAxis}\n                isPortrait={isPortrait}\n            />\n        )\n    }\n\n    const showDataTypesMenu = () => {\n      return <MenuList dense>\n        {allowedDataTypes.map((datatype, index) => (\n          <MenuItem\n            key={index}\n          >\n            {datatype}\n          </MenuItem>\n        ))}\n      </MenuList>\n    }\n\n    // TODO: add new dropdown for data type\n    return (\n        <>\n            {options?.legend?.position !== \"none\" && showLegend()}\n            {showDataTypesMenu()}\n            {showLegend()}\n            <ResponsiveCalendar\n                data={data}\n                from={dateRange?.min}\n                to={dateRange?.max}\n                emptyColor={'transparent'}\n                theme={{\n                    text: {\n                        fill: theme.palette.text.secondary,\n                    },\n                    fontSize: '0.75rem',\n                    tooltip: {\n                        container: {\n                            background: theme.palette.mode === 'dark' ? '#2b2b2b' : '#fff',\n                            color: theme.palette.text.primary,\n                        },\n                    },\n                    axis: {\n                        ticks: {\n                            line: {\n                                stroke: theme.palette.mode === 'dark' ? '#2b2b2b' : '#fff',\n                            },\n                            text: {\n                                fill: theme.palette.text.primary,\n                            },\n                        },\n                    },\n                    grid: {\n                        line: {\n                            stroke: theme.palette.mode === 'dark' ? '#2b2b2b' : '#fff',\n                        },\n                    },\n                }}\n                colors={colors}\n                minValue={options?.colorAxis?.minValue}\n                maxValue={options?.colorAxis?.maxValue}\n                margin={calendarChartMargin}\n                yearSpacing={yearSpacing}\n                monthBorderColor={theme.palette.text.primary}\n                monthBorderWidth={1}\n                daySpacing={0.25}\n                dayBorderWidth={0}\n                tooltip={({ day, value, color }) => {\n                    const tooltipData = data.find(item => item.day === day);\n                    const tooltipText = tooltipData ? extractTooltipText(tooltipData.tooltip) : '';\n\n                    return (\n                        <CustomTooltip\n                            day={day}\n                            color={color}\n                            tooltipText={tooltipText}\n                            dateRange={dateRange}\n                            inFirstTwoRowsOfChart={inFirstTwoRowsOfChart}\n                        />\n                    );\n                }}\n            />\n        </>\n    );\n};\n\n// Custom tooltip component for the Calendar chart\nconst CustomTooltip = ({ day, color, tooltipText, dateRange, inFirstTwoRowsOfChart }) => {\n    const tooltipBoxRef = useRef(null);\n\n    // If the cell hovered over is in the first two rows of the chart,\n    // move the tooltip to the bottom of the chart\n    // Read subsequent comments to understand why we need to do this\n    useEffect(() => {\n        if (tooltipBoxRef.current && inFirstTwoRowsOfChart(day, dateRange)) {\n            const parentDiv = tooltipBoxRef.current.parentElement;\n            if (parentDiv) {\n                parentDiv.style.top = '11vh';\n            }\n        }\n    }, [tooltipBoxRef, inFirstTwoRowsOfChart]);\n\n\n    // Note that our Box is just a container 'inside' the tooltip\n    // The tooltip itself is actually the Box's parent div\n    return (\n        <Box ref={tooltipBoxRef} className='nivo-tooltip'>\n            <Chip sx={{ backgroundColor: color, mr: 0.5, height: '10px', width: '10px', borderRadius: '50%' }} />\n            {parse(tooltipText, { replace: replacePlainHTMLWithMuiComponents })}\n        </Box>\n    );\n};\n\nconst ValueRangeBox = ({ valueRange, colorAxis, isPortrait }) => {\n    if (valueRange?.min === null || valueRange?.max === null) return null;\n\n    const { colors, isGradient, minValue, maxValue } = colorAxis;\n\n    const theme = useTheme();\n\n    // Generate gradient string or discrete colors string\n    const backgroundStyle = (() => {\n        if (isGradient) {\n            if (typeof colors[0] === 'string') {\n                // No stops provided, generate equally spaced stops\n                return `linear-gradient(to right, ${colors.map((color, index, array) => {\n                    const position = (index / (array.length - 1)) * 100;\n                    return `${color} ${position}%`;\n                }).join(', ')})`;\n            } else {\n                // Normalize the stops\n                const stops = colors.map(cs => cs.stop);\n                const minStop = Math.min(...stops);\n                const maxStop = Math.max(...stops);\n                const normalizedColors = colors.map(cs => ({\n                    color: cs.color,\n                    stop: ((cs.stop - minStop) / (maxStop - minStop)) * 100\n                }));\n                return `linear-gradient(to right, ${normalizedColors.map(cs => `${cs.color} ${cs.stop}%`).join(', ')})`;\n            }\n        } else {\n            // Discrete colors without gradient\n            return colors.map(color => color.color || color).join(', ');\n        }\n    })();\n\n    const calculatePosition = (value) => {\n        const position = ((value - minValue) / (maxValue - minValue)) * 100;\n        return `${position}%`;\n    };\n\n    const containerStyle = {\n        position: 'sticky',\n        width: 'fit-content',\n        marginTop: '1.5rem',\n        float: 'right',\n        right: (isPortrait ? '0' : '5%'),\n    };\n\n    const gradientStyle = {\n        background: isGradient ? backgroundStyle : undefined,\n        color: theme.palette.text.secondary,\n        border: `1px solid ${theme.palette.text.secondary}`,\n        width: '300px',\n        height: '1rem',\n        position: 'relative',\n        display: isGradient ? 'block' : 'flex',\n        justifyContent: 'space-between',\n    };\n\n    const discreteBoxStyle = {\n        flex: 1,\n        height: '100%',\n    };\n\n    const labelStyle = {\n        position: 'absolute',\n        top: '-1.5rem',\n        fontSize: '0.75rem',\n        transform: 'translateX(-50%)',\n        color: theme.palette.text.secondary\n    };\n\n    const triangleStyle = {\n        position: 'absolute',\n        top: '-0.5rem',\n        width: 0,\n        height: 0,\n        borderLeft: '0.25rem solid transparent',\n        borderRight: '0.25rem solid transparent',\n        borderTop: `0.25rem solid ${theme.palette.text.secondary}`,\n        transform: 'translateX(-50%)',\n    };\n\n    return (\n        <Box style={containerStyle}>\n            <Box style={gradientStyle}>\n                {isGradient ? null : colors.map((color, index) => (\n                    <Box key={index} style={{ ...discreteBoxStyle, backgroundColor: color.color || color }} />\n                ))}\n                <span style={{ ...labelStyle, left: calculatePosition(valueRange.min) }}>min: {valueRange.min}</span>\n                <span style={{ ...labelStyle, left: calculatePosition(valueRange.max) }}>max: {valueRange.max}</span>\n                <div style={{ ...triangleStyle, left: calculatePosition(valueRange.min) }}></div>\n                <div style={{ ...triangleStyle, left: calculatePosition(valueRange.max) }}></div>\n            </Box>\n        </Box>\n    );\n};\n\n// Function to return an array of STEPS discrete colors in a gradient from startColor and endColor\nconst generateColorGradient = (colors, steps) => {\n    function hexToRgb(hex) {\n        const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n        hex = hex.replace(shorthandRegex, function (m, r, g, b) {\n            return r + r + g + g + b + b;\n        });\n\n        const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n        return result ? [parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)]\n            : [null, null, null];\n    }\n\n    function rgbToHex(r, g, b) {\n        return \"#\" + [r, g, b].map(x => {\n            const hex = x.toString(16);\n            return hex.length === 1 ? '0' + hex : hex;\n        }).join('');\n    }\n\n    function interpolateColor(color1, color2, factor) {\n        let result = color1.slice();\n        for (let i = 0; i < 3; i++) {\n            result[i] = Math.round(result[i] + factor * (color2[i] - color1[i]));\n        }\n        return result;\n    }\n\n    function normalizeStops(stops) {\n        const minStop = Math.min(...stops);\n        const maxStop = Math.max(...stops);\n        return stops.map(stop => (stop - minStop) / (maxStop - minStop));\n    }\n\n    let colorStops;\n    if (typeof colors[0] === 'string') {\n        // No stops provided, generate equally spaced stops\n        const totalColors = colors.length;\n        colorStops = colors.map((color, index) => ({\n            color: hexToRgb(color),\n            stop: index / (totalColors - 1)\n        }));\n    } else {\n        // Stops are provided, normalize them\n        let stops = colors.map(cs => cs.stop);\n        stops = normalizeStops(stops);\n\n        colorStops = colors.map((cs, index) => ({\n            color: hexToRgb(cs.color),\n            stop: stops[index]\n        }));\n    }\n\n    let colorArray = [];\n    let stepPositions = Array.from({ length: steps }, (_, i) => i / (steps - 1));\n\n    for (let i = 0; i < stepPositions.length; i++) {\n        let pos = stepPositions[i];\n        let color1, color2, stop1, stop2;\n\n        for (let j = 0; j < colorStops.length - 1; j++) {\n            if (pos >= colorStops[j].stop && pos <= colorStops[j + 1].stop) {\n                color1 = colorStops[j].color;\n                color2 = colorStops[j + 1].color;\n                stop1 = colorStops[j].stop;\n                stop2 = colorStops[j + 1].stop;\n                break;\n            }\n        }\n\n        let localFactor = (pos - stop1) / (stop2 - stop1);\n        let interpolatedColor = interpolateColor(color1, color2, localFactor);\n        colorArray.push(rgbToHex(...interpolatedColor));\n    }\n\n    return colorArray;\n}","/* eslint-disable */\n\nimport { styled } from '@mui/material/styles';\nimport { Paper } from '@mui/material';\n\nimport { addDays, endOfDay, startOfDay } from \"date-fns\";\nimport AggregationType from './AggregationType';\n\nexport const returnCustomStaticRanges = ({ today, minDateOfDataset, aggregationType }) => {\n  const hourlyReturn = [\n    {\n      label: \"Last 14d\",\n      range: () => ({\n        startDate: startOfDay(addDays(today, -14)),\n        endDate: endOfDay(today)\n      })\n    },\n    {\n      label: \"Last 30d\",\n      range: () => ({\n        startDate: startOfDay(addDays(today, -30)),\n        endDate: endOfDay(today)\n      })\n    }\n  ];\n\n  const dailyReturn = [{\n    label: \"Last 90d\",\n    range: () => ({\n      startDate: startOfDay(addDays(today, -90)),\n      endDate: endOfDay(today)\n    })\n  },\n  {\n    label: \"Last 365d\",\n    range: () => ({\n      startDate: startOfDay(addDays(today, -365)),\n      endDate: endOfDay(today)\n    })\n  },\n  {\n    label: \"All Time\",\n    range: () => ({\n      startDate: minDateOfDataset,\n      endDate: endOfDay(today)\n    })\n  }\n  ];\n\n  return (aggregationType === AggregationType.hourly) ? hourlyReturn : [...hourlyReturn, ...dailyReturn];\n};\n\nexport const StyledDateRangePicker = styled(Paper)(({ theme, showPickerPanel, smallScreen }) => ({\n  zIndex: showPickerPanel === true && 1000,\n  position: \"relative\",\n  padding: showPickerPanel ? theme.spacing(1) : 0,\n  margin: (showPickerPanel && !smallScreen) ? theme.spacing(-1) : 0,\n  maxWidth: '100%',\n  background: showPickerPanel ? theme.palette.customAlternateBackground : 'transparent',\n  boxShadow: showPickerPanel === false && 'none',\n  '& .rdrDayToday .rdrDayNumber span:after': {\n    background: theme.palette.secondary\n  },\n  '& .rdrDateDisplayWrapper, .rdrCalendarWrapper, .rdrDefinedRangesWrapper, .rdrStaticRange, .rdrDateDisplayItem': {\n    background: 'transparent'\n  },\n  '& .rdrDateInput': {\n    borderRadius: theme.shape.borderRadius,\n    boxShadow: 'none'\n  },\n  '& .rdrDateDisplayItemActive': {\n    border: showPickerPanel === false && 'none'\n  },\n  '& .rdrDateDisplay': {\n    margin: 0,\n    minWidth: \"20rem\"\n  },\n  '& .rdrDateDisplayItem': {\n    margin: 0,\n    borderRadius: showPickerPanel ? theme.shape.borderRadius : 0,\n    \"&:hover:not(.rdrDateDisplayItemActive)\": {\n      border: showPickerPanel ? `1px solid ${theme.palette.action.disabled}` : \"none\"\n    }\n  },\n  '& .rdrDateDisplayItem:hover:not(.rdrDateDisplayItemActive)': {\n    border: showPickerPanel === false && '1px solid transparent'\n  },\n  '& .rdrDateDisplayItem + .rdrDateDisplayItem': {\n    margin: 0\n  },\n  '& .rdrDateDisplayItem:first-of-type': {\n    borderRight: showPickerPanel === false && `1px solid ${theme.palette.action.disabled} !important`\n  },\n  '& .rdrMonthAndYearWrapper, .rdrInputRanges': {\n    display: showPickerPanel === false && 'none !important',\n    padding: 0\n  },\n  '& .rdrMonthName': {\n    display: 'none',\n  },\n  '& .rdrDefinedRangesWrapper, .rdrMonths': {\n    display: showPickerPanel === false && 'none'\n  },\n  '&  .rdrInfiniteMonths': {\n    visibility: showPickerPanel === false && 'hidden',\n    width: \"100% !important\",\n    maxWidth: \"675px\",\n    margin: \"auto\"\n  },\n  '& .rdrDateDisplayWrapper': {\n    minWidth: '18rem',\n    borderRadius: theme.shape.borderRadius,\n    border: showPickerPanel ? \"none\" : `1px solid ${theme.palette.action.disabled}`,\n    \"&:hover\": {\n      border: showPickerPanel ? \"none\" : `1px solid ${theme.palette.text.primary}`,\n    }\n  },\n  '& .rdrDateRangePickerWrapper': {\n    width: '100%',\n    flexDirection: 'column-reverse'\n  },\n  '& .rdrStaticRanges': {\n    flexDirection: 'row',\n    minWidth: '21rem'\n  },\n  '& .rdrStaticRangeLabel': {\n    color: theme.palette.text.secondary,\n    borderRadius: theme.shape.borderRadius,\n    padding: `${theme.spacing(0.5)} ${theme.spacing(1)}`\n  },\n  '& .rdrDefinedRangesWrapper': {\n    border: 'none',\n    width: '100%'\n  },\n  '& .rdrNextPrevButton': {\n    background: theme.palette.primary.main,\n    borderRadius: theme.shape.borderRadius,\n    opacity: 1,\n    '&:hover': {\n      opacity: 0.5,\n      background: theme.palette.primary.main\n    }\n  },\n  '& .rdrNextPrevButton > i': {\n    color: \"white\"\n  },\n  '& .rdrNextButton > i': {\n    borderColor: `transparent transparent transparent white`\n  },\n  '& .rdrPprevButton > i': {\n    borderColor: `transparent white transparent transparent`\n  },\n  '& .rdrStaticRange': {\n    border: 'none'\n  },\n  '& .rdrStaticRangeSelected > .rdrStaticRangeLabel, .rdrMonthAndYearPickers': {\n    color: theme.palette.primary.main\n  },\n  '& .rdrMonthAndYearPickers': {\n    fontSize: '1rem'\n  },\n  '& .rdrStaticRange:hover .rdrStaticRangeLabel, .rdrStaticRange:focus .rdrStaticRangeLabel': {\n    background: theme.palette.customBackground.toString()\n  },\n  '& .rdrDayNumber span': {\n    color: theme.palette.text.primary.toString()\n  },\n  '& .rdrDayPassive .rdrDayNumber span': {\n    opacity: 0.5\n  },\n  '& .rdrMonthAndYearWrapper select': {\n    color: theme.palette.text.secondary.toString(),\n    background: 'none',\n    padding: `${theme.spacing(1)} ${theme.spacing(2)}`,\n    '&:hover': {\n      border: `1px solid ${theme.palette.text.secondary}`\n    }\n  },\n  '& .rdrDateDisplayItem input': {\n    color: theme.palette.text.secondary\n  },\n  '& .rdrDayDisabled': {\n    backgroundColor: theme.palette.customBackground\n  },\n  '& .rdrDayEndOfMonth .rdrInRange, .rdrDayEndOfMonth .rdrStartEdge, .rdrDayEndOfWeek .rdrInRange, .rdrDayEndOfWeek .rdrStartEdge, .rdrEndEdge, .rdrDayEndOfMonth .rdrDayInPreview, .rdrDayEndOfMonth .rdrDayStartPreview, .rdrDayEndOfWeek .rdrDayInPreview, .rdrDayEndOfWeek .rdrDayStartPreview, .rdrDayEndPreview': {\n    borderTopRightRadius: '2rem',\n    borderBottomRightRadius: '2rem'\n  },\n  '& .rdrStartEdge, .rdrDayStartOfMonth .rdrInRange, .rdrDayStartOfMonth .rdrEndEdge, .rdrDayStartOfWeek .rdrInRange, .rdrDayStartOfWeek .rdrEndEdge, .rdrDayStartOfMonth .rdrDayInPreview, .rdrDayStartOfMonth .rdrDayEndPreview, .rdrDayStartOfWeek .rdrDayInPreview, .rdrDayStartOfWeek .rdrDayEndPreview, .rdrDayStartPreview': {\n    borderTopLeftRadius: '2rem',\n    borderBottomLeftRadius: '2rem'\n  },\n  '& .rdrStartEdge, .rdrDayStartOfWeek .rdrInRange, .rdrDayStartOfMonth .rdrInRange, .rdrDayStartOfMonth .rdrEndEdge, .rdrDayStartOfWeek .rdrEndEdge': {\n    left: 0\n  },\n  '& .rdrEndEdge, .rdrDayEndOfWeek .rdrInRange, .rdrDayEndOfMonth .rdrInRange, .rdrDayEndOfWeek .rdrStartEdge': {\n    right: 0\n  },\n  '& .rdrSelected, .rdrInRange, .rdrStartEdge, .rdrEndEdge': {\n    top: '0px',\n    bottom: '0px',\n  },\n  '& .rdrMonths': {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  '& .rdrDay': {\n    marginBottom: \"1px\",\n    '& span': {\n      top: '0px',\n      bottom: '0px'\n    }\n  },\n  '& .rdrMonthsHorizontal': {\n    overflowY: 'hidden'\n  },\n  '& .rdrDateInput:first-of-type:before': {\n    content: '\"\"',\n    backgroundImage: `url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' class='MuiSvgIcon-root' focusable='false' aria-hidden='true' viewBox='0 0 24 24' data-testid='DateRangeIcon'%3E%3Cpath d='M9 11H7v2h2zm4 0h-2v2h2zm4 0h-2v2h2zm2-7h-1V2h-2v2H8V2H6v2H5c-1.11 0-1.99.9-1.99 2L3 20c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2m0 16H5V9h14z' fill='${theme.palette.text.secondary}'/%3E%3C/svg%3E\")`,\n    width: \"0.75rem\",\n    height: \"0.75rem\",\n    display: \"block\",\n    position: \"absolute\",\n    top: \"50%\",\n    transform: \"translateY(-50%)\",\n    left: \"0.75rem\"\n  },\n  '& .rdrStaticRangeSelected span': {\n    color: theme.palette.primary.main\n  },\n  '& .rdrDayToday .rdrDayNumber span:after': {\n    background: theme.palette.secondary.main,\n    width: \"0.25rem\",\n    height: \"0.25rem\",\n    borderRadius: \"50%\"\n  }\n}));","import { ToggleButton, ToggleButtonGroup, Typography, Stack } from '@mui/material';\n\nimport AggregationType from './AggregationType';\n\nexport default function AggregationTypeToggle({ aggregationType, setAggregationType, smallScreen }) {\n  const handleChange = (event, newType) => {\n    if (newType !== null) {\n      setAggregationType(newType);\n    }\n  };\n\n  return (\n    <Stack\n      direction=\"row\"\n      alignItems=\"center\"\n      spacing={1}\n    >\n      <Typography variant=\"caption\" display=\"block\" color=\"text.secondary\">\n        DATA AVERAGE\n      </Typography>\n\n      <ToggleButtonGroup\n        color=\"primary\"\n        value={aggregationType}\n        exclusive\n        onChange={handleChange}\n        aria-label=\"aggregation type toggle for graph average\"\n        size=\"small\"\n      >\n        <ToggleButton\n          size=\"small\"\n          sx={{ textTransform: \"capitalize !important\", px: 1.25, py: 0.5 }}\n          value={AggregationType.hourly}\n          aria-label={AggregationType.hourly}\n        >\n          {AggregationType.hourly}\n        </ToggleButton>\n        <ToggleButton\n          size=\"small\"\n          sx={{ textTransform: \"capitalize !important\", px: 1.25, py: 0.5 }}\n          value={AggregationType.daily}\n          aria-label={AggregationType.daily}\n        >\n          {AggregationType.daily}\n        </ToggleButton>\n      </ToggleButtonGroup>\n    </Stack >\n  );\n}","/* eslint-disable */\n\nimport { useState, useRef, useEffect, useContext } from 'react';\n\nimport { DateRangePicker, createStaticRanges } from 'react-date-range';\nimport 'react-date-range/dist/styles.css'; // main style file\nimport 'react-date-range/dist/theme/default.css'; // theme css file\n\nimport { CircularProgress, useMediaQuery, useTheme } from '@mui/material';\nimport { Alert, Button, Stack } from '@mui/material';\n\nimport { StyledDateRangePicker, returnCustomStaticRanges } from './DateRangePickerUtils';\nimport { ChartEndpoints, getHistoricalChartApiUrl } from '../../Utils/ApiUtils';\nimport AggregationTypeToggle from './AggregationTypeToggle';\nimport AggregationType from './AggregationType';\nimport { DashboardContext } from '../../ContextProviders/DashboardContext';\n\nimport { differenceInDays, isSameDay, format } from 'date-fns';\nimport { fetchDataFromURL } from '../DatasetDownload/DatasetFetcher';\n\nconst InvalidRangeMessages = {\n  tooLong: \"HOURLY data is limited to max 30d\",\n  sameDay: \"Start and end dates must be different\"\n}\n\nconst CustomDateRangePicker = (props) => {\n  const { minDateOfDataset } = props;\n\n  const { currentSchoolID, setIndividualChartData } = useContext(DashboardContext);\n  const [aggregationType, setAggregationType] = useState(AggregationType.hourly);\n\n  const today = new Date();\n\n  const [invalidRangeMessage, setInvalidRangeMessage] = useState();\n\n  const theme = useTheme();\n  const smallScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n\n  // Keep track of the date range being selected by the user\n  const [selectedRange, setSelectedRange] = useState([\n    { ...returnCustomStaticRanges({ today, minDateOfDataset })[0].range(), key: 'selection' } // Initialize with the range of the first static range\n  ]);\n\n  const [chartUrl, setChartUrl] = useState();\n\n  // Control displaying / hiding of the date range picker\n  const [showPickerPanel, setShowPickerPanel] = useState(false);\n  const paperRef = useRef(null);\n\n  const [isFetchingData, setIsFetchingData] = useState(false);\n\n  // Hide or show the date-range-picker panel\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (paperRef.current && !paperRef.current.contains(event.target)) {\n        setShowPickerPanel(false);\n      }\n    };\n    document.addEventListener(\"mousedown\", handleClickOutside);\n\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [paperRef]);\n\n  const checkValidRange = (selectedRange) => {\n    const { startDate, endDate } = selectedRange;\n\n    // Start date and end date can't be the same date\n    if (isSameDay(startDate, endDate)) {\n      setInvalidRangeMessage(InvalidRangeMessages.sameDay);\n      return;\n    }\n    else {\n      setInvalidRangeMessage(null);\n    }\n\n    // Restrict the selection to only 30 days if aggregationType is hourly\n    if (aggregationType === AggregationType.hourly) {\n      const diff = differenceInDays(endDate, startDate);\n      setInvalidRangeMessage((diff > 30) ? InvalidRangeMessages.tooLong : null);\n    }\n    // No restriction for daily aggregationType\n    else {\n      if (invalidRangeMessage !== null) setInvalidRangeMessage(null);\n    }\n  }\n\n  // Method to handle date range selection changes\n  const handleSelect = (ranges) => {\n    if (!ranges) return;\n\n    checkValidRange(ranges.selection)\n    setSelectedRange([ranges.selection]);\n  };\n\n  useEffect(() => {\n    checkValidRange(selectedRange[0]);\n  }, [aggregationType]);\n\n  // Send query request to backend when APPLY button is clicked\n  // Check if a new date range is selected as well\n  const handleApplyButtonClick = (event) => {\n    if (invalidRangeMessage !== null) return;\n\n    event.stopPropagation(); // Prevents Paper onClick from firing\n\n    const newUrl = getHistoricalChartApiUrl({\n      endpoint: ChartEndpoints.historical,\n      school_id: currentSchoolID,\n      aggregationType: aggregationType,\n      startDate: format(selectedRange[0].startDate, 'yyyy-MM-dd'), // only one range can be selected at a time --> [0]\n      endDate: format(selectedRange[0].endDate, 'yyyy-MM-dd')\n    });\n\n    if (newUrl !== chartUrl) {\n      setIsFetchingData(true);\n\n      fetchDataFromURL({\n        url: newUrl,\n        extension: 'json',\n        needsAuthorization: true\n      })\n        .then((data) => {\n          setIndividualChartData(0, data); // first chart -> chartIndex = 0\n          setChartUrl(newUrl);\n          setIsFetchingData(false);\n          setShowPickerPanel(false);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n\n  };\n\n  const renderApplyButtonLabel = () => {\n    return (\n      isFetchingData ? <CircularProgress disableShrink size=\"1.4375rem\" color=\"inherit\" /> : \"APPLY\"\n    )\n  };\n\n  return (\n    <StyledDateRangePicker\n      showPickerPanel={showPickerPanel}\n      smallScreen={smallScreen}\n      ref={paperRef}\n      elevation={8}\n      onClick={() => setShowPickerPanel(true)}\n    >\n      <Stack direction={\"column\"} spacing={1}>\n        <DateRangePicker\n          ranges={selectedRange}\n          onChange={handleSelect}\n          staticRanges={\n            createStaticRanges(\n              returnCustomStaticRanges({\n                today, minDateOfDataset, aggregationType\n              })\n            )\n          }\n          inputRanges={[]}\n          rangeColors={[theme.palette.primary.main, theme.palette.secondary.main, theme.palette.text.secondary]}\n          minDate={minDateOfDataset}\n          maxDate={today}\n          months={1}\n          showMonthAndYearPickers={false}\n          direction={\"horizontal\"}\n          fixedHeight={true}\n          preventSnapRefocus={true}\n          calendarFocus=\"backwards\"\n          startDatePlaceholder=\"Start Date\"\n          endDatePlaceholder=\"End Date\"\n          editableDateInputs={true}\n          showMonthArrow={true}\n        />\n\n        {showPickerPanel && (\n          <Stack\n            direction=\"column\"\n            alignItems=\"end\"\n            width=\"100%\"\n            spacing={1}\n          >\n            <AggregationTypeToggle\n              aggregationType={aggregationType}\n              setAggregationType={setAggregationType}\n              smallScreen={smallScreen}\n            />\n            <Stack direction=\"row\" spacing={1}>\n              {\n                invalidRangeMessage && displayErrorMessage(invalidRangeMessage)\n              }\n              <Button\n                variant=\"contained\"\n                size=\"small\"\n                disabled={invalidRangeMessage === null ? false : true}\n                onClick={handleApplyButtonClick}\n                sx={{\n                  zIndex: 1005,\n                  transform: \"translateY(-1px)\"\n                }}\n              >\n                {renderApplyButtonLabel()}\n              </Button>\n            </Stack>\n\n          </Stack>\n\n        )}\n      </Stack>\n\n    </StyledDateRangePicker>\n\n  );\n};\n\nconst displayErrorMessage = (invalidRangeMessage) => {\n  return (\n    <Alert\n      severity=\"error\"\n      sx={{\n        py: 0.5,\n        px: 1,\n        display: \"flex\",\n        alignItems: \"center\",\n        \"& div\": {\n          fontSize: \"0.75rem\",\n          p: 0\n        },\n        \"& .MuiAlert-icon\": {\n          fontSize: \"1rem\",\n          mr: 0.5\n        }\n      }}\n    >\n      {invalidRangeMessage}\n    </Alert>\n  )\n}\n\nexport default CustomDateRangePicker;\n","/* eslint-disable */\n\nimport { useState, useEffect, useContext, useMemo } from 'react';\n\nimport { GoogleContext } from '../../ContextProviders/GoogleContext';\n\nimport { Box, Stack, Grid } from '@mui/material/';\n\nimport { useTheme } from '@mui/material/styles';\nimport SeriesSelector from './SubchartUtils/SeriesSelector';\nimport { generateRandomID, returnGenericOptions, returnCalendarChartOptions, returnChartControlUI, ChartControlType, addTouchEventListenerForChartControl, getDateRangeForCalendarChart, getValueRangeForCalendarChart } from '../GoogleChartHelper';\n\nimport GoogleChartStyleWrapper from './SubchartUtils/GoogleChartStyleWrapper';\n\nimport LoadingAnimation from '../../Components/LoadingAnimation';\n\nimport { CalendarChart, getCalendarChartMargin, yearSpacing } from './NivoCharts/NivoCalendarChart'\n\nimport CustomDateRangePicker from '../../Components/DateRangePicker/CustomDateRangePicker'\n\nexport default function SubChart(props) {\n  // Props\n  const { chartData, subchartIndex, windowSize, isPortrait, isHomepage, height, maxHeight } = props;\n\n  // Formulate the className\n  const className = chartData.customClassName ? `${chartData.chartType} ${chartData.customClassName}` : chartData.chartType;\n\n  // Use GoogleContext for loading and manipulating the Google Charts\n  const google = useContext(GoogleContext);\n\n  // States of the Google Charts\n  const [dataTable, setDataTable] = useState();\n  const [chartWrapper, setChartWrapper] = useState();\n  const [dashboardWrapper, setDashboardWrapper] = useState();\n  const [controlWrapper, setControlWrapper] = useState();\n\n  const [previousChartData, setPreviousChartData] = useState();\n\n  // Get the current theme\n  const theme = useTheme();\n\n  // To determine the first time the chart renders to show/hide the LoadingAnimation\n  const [isFirstRender, setIsFirstRender] = useState(true);\n\n  // Keep track of the columns (series) of the chart\n  const [allInitialColumns, setAllInitialColumns] = useState();\n  const [dataColumns, setDataColumns] = useState();\n  const [initialVAxisRange, setInitialVAxisRage] = useState();\n\n  // Define the DOM container's ID for drawing the google chart inside\n  const [chartID, __] = useState(generateRandomID());\n\n  // Calendar chart's properties\n  const [chartTotalHeight, setChartTotalHeight] = useState(200);\n\n  // Get the options object for chart\n  let options = useMemo(() => {\n    let opts = returnGenericOptions({ ...props, theme });\n    if (chartData.chartType === 'Calendar') {\n      opts = returnCalendarChartOptions(opts);\n    }\n    return opts;\n  }, [props, theme, chartData.chartType]);\n  // State to store transformed data for CalendarChart\n  const [calendarData, setCalendarData] = useState(null);\n  const [calendarHeight, setCalendarHeight] = useState(200);\n  const [containerWidth, setContainerWidth] = useState(1200); // max width of the chart container\n  // Early exit for 'Calendar' chartType\n  if (chartData.chartType === 'Calendar') {\n    useEffect(() => {\n      const dataArray = chartData.dataArray\n        || (chartData.subcharts\n          && chartData.subcharts[subchartIndex].dataArray)\n        || null\n        || null;\n      if (!dataArray) return; // early return if there is no data to render\n\n\n      const dateStrings = dataArray.map(item => item.day);\n      const values = dataArray.map(item => item.value);\n      const dateRange = getDateRangeForCalendarChart(dateStrings);\n\n      setCalendarData({\n        data: dataArray,\n        dateRange: dateRange,\n        allowedDataTypes: chartData.allowedDataTypes,\n        valueRange: getValueRangeForCalendarChart(values)\n      });\n\n      // Get the number of years in the dateRange\n      const startYear = new Date(dateRange.min).getFullYear();\n      const endYear = new Date(dateRange.max).getFullYear();\n      const numberOfYear = endYear - startYear + 1;\n\n      // Calculate the size of each cell\n      const cellSize = Math.min(containerWidth / 60, 20); // max cell size of 20\n      const yearHeight = cellSize * 7; // Height for one year\n\n      const calendarChartMargin = getCalendarChartMargin(isPortrait);\n\n      // Calculate the total height based on the number of years and margins\n      let totalHeight;\n      if (numberOfYear == 1) {\n        totalHeight = yearHeight + yearSpacing + calendarChartMargin.top + calendarChartMargin.bottom\n      }\n      else {\n        totalHeight = numberOfYear * (yearHeight + yearSpacing) + calendarChartMargin.top + calendarChartMargin.bottom;\n      }\n      setCalendarHeight(totalHeight);\n\n    }, [chartData]);\n\n    return (\n      <GoogleChartStyleWrapper\n        isPortrait={isPortrait}\n        className={className}\n        position=\"relative\"\n        minWidth=\"700px\"\n        minHeight={isPortrait ? '200px' : calendarHeight + 'px'}\n        height={calendarHeight + 'px'}\n        maxHeight={isPortrait && '550px'}\n      >\n        {calendarData ?\n          <CalendarChart\n            data={calendarData.data}\n            dateRange={calendarData.dateRange}\n            valueRange={calendarData.valueRange}\n            allowedDataTypes={calendarData.allowedDataTypes}\n            isPortrait={isPortrait}\n            options={options}\n          />\n          :\n          (\n            <Box sx={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '100%' }}>\n              <LoadingAnimation />\n\n            </Box>\n          )\n        }\n      </GoogleChartStyleWrapper>\n    );\n  }\n\n  // Properties for chart control (if existed)\n  let hasChartControl = false;\n  let chartControlOptions;\n  // Only show the chart control if:\n  // It exists in the database (either for all subcharts or just for a particular subchart)\n  // And if the chart is currently not shown on homePage\n  let chartControl = chartData.control || chartData.subcharts?.[subchartIndex].control;\n  if (chartControl && (isHomepage !== true)) {\n    hasChartControl = true;\n\n    // Get the options for chartControl if hasChartControl\n    chartControlOptions = {\n      ...chartControl.options,\n      ui: returnChartControlUI({\n        chartControl,\n        mainChartData: chartData,\n        mainChartOptions: options,\n        subchartIndex,\n        theme,\n        isPortrait\n      })\n    };\n\n    // Swap touch events for mouse events on ChartRangeControl\n    // as it doesn't support touch events on mobile\n    if (chartControl.controlType === 'ChartRangeFilter') {\n      useEffect(() => {\n        const cleanupTouchEventListener = addTouchEventListenerForChartControl({ controlWrapper, chartID });\n        return cleanupTouchEventListener;\n      }, [controlWrapper]);\n    }\n  }\n\n  // Properties for selecting (showing or hiding) the serie(s)\n  const seriesSelector = options.seriesSelector || false;\n\n  // Properties for date-range-picker\n  const dateRangePicker = options.dateRangePicker || null;\n\n  // Set new options prop and re-render the chart if theme or isPortrait changes\n  useEffect(() => {\n    if (seriesSelector) handleSeriesSelection({ newDataColumns: dataColumns }); // this function set new options, too\n    else {\n      chartWrapper?.setOptions({\n        ...options,\n        ...(chartData.chartType === 'Calendar' && { height: chartTotalHeight })\n      });\n\n      chartWrapper?.draw();\n      if (hasChartControl) {\n        controlWrapper?.setOptions(chartControlOptions);\n        controlWrapper?.draw();\n      }\n    }\n  }, [theme, isPortrait, windowSize, chartTotalHeight]);\n\n  // Set new initialColumnsColors if the theme changes\n  // This only applies to when seriesSelector.method == \"setViewColumn\"\n  useEffect(() => {\n    if (!dataColumns) return;\n    if (seriesSelector && seriesSelector.method == \"setViewColumn\") {\n      setInitialColumnsColors({ dataColumns: dataColumns });\n      handleSeriesSelection({ newDataColumns: dataColumns });\n    }\n  }, [theme]);\n\n  const getInitialColumns = ({ chartWrapper, dataTable, seriesSelector }) => {\n    // Update the initial DataView's columns (often, all of the series are displayed initially)\n    var initialView = chartWrapper.getView();\n    // If (optional) columns is not specified in database\n    // Assign it from DataTable\n    if (initialView.columns == null) {\n      const viewFromDataTable = new google.visualization.DataView(dataTable);\n      chartWrapper.setView({\n        columns: viewFromDataTable.columns\n      });\n      initialView = chartWrapper.getView();\n    }\n\n    let shouldAssignDomainRoleToFistColumn = true; // variable to only assign type: 'domain' to the very first column\n    let dataSeriesIndex = 0;\n    const allInitialColumns = initialView.columns.map((col, index) => {\n      // A column can either be a number (that denotes the index of the sourceColumn) or an object\n      // The code below harmonize all columns to be an object to store crucial data to toggle their visibility\n      if (typeof col === 'number') col = {\n        role: shouldAssignDomainRoleToFistColumn ? 'domain' : 'data',\n        sourceColumn: col\n      }\n      col.label = dataTable.getColumnLabel(col.sourceColumn);\n      col.indexInAllInitialColumns = index;\n\n      shouldAssignDomainRoleToFistColumn = shouldAssignDomainRoleToFistColumn && false;\n\n      // Set the visibility of data column, \n      if (col.role === 'data') {\n        // If defaultSeriesToDisplayInitially is presented\n        // then, only show these series\n        if (seriesSelector.defaultSeriesToDisplayInitially) {\n          if (seriesSelector.defaultSeriesToDisplayInitially.includes(index)) {\n            col.selected = true;\n          }\n          else {\n            col.selected = false;\n          }\n        }\n        // If no defaultSeriesToDisplayInitially is presented\n        else {\n          // then, all data columns are selected if multiple series are selectable\n          if (seriesSelector.allowMultiple) {\n            col.selected = true;\n          } else {\n            // else for single serie selector, only first data column is selected\n            if (dataSeriesIndex === 0) {\n              col.selected = true;\n            } else {\n              col.selected = false;\n            }\n          }\n        }\n\n        col.seriesIndex = dataSeriesIndex;\n        dataSeriesIndex++;\n      }\n      return col;\n    });\n    setAllInitialColumns(allInitialColumns);\n    const initialVAxisRange = getInitialVAxisRange({ dataTable: dataTable, allInitialColumns: allInitialColumns });\n    setInitialVAxisRage(initialVAxisRange);\n    // To track selection, only get the columns that are:\n    // role === 'data'\n    // visibleInLegend !== false\n    const dataColumns = allInitialColumns.filter((col) => {\n      return col.role === 'data' && options.series?.[col.seriesIndex]?.visibleInLegend !== false;\n    });\n\n    if (seriesSelector.method === \"setViewColumn\") setInitialColumnsColors({ dataColumns: dataColumns });\n\n    setDataColumns(dataColumns);\n    return { initAllInitialColumns: allInitialColumns, initDataColumns: dataColumns };\n  };\n\n  const setInitialColumnsColors = ({ dataColumns }) => {\n    dataColumns.forEach((col) => {\n      // Assign inherit color to this data column\n      col.color = options.colors[col.seriesIndex % options.colors.length];\n      // Assign other inherit attributes from its serie object (if existed)\n      col.serieAttribute = options.series?.[col.seriesIndex];\n    });\n  }\n\n  const getInitialVAxisRange = ({ dataTable, allInitialColumns }) => {\n    let vAxisMin, vAxisMax;\n    allInitialColumns.forEach((col, index) => {\n      if (index === 0) return; // the first column is the domain (hAxis)\n      const range = dataTable.getColumnRange(col.sourceColumn);\n      if (!isNaN(range.min) && range.min) vAxisMin = vAxisMin ? Math.min(vAxisMin, range.min) : range.min;\n      if (!isNaN(range.max) && range.max) vAxisMax = vAxisMax ? Math.max(vAxisMax, range.max) : range.max;\n    });\n    return { min: vAxisMin, max: vAxisMax };\n  }\n\n  const handleSeriesSelection = ({\n    newDataColumns,\n    _allInitialColumns = allInitialColumns,\n    _chartWrapper = chartWrapper,\n    _controlWrapper = controlWrapper\n  }) => {\n    if (!_allInitialColumns) return;\n\n    setDataColumns(newDataColumns);\n\n    if (seriesSelector.method === \"toggleVisibility\" || seriesSelector.method === null) {\n      const hiddenSeriesObject = {};\n      newDataColumns.forEach((col) => {\n        if (!col.selected)\n          hiddenSeriesObject[col.seriesIndex] = {\n            color: 'transparent',\n            enableInteractivity: false,\n            visibleInLegend: false\n          }; // 'hide' the serie by making it transparent\n      });\n\n      _chartWrapper?.setOptions({\n        ...options,\n        series: {\n          ...options.series,\n          ...hiddenSeriesObject\n        }\n      });\n\n      if (hasChartControl) {\n        const currentControlOptions = _controlWrapper?.getOptions();\n        _controlWrapper?.setOptions({\n          ...currentControlOptions,\n          ui: {\n            ...currentControlOptions.ui,\n            chartOptions: {\n              ...currentControlOptions.ui.chartOptions,\n              series: {\n                ...options.series,\n                ...hiddenSeriesObject\n              }\n            }\n          }\n        });\n      }\n    }\n    else if (seriesSelector.method === \"setViewColumn\") {\n      let newViewColumns = [];\n      newViewColumns.push(0); // this is the domain column\n      newDataColumns.forEach((dataColumn) => {\n        if (dataColumn.selected) {\n          newViewColumns.push(dataColumn);\n          // Find this dataColumn's supporting columns (whose role !== 'data')\n          // A dataColumn has its supporting columns (can be many) follow it immediately\n          for (let i = dataColumn.indexIn_ + 1; i < _allInitialColumns.length; i++) {\n            if (_allInitialColumns[i].role !== 'data') {\n              newViewColumns.push(_allInitialColumns[i]);\n            }\n            // If this loop encounter the next dataColumn, break the loop, all supporting columns for this dataColumn have been discovered\n            else {\n              break;\n            }\n          }\n        }\n      });\n      _chartWrapper?.setView({ columns: newViewColumns });\n\n      const newOptions = { ...options };\n      // Preserve the initial vAxis range so that the vAxis doesn't shift based on the visible serie(s)\n      // newOptions.vAxis.viewWindow = {\n      //   min: (options.vAxis.viewWindow.min == null) ? initialVAxisRange.min : options.vAxis.viewWindow.min,\n      //   max: (options.vAxis.viewWindow.max == null) ? initialVAxisRange.max : options.vAxis.viewWindow.max,\n      // }\n      // Set the new color array\n      newOptions.colors = newDataColumns.filter((col) => col.selected).map((col) => col.color);\n      // Set the new series object (if any)\n      // this contains other series' attributes (lineWidth, seriesType...)\n      const series = {};\n      let selectedSeriesCount = 0;\n      newDataColumns.forEach((col) => {\n        if (!col.selected) return;\n        if (col.serieAttribute != null) {\n          series[selectedSeriesCount] = col.serieAttribute;\n        }\n        selectedSeriesCount++;\n      })\n      newOptions.series = series;\n      _chartWrapper?.setOptions(newOptions);\n\n      if (hasChartControl) {\n        const currentControlOptions = _controlWrapper?.getOptions();\n        _controlWrapper?.setOptions({\n          ...currentControlOptions,\n          ui: {\n            ...currentControlOptions.ui,\n            chartOptions: {\n              ...currentControlOptions.ui.chartOptions,\n              colors: newOptions.colors,\n              series: newOptions.series\n            },\n            chartView: {\n              columns: newViewColumns\n            }\n          }\n        });\n      }\n    }\n\n    // Call draw to apply the new DataView and 'refresh' the chart\n    _chartWrapper?.draw();\n\n    if (hasChartControl) {\n      _controlWrapper?.draw();\n    }\n  };\n\n  const reconstructFunctionFromJSONstring = (columns) => {\n    if (!columns) return;\n\n    const evaluatedColumns = [];\n    for (const column of columns) {\n      if (typeof column === 'number') {\n        // If it's a number, add it as-is\n        evaluatedColumns.push(column);\n      } else if (typeof column === 'object') {\n        if (column.calc && column.calc !== 'stringify') {\n          // If it's an object with a 'calc' property, evaluate the 'calc' function\n          // using new Function() and add the result to the evaluatedColumns array\n          const calcFunction = new Function(\"dataTable\", \"rowNum\", column.calc);\n          evaluatedColumns.push({\n            ...column,\n            calc: calcFunction,\n          });\n        } else {\n          // If it's an object without a 'calc' property, or with calc = 'stringify', add it as-is\n          evaluatedColumns.push(column);\n        }\n      }\n    }\n    return evaluatedColumns;\n  }\n\n\n  // Call this function to fetch the data and draw the initial chart\n  useEffect(() => {\n    if (google && chartData) {\n      // Do not draw again if deep comparison between current chartData and previousChartData is true\n      if (JSON.stringify(chartData) === JSON.stringify(previousChartData)) return;\n      setPreviousChartData(chartData);\n\n      // Get and set the dataArray \n      const dataArray = chartData.dataArray\n        || (chartData.subcharts\n          && chartData.subcharts[subchartIndex].dataArray)\n        || null\n        || null;\n      if (!dataArray) return; // early return if there is no data to render\n\n      const thisDataTable = google.visualization.arrayToDataTable(dataArray);\n      setDataTable(thisDataTable);\n\n      // Get dataColumn views\n      const columns = chartData.columns\n        || (chartData.subcharts\n          && chartData.subcharts[subchartIndex].columns)\n        || null\n        || null;\n      const reconstructedColumns = reconstructFunctionFromJSONstring(columns);\n\n      // Create chartWrapper\n      const thisChartWrapper = new google.visualization.ChartWrapper({\n        chartType: chartData.chartType,\n        dataTable: (!hasChartControl) ? thisDataTable : undefined,\n        options: options,\n        view: {\n          columns: reconstructedColumns\n        },\n        containerId: chartID\n      });\n      setChartWrapper(thisChartWrapper);\n\n      let thisControlWrapper;\n      if (hasChartControl) {\n        const thisDashboardWrapper = new google.visualization.Dashboard(\n          document.getElementById(`dashboard-${chartID}`));\n        setDashboardWrapper(thisDashboardWrapper);\n\n        google.visualization.events.addListener(thisDashboardWrapper, 'ready', onChartReady);\n\n        thisControlWrapper = new google.visualization.ControlWrapper({\n          controlType: chartControl.controlType,\n          options: chartControlOptions,\n          containerId: `control-${chartID}`\n        });\n        setControlWrapper(thisControlWrapper);\n\n        // Establish dependencies\n        thisDashboardWrapper.bind(thisControlWrapper, thisChartWrapper);\n\n        thisDashboardWrapper.draw(thisDataTable);\n      }\n      else {\n        google.visualization.events.addListener(thisChartWrapper, 'ready', onChartReady);\n        thisChartWrapper.draw();\n      }\n\n      // Run the seriesSelector for the first time\n      if (seriesSelector) {\n        const { initAllInitialColumns, initDataColumns } = getInitialColumns({ chartWrapper: thisChartWrapper, dataTable: thisDataTable, seriesSelector: seriesSelector });\n\n        handleSeriesSelection({\n          _allInitialColumns: initAllInitialColumns,\n          newDataColumns: initDataColumns,\n          _chartWrapper: thisChartWrapper,\n          _controlWrapper: thisControlWrapper\n        });\n      }\n    }\n  }, [google, chartData]);\n\n  const renderChart = () => {\n    if (hasChartControl) {\n      return (\n        <Stack\n          id={`dashboard-${chartID}`}\n          direction={ChartControlType[chartControl.controlType]?.stackDirection || 'column-reverse'}\n          sx={{ height: '100%' }}\n        >\n          <Box\n            id={`control-${chartID}`}\n            sx={{\n              height: `calc(${height} / 8)`,\n              opacity: 0.8,\n              filter: 'saturate(0.3)'\n            }}\n          />\n          <Box id={chartID} sx={{ height: height, maxHeight: maxHeight }} />\n        </Stack>\n      )\n    }\n    else return <Box id={chartID} sx={{ height: height, maxHeight: maxHeight }} />;\n  }\n\n  const onChartReady = () => {\n    if (!isFirstRender) return;\n    // Hide the circleProgress when chart finishes rendering the first time\n    setIsFirstRender(false);\n  };\n\n  const showAuxiliaryControls = () => {\n    if (!isFirstRender) {\n      return (\n        <Grid\n          container\n          mt={1}\n          sx={{\n            gap: 2,\n            [theme.breakpoints.down('sm')]: { gap: 1 }\n          }}\n        >\n          {seriesSelector &&\n            <Grid item\n              sx={{\n                [theme.breakpoints.down('sm')]: { width: '100%' }\n              }}\n            >\n              <SeriesSelector\n                items={dataColumns}\n                allowMultiple={seriesSelector.allowMultiple}\n                seriesLabel={seriesSelector.seriesLabel}\n                selectorID={`${chartData.title}-selector`}\n                onSeriesSelection={handleSeriesSelection}\n                displayChip={false}\n              />\n            </Grid>\n          }\n          {\n            dateRangePicker &&\n            <Grid item\n              sx={{\n                height: \"2rem\",\n                width: { [theme.breakpoints.down('sm')]: { width: '100%' } }\n              }} >\n              <CustomDateRangePicker minDateOfDataset={new Date(dateRangePicker.minDate)} />\n            </Grid>\n          }\n        </Grid >\n      );\n    } else {\n      return null;\n    }\n  };\n\n  return (\n    <GoogleChartStyleWrapper\n      isPortrait={isPortrait}\n      className={className}\n      position=\"relative\"\n      height=\"100%\"\n      minHeight={chartData.chartType === 'Calendar' && '200px'}\n    >\n      {/* Conditionally display loading animation here */}\n      {isFirstRender && (\n        <Box sx={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '100%' }}>\n          <LoadingAnimation />\n        </Box>\n      )}\n\n      {showAuxiliaryControls()}\n\n      {/* Display chart here */}\n      {renderChart()}\n    </GoogleChartStyleWrapper>\n  );\n}","import { useState, useRef } from 'react';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport parse from 'html-react-parser';\nimport { useMediaQuery, useTheme } from '@mui/material';\nimport { replacePlainHTMLWithMuiComponents } from '../Utils/Utils';\n\nfunction CollapsibleSubtitle({ text, wordLimit = 40, reference }) {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  const subtitleRef = useRef(null);\n\n  const words = text.split(' ');\n\n  // If not on mobile or words are within limit, just display the full text\n  if (!isMobile || words.length / wordLimit <= 1.4) {\n    return (\n      <Box>\n        <Typography>{parse(text, { replace: replacePlainHTMLWithMuiComponents })}</Typography>\n        {reference && (\n          <Typography variant=\"caption\" color=\"text.secondary\">\n            {parse(reference, { replace: replacePlainHTMLWithMuiComponents })}\n          </Typography>\n        )}\n      </Box>\n    );\n  }\n\n  let displayText = words.slice(0, wordLimit).join(' ');\n  const lastFullStop = displayText.lastIndexOf('.');\n\n  if (lastFullStop !== -1) {\n    displayText = displayText.slice(0, lastFullStop + 1);\n  }\n\n  // Do not collapse if the user clicks on the chart associated with the subtitle\n  const isClickWithinSharedParent = (event) => {\n    let { target } = event;\n    // .MuiContainer-root - Container for both the subtitle and the chart\n    const subtitleParent = subtitleRef.current.closest('.MuiContainer-root');\n    // Elements used to detect if the click is on a chart\n    const chartElements = new Set(['rect', 'path', 'svg', 'circle']);\n\n    while (target != null) {\n      // Check if a chart is clicked\n      if (chartElements.has(target.tagName)) {\n        // If the chart element and the subtitle element share the same container\n        // it means that the click is on the chart associated with the subtitle\n        // As such, we should not collapse the subtitle\n        const targetParent = target.closest('.MuiContainer-root');\n        return targetParent === subtitleParent;\n      }\n      target = target.parentNode; // Move up the DOM tree\n    }\n    return false;\n  };\n\n  // Custom onClickAway handler\n  const handleOnClickAway = (event) => {\n    if (!isClickWithinSharedParent(event)) {\n      setIsExpanded(false);\n    }\n  };\n\n  return (\n    <ClickAwayListener onClickAway={handleOnClickAway}>\n      <Box ref={subtitleRef} onClick={() => setIsExpanded(!isExpanded)} style={{ cursor: 'pointer' }}>\n        {isExpanded ? (\n          <>\n            <Typography>{parse(text, { replace: replacePlainHTMLWithMuiComponents })}</Typography>\n            {reference && <Typography variant=\"caption\" color=\"text.secondary\">{parse(reference, { replace: replacePlainHTMLWithMuiComponents })}</Typography>}\n          </>\n        ) : (\n          <>\n            <Typography display=\"inline\">\n              {parse(displayText, { replace: replacePlainHTMLWithMuiComponents })}\n              ...\n            </Typography>\n            <Typography display=\"inline\" color=\"text.primary\" fontWeight=\"500\" sx={{ ml: 0.5, '& :hover': { textDecoration: 'underline' } }}>\n              See more\n            </Typography>\n          </>\n        )}\n      </Box>\n    </ClickAwayListener>\n  );\n}\n\nexport default CollapsibleSubtitle;\n","import { useState, useEffect } from 'react';\nimport { styled } from '@mui/material/styles';\nimport { Box, Tabs, Tab, useMediaQuery, Typography, Menu, MenuItem, Stack } from '@mui/material/';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\nimport SubChart from './Subchart/SubChart';\n\nimport CollapsibleSubtitle from '../Components/CollapsibleSubtitle';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\n\nconst debounceMilliseconds = 100;\n\nconst maxTabsToDisplay = 3;\nconst initialDropdownMenuTabIndex = -1;\n\nconst ChartStyleWrapper = styled(Box)(({ theme }) => ({\n  // CSS for dark theme only\n  ...(theme.palette.mode === 'dark' && {\n    // De-saturate a bit\n    filter: 'saturate(0.85)',\n    // Invert iframe\n    '& .heat-map-iframe': {\n      filter: 'invert(0.848) hue-rotate(180deg)',\n    }\n  }),\n  // Special CSS for historical-snapshot-aqi chart\n  '& .historical-snapshot-aqi svg [clip-path*=\"ABSTRACT_RENDERER\"] > g:nth-of-type(1), .historical-snapshot-aqi [id*=\"googlechart-control\"] svg [clip-path*=\"ABSTRACT_RENDERER\"] > g:nth-of-type(2)': {\n    opacity: 0.6\n  },\n  // Center Calendar chart in wrapper\n  '& .Calendar [dir]:not(:empty)': {\n    margin: 'auto'\n  },\n\n  // add horizontal scrollbar to Calendar charts\n  '& .Calendar > div > div:last-of-type > div': {\n    overflowX: 'auto',\n    overflowY: 'hidden',\n    scrollbarGutter: 'stable'\n  }\n}));\n\nconst StyledTabs = styled(Tabs)(({ theme }) => ({\n  '& .MuiTabScrollButton-root': {\n    color: theme.palette.text.primary\n  },\n  '& .MuiTab-root': {\n    [theme.breakpoints.down('sm')]: {\n      fontSize: '0.625rem',\n      padding: theme.spacing(0.5)\n    },\n  },\n  '& .MuiSvgIcon-root ': {\n    [theme.breakpoints.down('sm')]: {\n      fontSize: '0.75rem'\n    }\n  }\n}));\n\nconst StyledMenuItem = styled(MenuItem)(({ theme }) => ({\n  '& .MuiBox-root ': {\n    [theme.breakpoints.down('sm')]: {\n      fontSize: '0.75rem'\n    },\n  }\n}));\n\n// eslint-disable-next-line max-len\nfunction ChartComponentWrapper(props) {\n  const {\n    generalChartSubtitle,\n    generalChartReference,\n    chartData: passedChartData,\n    chartHeight: passedChartHeight,\n    isHomepage\n  } = props;\n  const isSmallWidth = useMediaQuery((theme) => theme.breakpoints.down('sm'));\n\n  const [isPortrait, setIsPortrait] = useState(window.matchMedia('(orientation: portrait)').matches);\n  const [windowSize, setWindowSize] = useState([\n    window.innerWidth,\n    window.innerHeight,\n  ]);\n\n  let chartMaxHeight;\n  let chartHeight = passedChartHeight;\n  const chartData = passedChartData;\n\n  // Props for tab panels (multiple data visualizations in the same chart area, navigate with tab panels)\n  const [currentTab, setCurrentTab] = useState(0); // start with the first tab\n  const [previousTab, setPreviousTab] = useState(0); // keep tracking of previous tab to keep displaying it if the currentTab = -1 (selecting the dropdown menu tab)\n  const [dropdownMenuTabIndex, setDropdownMenuTabIndex] = useState(initialDropdownMenuTabIndex);\n  const [dropdownMenuCurrentTitle, setDropdownMenuCurrentTitle] = useState();\n  const [anchorEl, setAnchorEl] = useState(null); // Define anchorEl state for dropdown menu\n\n  // eventListener for window resize\n  // redraw \"Calendar\" charts and charts with a time filter upon window resize.\n  // Filter & Calendar charts are not automatically respnsive, so we have to redraw them.\n  // redraw other charts when device orientation changes\n  useEffect(() => {\n    setPreviousTab(currentTab);\n    setCurrentTab(0); // set tab back to 0 if chartData changes (changed school)\n\n    let timeoutID = null;\n\n    const handleWindowResize = () => {\n      clearTimeout(timeoutID);\n\n      // debounce before triggering re-render. as user is resizing window, the state could\n      // change multiple times causing many expensive rerenders. we try to rerender at the\n      // end of the resize.\n      timeoutID = setTimeout(() => {\n        // Redraw all charts on device orientation change, as the chartWrapperHeights\n        // have changed.\n        setIsPortrait(window.matchMedia('(orientation: portrait)').matches);\n\n        // Redraw all charts on window resized\n        setWindowSize([window.innerWidth, window.innerHeight]);\n      }, debounceMilliseconds);\n    };\n\n    // listen to window resize events\n    window.addEventListener('resize', handleWindowResize);\n\n    return () => {\n      window.removeEventListener('resize', handleWindowResize);\n    };\n  }, [chartData]);\n\n  if (chartData.chartType !== 'Calendar' && !chartHeight) {\n    chartHeight = isPortrait ? '80vw' : '35vw';\n    chartMaxHeight = isPortrait ? '800px' : '500px';\n  }\n\n  // Function to render only one chart (no subchart --> no tab control)\n  const renderOnlyOneChart = () => {\n    return (\n      <SubChart\n        chartData={chartData}\n        isPortrait={isPortrait}\n        isHomepage={isHomepage}\n        windowSize={windowSize}\n        height={chartData.height ? chartData.height : chartHeight}\n      />\n    );\n  }\n\n  // Function to render multiple subcharts with tab control\n  const renderMultipleSubcharts = () => {\n    // Handle tab change\n    const handleTabChange = (__, newIndex) => {\n      setPreviousTab(currentTab);\n      setCurrentTab(newIndex);\n\n      if (needsDropdownMenu && newIndex < maxTabsToDisplay && newIndex !== dropdownMenuTabIndex) {\n        setDropdownMenuCurrentTitle();\n        setDropdownMenuTabIndex(initialDropdownMenuTabIndex);\n      }\n    };\n\n    // Determine if dropdown menu is needed\n    const needsDropdownMenu = chartData.subcharts.length > maxTabsToDisplay + 1; // maxTabsToDisplay = 3 by default, but here +1 for some leeway, some schools have 4 sensors which is still okay. But if > 4, then only display max 3\n\n    const subchartsDataForTabs = needsDropdownMenu ? chartData.subcharts.slice(0, maxTabsToDisplay) : chartData.subcharts;\n    const subchartsDataForDropDownMenu = needsDropdownMenu ? chartData.subcharts.slice(maxTabsToDisplay) : null;\n\n    // Function to handle selection from dropdown menu\n    const handleDropdownMenuSelection = (index) => {\n      setPreviousTab(currentTab);\n\n      // Because the original chartData.subcharts array was split in subchartsDataForTabs (length maxTabsToDisplay) and subchartsDataForDropDownMenu (the remaining item), the selected subcharts index is the sum of the length of subchartsDataForTabs array and the index of the selected item from subchartsDataForDropDownMenu\n      setCurrentTab(maxTabsToDisplay + index);\n\n      // Same index with the one above to keep the dropdown menu tab highlighted  \n      setDropdownMenuTabIndex(maxTabsToDisplay + index);\n\n      // Set title of the selected item in the dropdown menu to display it\n      setDropdownMenuCurrentTitle(subchartsDataForDropDownMenu[index].subchartTitleShort);\n\n      // Close the dropdown menu after selection\n      setAnchorEl(null);\n    };\n\n    const getOtherLocationsLabel = () => {\n      return (\n        <Stack direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\n          <Box flex={1}>\n            Other sensors\n            {\n              dropdownMenuCurrentTitle && ` (${dropdownMenuCurrentTitle})`\n            }\n            &nbsp;\n          </Box>\n          < ExpandMoreIcon />\n        </Stack>\n      )\n    }\n\n    const shouldDisplayThisSubchart = (index) => {\n      if (currentTab === initialDropdownMenuTabIndex) {\n        return previousTab === index;\n      } else {\n        return currentTab === index;\n      }\n    }\n\n    return (\n      <>\n        <StyledTabs\n          value={currentTab}\n          onChange={handleTabChange}\n          variant={isSmallWidth ? 'fullWidth' : 'standard'}\n        >\n          {subchartsDataForTabs.map((_, index) => (\n            <Tab\n              key={index}\n              value={index}\n              label={chartData.subcharts[index].subchartTitle}\n            />\n          ))}\n          {/* Render dropdown menu if needed */}\n          {needsDropdownMenu && (\n            <Tab\n              value={dropdownMenuTabIndex}\n              label={getOtherLocationsLabel()}\n              aria-controls=\"submenu\"\n              aria-haspopup=\"true\"\n              onClick={(event) => setAnchorEl(event.currentTarget)}\n            />\n          )}\n        </StyledTabs>\n        {\n          needsDropdownMenu && <Menu\n            id=\"submenu\"\n            anchorEl={anchorEl}\n            open={Boolean(anchorEl)}\n            onClose={() => {\n              // Reset currentTab to the previous valid tab if the user opened the menu (clicked on the drop down menu tab), but didn't select any menu item\n              if (currentTab === initialDropdownMenuTabIndex) {\n                setPreviousTab(currentTab);\n                setCurrentTab(previousTab);\n              };\n\n              // Close the menu\n              setAnchorEl(null);\n            }}\n          >\n            {/* Render remaining subchart selector in the dropdown menu */}\n            {subchartsDataForDropDownMenu.map((_, index) => (\n              <StyledMenuItem\n                key={index}\n                selected={index === currentTab - maxTabsToDisplay}\n                onClick={() => handleDropdownMenuSelection(index)}\n              >\n                <Stack direction=\"row\" alignItems=\"center\" gap={1}>\n                  <Box>\n                    {subchartsDataForDropDownMenu[index].subchartTitle}\n                  </Box>\n                  {\n                    (index === currentTab - maxTabsToDisplay) &&\n                    <VisibilityIcon fontSize=\"1rem\" sx={{ color: 'text.secondary' }} />\n                  }\n                </Stack>\n              </StyledMenuItem>\n            ))}\n          </Menu>\n        }\n        <Box\n          position=\"relative\"\n          sx={{\n            overflowX: isPortrait && 'auto',\n            WebkitOverflowScrolling: isPortrait && 'touch',\n            overflowY: 'hidden',\n          }}\n        >\n          {chartData.subcharts.map((__, index) => (\n            <Box\n              key={index}\n              width=\"100%\"\n              height=\"100%\"\n              role=\"tabpanel\"\n              sx={{\n                transition: '0.35s',\n                position: (index === 0) ? '' : 'absolute',\n                opacity: shouldDisplayThisSubchart(index) ? '1' : '0',\n                pointerEvents: shouldDisplayThisSubchart(index) ? 'auto' : 'none',\n                top: (index === 0) ? '' : 0,\n              }}\n            >\n              <SubChart\n                chartData={chartData}\n                subchartIndex={index}\n                isPortrait={isPortrait}\n                isHomepage={isHomepage}\n                windowSize={windowSize}\n                height={chartData.height ? chartData.height : chartHeight}\n                maxHeight={\n                  ['Calendar'].includes(chartData.chartType)\n                    ? ''\n                    : chartMaxHeight\n                }\n              />\n            </Box>\n          ))}\n        </Box>\n      </>\n    )\n  };\n\n  // Function to render remaining subtitles and references for chart with multiple subcharts\n  const getSubtitles = () => {\n    let text = generalChartSubtitle || '';\n    if (chartData.subcharts && chartData.subcharts[currentTab]?.subchartSubtitle) {\n      text += '<br/>'\n      text += chartData.subcharts[currentTab].subchartSubtitle;\n    }\n    return text;\n  }\n  const getReferences = () => {\n    let text = generalChartReference || '';\n    if (chartData.subcharts && chartData.subcharts[currentTab]?.reference) {\n      text += '<br/>'\n      text += chartData.subcharts[currentTab].reference;\n    }\n    return text;\n  }\n\n  return (\n    <ChartStyleWrapper height=\"100%\">\n      {chartData.subcharts ? renderMultipleSubcharts() : renderOnlyOneChart()}\n\n      {/* Render subtitle and reference below */}\n      <Box sx={{ my: 3 }}>\n        <Typography\n          component=\"div\"\n          variant=\"body1\"\n          color=\"text.secondary\"\n          sx={{ mb: 1 }}\n        >\n          <CollapsibleSubtitle\n            text={getSubtitles()}\n            reference={getReferences()}\n          />\n        </Typography>\n      </Box>\n    </ChartStyleWrapper>\n  );\n}\n\nexport default ChartComponentWrapper;\n"],"names":["Explanation","AQIexplanation","themePreference","useContext","PreferenceContext","_jsx","ExpandableSection","title","content","_jsxs","_Fragment","children","AirQualityIndexTable","Typography","component","variant","color","sx","mt","parse","replace","replacePlainHTMLWithMuiComponents","StyledTable","styled","Table","_ref","theme","isTiny","minWidth","fontSize","palette","text","secondary","breakpoints","down","fontWeight","primary","lineHeight","props","hideAQIDescription","returnFormattedBreakpoints","low","high","Infinity","concat","Box","overflow","size","TableHead","TableRow","TableCell","pr","width","height","pl","align","TableBody","AQIdatabase","map","element","index","border","backgroundColor","ThemePreferences","light","lightThemeColor","darkThemeColor","category","aqiUS","rawPM2_5","description","healthSuggestions","outdoors","_ref2","shouldRender","aqiChart","ticks","dataArray","i","length","push","Math","ceil","v","f","ChartComponentWrapper","chartHeight","chartData","chartType","options","enableInteractivity","legend","position","hAxis","chartArea","portrait","landscape","isStacked","colors","bar","groupWidth","renderAQIchart","StyledAccordion","MuiAccordion","expanded","backgroundImage","background","default","boxShadow","shadows","transition","StyledAccordionSummary","MuiAccordionSummary","marginTop","spacing","flexDirection","paddingLeft","textDecoration","main","marginBottom","TooltipText","_ref3","setExpanded","useState","undefined","onChange","panel","event","isExpanded","Tracking","expandSection","collapseSection","section","transitionDuration","expandIcon","ArrowDropDownIcon","id","Tooltip","enterDelay","leaveDelay","InfoIcon","marginLeft","MuiAccordionDetails","SELECT_ALL","ITEM_HEIGHT","ITEM_PADDING_TOP","SeriesSelector","items","itemsFromChart","selectorID","allowMultiple","seriesLabel","onSeriesSelection","displayChip","useTheme","MenuProps","PaperProps","style","maxHeight","customAlternateBackground","anchorOrigin","vertical","horizontal","transformOrigin","getContentAnchorEl","setItems","selectAll","setSelectAll","useEffect","every","item","selected","handleChange","target","value","includes","updatedItems","newDataColumns","selectedItems","filter","label","some","selectedItem","handleItemToggle","existingItem","Stack","direction","alignItems","FormControl","borderRadius","shape","Select","labelId","multiple","renderValue","VisibilityIcon","renderedLabel","MenuItem","disabled","Checkbox","checked","onClick","p","transform","Radio","borderTop","borderColor","bottom","zIndex","justifyContent","Switch","Grid","container","display","Chip","onDelete","ChartControlType","CategoryFilter","stackDirection","DateRangeFilter","ChartRangeFilter","NumberRangeFilter","getDateRangeForCalendarChart","dateStrings","min","reduce","current","max","getValueRangeForCalendarChart","values","generateRandomID","random","toString","substr","hideAnnotations","stem","textStyle","opacity","boxStyle","returnResponsiveFontSizeInPixels","isPortrait","isSmaller","returnGenericOptions","_chartData$subcharts","_chartData$options","_chartData$options2","_chartData$options3","_chartData$options3$c","_chartData$options3$c2","_chartData$options4","_chartData$options4$c","_chartData$options4$c2","_chartData$options5","_chartData$options5$c","_chartData$options5$c2","_chartData$options6","_chartData$options6$c","_chartData$options6$c2","_chartData$options7","_chartData$options7$w","_chartData$options8","_chartData$options8$w","_chartData$options$le","_chartData$options9","_chartData$options9$l","_options$vAxis$format","_options$vAxis","_options$vAxis$title","_options$vAxis2","_options$vAxis$viewWi","_options$vAxis3","_options$vAxis3$viewW","_options$vAxis$viewWi2","_options$vAxis4","_options$vAxis4$viewW","_options$vAxis$viewWi3","_options$vAxis5","_options$vAxis5$viewW","_options$hAxis$title","_options$hAxis","_options$vAxis6","_options$vAxis7","_options$vAxis7$gridl","_options$hAxis2","_options$hAxis3","_options$hAxis3$gridl","_options$hAxis4","_options$hAxis5","_options$hAxis5$gridl","_options$annotations","subchartIndex","isHomepage","axisTitleTextStyle","italic","bold","chart","axisTitle","axisTextStyle","axisText","subcharts","curveType","crosshair","orientation","trigger","fill","tooltip","isHtml","showColorCode","alignment","scrollArrows","activeColor","inactiveColor","pagingTextStyle","vAxis","format","viewWindow","slantedText","slantedTextAngle","optionsColors","series","Object","forEach","_serie","serie","trendlines","_item","colorAxis","colorAxisFirstColor","multiColor","colorIndex","NYUpurple","aqiColorAxis","temperatureColorAxis","humidityColorAxis","titleTextStyle","gridlines","minorGridlines","count","annotations","highContrast","contrastText","thickness","rx","ry","annotationBoxFill","fillOpacity","seriesSelector","pointSize","textPosition","viewWindowMode","returnCalendarChartOptions","existingOptions","calendarDimensions","calculateCalendarDimensions","cellSizeMin","cellSizeMax","chartWidth","calendar","cellSize","yearLabel","yearLabelFontSize","noDataPattern","returnChartControlUI","_chartControl$options","chartControl","mainChartData","mainChartOptions","chartControlUI","ui","snapToData","controlType","chartView","columns","chartOptions","window","innerWidth","addTouchEventListenerForChartControl","_ref4","controlWrapper","chartID","touchHandler","first","changedTouches","type","simulatedEvent","MouseEvent","bubbles","cancelable","view","detail","screenX","screenY","clientX","clientY","button","relatedTarget","dispatchEvent","preventDefault","isMounted","controlDOM","document","querySelector","touchEvent","addEventListener","capture","removeEventListener","maxWidth","padding","mozBoxShadow","webkitBoxShadow","secondaryRGB","margin","verticalAlign","paper","paddingTop","paddingBottom","paddingRight","borderWidth","top","left","right","stroke","strokeWidth","cursor","yearSpacing","getCalendarChartMargin","CalendarChart","_options$colorAxis","_options$colorAxis2","_options$colorAxis3","_options$legend","_options$colorAxis4","_options$colorAxis5","data","dateRange","valueRange","allowedDataTypes","calendarChartMargin","inFirstTwoRowsOfChart","dateStr","date","Date","dayOfWeek","getDay","isFirstTwoDaysOfWeek","firstYear","getFullYear","isInFirstYear","isGradient","generateColorGradient","showLegend","ValueRangeBox","MenuList","dense","datatype","ResponsiveCalendar","from","to","emptyColor","mode","axis","line","grid","minValue","maxValue","monthBorderColor","monthBorderWidth","daySpacing","dayBorderWidth","day","tooltipData","find","tooltipText","DOMParser","parseFromString","body","innerHTML","CustomTooltip","tooltipBoxRef","useRef","parentDiv","parentElement","ref","className","mr","backgroundStyle","array","join","stops","cs","stop","minStop","maxStop","normalizedColors","calculatePosition","containerStyle","float","gradientStyle","discreteBoxStyle","flex","labelStyle","triangleStyle","borderLeft","borderRight","steps","hexToRgb","hex","m","r","g","b","result","exec","parseInt","rgbToHex","x","interpolateColor","color1","color2","factor","slice","round","colorStops","totalColors","normalizeStops","colorArray","stepPositions","Array","_","stop1","stop2","pos","j","interpolatedColor","returnCustomStaticRanges","today","minDateOfDataset","aggregationType","hourlyReturn","range","startDate","startOfDay","addDays","endDate","endOfDay","dailyReturn","AggregationType","hourly","StyledDateRangePicker","Paper","showPickerPanel","smallScreen","action","visibility","customBackground","borderTopRightRadius","borderBottomRightRadius","borderTopLeftRadius","borderBottomLeftRadius","overflowY","AggregationTypeToggle","setAggregationType","ToggleButtonGroup","exclusive","newType","ToggleButton","textTransform","px","py","daily","InvalidRangeMessages","displayErrorMessage","invalidRangeMessage","Alert","severity","currentSchoolID","setIndividualChartData","DashboardContext","setInvalidRangeMessage","useMediaQuery","selectedRange","setSelectedRange","key","chartUrl","setChartUrl","setShowPickerPanel","paperRef","isFetchingData","setIsFetchingData","handleClickOutside","contains","checkValidRange","isSameDay","diff","differenceInDays","elevation","DateRangePicker","ranges","selection","staticRanges","createStaticRanges","inputRanges","rangeColors","minDate","maxDate","months","showMonthAndYearPickers","fixedHeight","preventSnapRefocus","calendarFocus","startDatePlaceholder","endDatePlaceholder","editableDateInputs","showMonthArrow","Button","stopPropagation","newUrl","getHistoricalChartApiUrl","endpoint","ChartEndpoints","historical","school_id","fetchDataFromURL","url","extension","needsAuthorization","then","catch","error","console","log","CircularProgress","disableShrink","SubChart","windowSize","customClassName","google","GoogleContext","dataTable","setDataTable","chartWrapper","setChartWrapper","dashboardWrapper","setDashboardWrapper","setControlWrapper","previousChartData","setPreviousChartData","isFirstRender","setIsFirstRender","allInitialColumns","setAllInitialColumns","dataColumns","setDataColumns","initialVAxisRange","setInitialVAxisRage","__","chartTotalHeight","setChartTotalHeight","useMemo","opts","calendarData","setCalendarData","calendarHeight","setCalendarHeight","containerWidth","setContainerWidth","startYear","numberOfYear","yearHeight","totalHeight","GoogleChartStyleWrapper","minHeight","LoadingAnimation","chartControlOptions","hasChartControl","control","dateRangePicker","handleSeriesSelection","setOptions","draw","method","setInitialColumnsColors","col","_options$series2","seriesIndex","serieAttribute","getInitialVAxisRange","vAxisMin","vAxisMax","getColumnRange","sourceColumn","isNaN","_allInitialColumns","_chartWrapper","_controlWrapper","hiddenSeriesObject","visibleInLegend","currentControlOptions","getOptions","newViewColumns","dataColumn","indexIn_","role","setView","newOptions","selectedSeriesCount","JSON","stringify","thisDataTable","visualization","arrayToDataTable","reconstructedColumns","evaluatedColumns","column","calc","calcFunction","Function","reconstructFunctionFromJSONstring","thisChartWrapper","ChartWrapper","containerId","thisControlWrapper","thisDashboardWrapper","Dashboard","getElementById","events","addListener","onChartReady","ControlWrapper","bind","initAllInitialColumns","initDataColumns","initialView","getView","viewFromDataTable","DataView","shouldAssignDomainRoleToFistColumn","dataSeriesIndex","getColumnLabel","indexInAllInitialColumns","defaultSeriesToDisplayInitially","_options$series","_options$series$col$s","getInitialColumns","gap","CustomDateRangePicker","renderChart","_ChartControlType$cha","wordLimit","reference","setIsExpanded","isMobile","subtitleRef","words","split","displayText","lastFullStop","lastIndexOf","ClickAwayListener","onClickAway","subtitleParent","closest","chartElements","Set","has","tagName","parentNode","isClickWithinSharedParent","ml","ChartStyleWrapper","overflowX","scrollbarGutter","StyledTabs","Tabs","StyledMenuItem","generalChartSubtitle","generalChartReference","passedChartData","passedChartHeight","isSmallWidth","setIsPortrait","matchMedia","matches","setWindowSize","innerHeight","chartMaxHeight","currentTab","setCurrentTab","previousTab","setPreviousTab","dropdownMenuTabIndex","setDropdownMenuTabIndex","dropdownMenuCurrentTitle","setDropdownMenuCurrentTitle","anchorEl","setAnchorEl","timeoutID","handleWindowResize","clearTimeout","setTimeout","renderMultipleSubcharts","needsDropdownMenu","maxTabsToDisplay","subchartsDataForTabs","subchartsDataForDropDownMenu","shouldDisplayThisSubchart","handleTabChange","newIndex","Tab","subchartTitle","ExpandMoreIcon","currentTarget","Menu","open","Boolean","onClose","subchartTitleShort","handleDropdownMenuSelection","WebkitOverflowScrolling","pointerEvents","my","mb","CollapsibleSubtitle","getSubtitles","_chartData$subcharts$","subchartSubtitle","getReferences","_chartData$subcharts$2"],"sourceRoot":""}