{"version":3,"file":"static/js/871.915263a9.chunk.js","mappings":"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","sources":["Components/AirQuality/AQIexplanation.jsx","Components/AirQuality/AirQualityIndexTable.jsx","Components/ExpandableSection.jsx","Pages/Home/About.jsx","Pages/Home/GetInTouch.jsx","Pages/Home/Home.jsx"],"sourcesContent":["import { useContext } from 'react';\nimport { Typography } from '@mui/material';\nimport parse from 'html-react-parser';\nimport { replacePlainHTMLWithMuiComponents } from '../../Utils/Utils';\nimport AirQualityIndexTable from './AirQualityIndexTable';\nimport ExpandableSection from '../ExpandableSection';\nimport { PreferenceContext } from '../../ContextProviders/PreferenceContext';\n\nconst Explanation = {\n  title: \"Explanation of the US Air Quality Index (AQI) for PM2.5\",\n  subtitle: \"CITIESair uses the <a href='https://www.airnow.gov/aqi/aqi-basics/'>Air Quality Index (AQI)</a> developed by the United States Environmental Protection Agency (EPA) to effectively communicate different levels of PM2.5 air pollution. To calculate the AQI from the raw measurement of PM2.5 concentration (µg/m³), different breakpoints and piecewise linear function are utilized (read more <a href='https://en.wikipedia.org/wiki/Air_quality_index#United_States'>here</a>). Higher AQI values correspond to poorer air quality and greater heath risks to humans.<br><br>The US EPA sets thresholds for PM2.5 concentration, recently updated in February 2024: <sup>[1]</sup><ul><li><b>Annual average</b>: 9.0 µg/m³, corresponding to US AQI <b>50</b></li><li><b>24-hour average</b>: 35.0 µg/m³, corresponding to US AQI <b>100</b></li></ul>In 2021, the World's Heath Organization (WHO) proposed a new guideline for PM2.5<sup>[2]</sup> with stricter thresholds than those of the US EPA:<ul><li><b>Annual average</b>: 5.0 µg/m³, corresponding to US AQI <b>21</b></li><li><b>24-hour average</b>: 15.0 µg/m³, corresponding to US AQI <b>56</b></li></ul>\",\n  reference: \"[1] \\\"National Ambient Air Quality Standards (NAAQS) for PM.\\\" EPA, Environmental Protection Agency, https://www.epa.gov/pm-pollution/national-ambient-air-quality-standards-naaqs-pm.<br>[2] World Health Organization. \\\"WHO global air quality guidelines: particulate matter (PM2. 5 and PM10), ozone, nitrogen dioxide, sulfur dioxide and carbon monoxide: executive summary.\\\" (2021).\",\n}\n\nconst AQIexplanation = () => {\n  const { themePreference } = useContext(PreferenceContext);\n\n  return (\n    <ExpandableSection\n      title={Explanation.title}\n      content={(\n        <>\n          <AirQualityIndexTable themePreference={themePreference} />\n          <Typography\n            component=\"div\"\n            variant=\"body1\"\n            color=\"text.secondary\"\n            sx={{ mt: 2 }}\n          >\n            {parse(Explanation.subtitle, {\n              replace: replacePlainHTMLWithMuiComponents,\n            })}\n          </Typography>\n          <ExpandableSection\n            title={\"Reference\"}\n            content={(\n              <Typography variant=\"caption\" color=\"text.secondary\">\n                {parse(Explanation.reference, {\n                  replace: replacePlainHTMLWithMuiComponents,\n                })}\n              </Typography>\n            )}\n          />\n        </>\n      )}\n    />\n  )\n};\n\nexport default AQIexplanation;","import { Box, Table, TableBody, TableCell, TableHead, TableRow, styled } from '@mui/material';\nimport parse from 'html-react-parser';\nimport { replacePlainHTMLWithMuiComponents } from '../../Utils/Utils';\nimport AQIdatabase from '../../Utils/AirQuality/AirQualityIndexHelper';\nimport { useContext } from 'react';\nimport { PreferenceContext } from '../../ContextProviders/PreferenceContext';\n\nexport const StyledTable = styled(Table)(({ theme, isTiny }) => ({\n  minWidth: isTiny || 700,\n  '& th, td': {\n    fontSize: isTiny ? '0.625rem' : '0.6875rem',\n    color: theme.palette.text.secondary,\n    [theme.breakpoints.down('sm')]: {\n      fontSize: isTiny ? '0.5rem' : '0.6875rem',\n    },\n  },\n  '& th': {\n    fontWeight: 500,\n    color: theme.palette.text.primary,\n    lineHeight: '1rem'\n  }\n}));\n\nfunction AirQualityIndexTable(props) {\n  const { themePreference } = useContext(PreferenceContext);\n\n  const { isTiny, hideAQIDescription } = props;\n\n  const returnFormattedBreakpoints = (low, high) => {\n    if (high === Infinity) return `${low}+`;\n    else return `${low} - ${high}`;\n  }\n\n  return (\n    <>\n      <Box overflow=\"auto\">\n        <StyledTable size=\"small\" isTiny={isTiny}>\n          <TableHead>\n            <TableRow>\n              <TableCell sx={{ pr: 0 }}>\n                <Box sx={{ width: '1em', height: '1em' }} />\n              </TableCell>\n              <TableCell sx={{ pl: 1 }}>\n                Category\n              </TableCell>\n              <TableCell align=\"right\">US AQI</TableCell>\n              <TableCell align=\"right\">\n                PM2.5\n                (µg/m\n                <sup>3</sup>\n                )\n              </TableCell>\n              {!hideAQIDescription && <TableCell align=\"left\">Description</TableCell>}\n              {!hideAQIDescription && <TableCell align=\"left\">CITIESair&apos; Suggested Actions</TableCell>}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {AQIdatabase.map((element, index) => (\n              <TableRow\n                key={index}\n                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n              >\n                <TableCell sx={{ pr: 0 }}>\n                  <Box sx={{ width: '1em', height: '1em', backgroundColor: element.color[themePreference] }} />\n                </TableCell>\n                <TableCell sx={{ pl: 1 }}>\n                  {element.category}\n                </TableCell>\n                <TableCell align=\"right\" sx={{ whiteSpace: \"nowrap\" }}>\n                  {returnFormattedBreakpoints(element.aqiUS.low, element.aqiUS.high)}\n                </TableCell>\n                <TableCell align=\"right\" sx={{ whiteSpace: \"nowrap\" }}>\n                  {returnFormattedBreakpoints(element.rawPM2_5.low, element.rawPM2_5.high)}\n                </TableCell>\n                {!hideAQIDescription && <TableCell align=\"left\">{element.description}</TableCell>}\n                {!hideAQIDescription\n                  && (\n                    <TableCell align=\"left\">\n                      {\n                        parse(element.healthSuggestions.outdoors, {\n                          replace: replacePlainHTMLWithMuiComponents,\n                        })\n                      }\n                    </TableCell>\n                  )}\n              </TableRow>\n            ))}\n          </TableBody>\n        </StyledTable>\n      </Box>\n    </>\n  );\n}\n\nexport default AirQualityIndexTable;\n","// disable eslint for this file\n/* eslint-disable */\nimport { useState } from 'react';\nimport { styled } from '@mui/material/styles';\n\nimport MuiAccordion from '@mui/material/Accordion';\nimport MuiAccordionSummary from '@mui/material/AccordionSummary';\nimport MuiAccordionDetails from '@mui/material/AccordionDetails';\nimport { Box, Typography, Tooltip } from '@mui/material';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport InfoIcon from '@mui/icons-material/Info';\nimport * as Tracking from '../Utils/Tracking';\n\nconst StyledAccordion = styled(MuiAccordion)(({ theme, expanded }) => ({\n  color: theme.palette.text.secondary,\n  backgroundImage: 'none',\n  backgroundColor: expanded ? theme.palette.background.default : 'transparent',\n  boxShadow: expanded ? theme.shadows : 'none',\n  transition: 'none',\n}));\n\nconst StyledAccordionSummary = styled(MuiAccordionSummary)(({ theme, expanded }) => ({\n  marginTop: expanded ? theme.spacing(2) : 0,\n  flexDirection: 'row-reverse',\n  paddingLeft: expanded ? theme.spacing(1) : 0,\n  '& .MuiTypography-root': {\n    color: theme.palette.text.primary,\n    textDecoration: 'underline',\n    transition: 'none',\n    '&:hover': {\n      color: theme.palette.primary.main,\n    },\n  },\n  '& .MuiAccordionSummary-content.Mui-expanded': {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2)\n  }\n}));\n\nconst TooltipText = {\n  expand: \"Click to expand section\",\n  collapse: \"Click to collapse section\"\n}\n\nconst ExpandableSection = ({ title, content }) => {\n  const [expanded, setExpanded] = useState(undefined);\n\n  const handleAccordionChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : undefined);\n    Tracking.sendEventAnalytics(\n      isExpanded ? Tracking.Events.expandSection : Tracking.Events.collapseSection,\n      {\n        section: title\n      }\n    );\n  };\n\n  return (\n    <Box>\n      <StyledAccordion\n        expanded={expanded === \"panel1\"}\n        onChange={handleAccordionChange(\"panel1\")}\n        transitionDuration={0}\n      >\n        <StyledAccordionSummary expanded={expanded} expandIcon={<ArrowDropDownIcon />} aria-controls=\"panel1a-content\" id=\"panel1a-header\">\n          <Tooltip title={expanded ? TooltipText.collapse : TooltipText.expand} enterDelay={0} leaveDelay={200}>\n            <Typography component=\"a\" variant=\"body1\">\n              {title}\n              <InfoIcon sx={{ fontSize: \"1rem\", marginLeft: \"0.25rem\" }} />\n            </Typography>\n          </Tooltip>\n        </StyledAccordionSummary>\n        <MuiAccordionDetails>\n          {content}\n        </MuiAccordionDetails>\n      </StyledAccordion>\n    </Box>\n  );\n}\n\nexport default ExpandableSection;","import { Stack, Typography, Paper } from '@mui/material';\n\nimport parse from 'html-react-parser';\nimport UppercaseTitle from '../../Components/UppercaseTitle';\nimport ExpandableSection from '../../Components/ExpandableSection';\nimport jsonData from '../../section_data.json';\nimport { replacePlainHTMLWithMuiComponents, capitalizePhrase } from '../../Utils/Utils';\n\nfunction About() {\n  return (\n    <>\n      <UppercaseTitle text={capitalizePhrase(jsonData.about.id)} />\n      <Stack spacing={3}>\n        {jsonData.about.content.map((element, index) => (\n          <Paper key={index} elevation={2} sx={{ p: 3 }}>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              {parse(element.mainText, {\n                replace: replacePlainHTMLWithMuiComponents,\n              })}\n            </Typography>\n            {\n              element.reference && (\n                <ExpandableSection\n                  title={\"Reference\"}\n                  content={(\n                    <Typography variant=\"caption\" color=\"text.secondary\">\n                      {parse(element.reference, {\n                        replace: replacePlainHTMLWithMuiComponents,\n                      })}\n                    </Typography>\n                  )}\n                />\n              )\n            }\n          </Paper>\n        ))}\n        <Typography variant=\"caption\" color=\"text.secondary\" sx={{ px: 3 }}>\n          {parse(jsonData.disclaimer.content, {\n            replace: replacePlainHTMLWithMuiComponents,\n          })}\n        </Typography>\n      </Stack>\n    </>\n  );\n}\n\nexport default About;\n","import { Typography, Paper } from '@mui/material';\n\nimport parse from 'html-react-parser';\nimport UppercaseTitle from '../../Components/UppercaseTitle';\n\nimport jsonData from '../../section_data.json';\nimport { replacePlainHTMLWithMuiComponents, capitalizePhrase } from '../../Utils/Utils';\n\nfunction GetInTouch() {\n  return (\n    <>\n      <UppercaseTitle text={capitalizePhrase(jsonData.getInTouch.id)} />\n      <Paper elevation={2} sx={{ p: 3, pb: 1 }}>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          {parse(jsonData.getInTouch.content, {\n            replace: replacePlainHTMLWithMuiComponents,\n          })}\n        </Typography>\n      </Paper>\n    </>\n  );\n}\n\nexport default GetInTouch;\n","import { useEffect, useContext, useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\nimport { Button, Box, Grid, Typography, Container, Divider } from '@mui/material';\nimport { LinkContext } from '../../ContextProviders/LinkContext';\n\nimport UppercaseTitle from '../../Components/UppercaseTitle';\nimport FullWidthBox from '../../Components/FullWidthBox';\n\n// import AtAGlance from './AtAGlance';\nimport About from './About';\n\nimport jsonData from '../../section_data.json';\n\nimport * as Tracking from '../../Utils/Tracking';\nimport parse from 'html-react-parser';\nimport { replacePlainHTMLWithMuiComponents } from '../../Utils/Utils';\n\nimport AQImap, { TileOptions } from '../../Components/AirQuality/AQImap';\n\nimport CurrentAQIGrid from '../../Components/AirQuality/CurrentAQIGrid';\nimport { GeneralEndpoints, fetchAndProcessCurrentSensorsData, getApiUrl } from '../../Utils/ApiUtils';\n\nimport BarChartIcon from '@mui/icons-material/BarChart';\nimport GetInTouch from './GetInTouch';\nimport { UniqueRoutes } from '../../Utils/RoutesUtils';\nimport { SensorStatus } from \"../../Components/AirQuality/SensorStatus\";\nimport AQIexplanation from '../../Components/AirQuality/AQIexplanation';\n\nconst displayNyuadSensorCounts = (nyuadSensorCounts) => {\n  if (nyuadSensorCounts.active && nyuadSensorCounts.total) {\n    return (\n      <Typography variant='body2' color=\"text.secondary\">\n        <b>NYUAD sensors status: </b>{nyuadSensorCounts.active} active out of {nyuadSensorCounts.total}\n      </Typography>\n    );\n  }\n  else return null;\n}\n\nfunction Home({ themePreference, temperatureUnitPreference, title }) {\n  // Update the page's title\n  useEffect(() => {\n    document.title = title;\n  }, [title]);\n\n  const { setCurrentPage, setChartsTitlesList } = useContext(LinkContext);\n\n  // set underline link to home\n  useEffect(() => {\n    setCurrentPage(UniqueRoutes.home);\n    setChartsTitlesList([]);\n  }, [setCurrentPage, setChartsTitlesList]);\n\n  // Fetch public NYUAD sensors data and public map data\n  const [nyuadCurrentSensorData, setNyuadCurrentSensorData] = useState({});\n  const [nyuadSensorCounts, setNyuadSensorCounts] = useState({\n    active: null,\n    total: null\n  });\n  const [rawMapData, setRawMapData] = useState();\n\n  useEffect(() => {\n    const nyuadUrl = getApiUrl({ endpoint: GeneralEndpoints.current, school_id: 'nyuad' });\n    fetchAndProcessCurrentSensorsData(nyuadUrl)\n      .then((data) => {\n        // Only display 3 sensors in the homepage\n        const selectedSensorData = data.slice(0, 3);\n        setNyuadCurrentSensorData(selectedSensorData);\n\n        // Count the number of active sensors at NYUAD to display it\n        const activeSensorCount = data.reduce((count, obj) => {\n          return obj?.current?.sensor_status === SensorStatus.active ? count + 1 : count;\n        }, 0);\n        setNyuadSensorCounts({\n          active: activeSensorCount,\n          total: data.length\n        });\n      })\n      .catch((error) => console.log(error));\n\n    const mapUrl = getApiUrl({ endpoint: GeneralEndpoints.map });\n    fetchAndProcessCurrentSensorsData(mapUrl)\n      .then((data) => {\n        setRawMapData(data)\n      })\n      .catch((error) => console.log(error));\n  }, []);\n\n\n  return (\n    <Box width=\"100%\">\n      <FullWidthBox>\n        <Container sx={{ pt: 3, pb: 4 }}>\n          <UppercaseTitle text=\"real-time air quality at NYUAD\" />\n          <Typography variant='body1' color='text.secondary' sx={{ mt: -2, mb: 2 }}>\n            PM2.5 (Particulate Matter Smaller Than 2.5 Micrometer)\n          </Typography>\n\n          <Grid container spacing={2} justifyContent=\"center\" textAlign=\"center\">\n            <Grid item xs={12} lg={10}>\n              <CurrentAQIGrid\n                currentSensorsData={nyuadCurrentSensorData}\n                isScreen={false}\n                temperatureUnitPreference={temperatureUnitPreference}\n                firstSensorOwnLine={true}\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              {displayNyuadSensorCounts(nyuadSensorCounts)}\n            </Grid>\n\n            <Grid item container xs={12}>\n              <Grid item xs={12}>\n                <Button\n                  component={RouterLink}\n                  variant='contained'\n                  sx={{ width: \"fit-content\", mb: 1 }}\n                  to={UniqueRoutes.nyuad}\n                  onClick={() => {\n                    Tracking.sendEventAnalytics(\n                      Tracking.Events.internalNavigation,\n                      {\n                        destination_id: UniqueRoutes.nyuad,\n                        destination_school_id: \"nyuad\",\n                        origin_id: UniqueRoutes.home\n                      }\n                    );\n                  }}\n                >\n                  <BarChartIcon sx={{ fontSize: '0.8rem' }} />&nbsp;NYUAD Dashboard (Public Access)\n                </Button>\n              </Grid>\n              <Grid item xs={12}>\n                <Typography variant=\"caption\" color=\"text.secondary\">\n                  See detailed analysis of historical air quality data at NYUAD\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n\n          <AQIexplanation />\n\n        </Container>\n      </FullWidthBox>\n\n      <FullWidthBox sx={{ backgroundColor: 'customAlternateBackground' }}>\n        <Container sx={{ py: 3 }}>\n          <UppercaseTitle text=\"public outdoor stations\" />\n          <Typography variant=\"body1\" color=\"text.secondary\">\n            {parse(jsonData.publicOutdoorStations.content, {\n              replace: replacePlainHTMLWithMuiComponents,\n            })}\n          </Typography>\n        </Container>\n        <AQImap\n          tileOption={TileOptions.default}\n          themePreference={themePreference}\n          temperatureUnitPreference={temperatureUnitPreference}\n          centerCoordinates={[24.46, 54.52]}\n          maxBounds={[\n            [22.608292, 51.105185],\n            [26.407575, 56.456571],\n          ]}\n          rawMapData={rawMapData}\n          ariaLabel={\"Map of CITIESair public outdoor air quality stations in Abu Dhabi\"}\n\n        />\n\n      </FullWidthBox>\n\n      <Divider />\n\n      <FullWidthBox id={jsonData.about.id} sx={{ pt: 3, pb: 4 }}>\n        <Container>\n          <About />\n        </Container>\n      </FullWidthBox>\n\n      <Divider />\n\n      <FullWidthBox id={jsonData.getInTouch.id} sx={{ pt: 3, pb: 4 }}>\n        <Container>\n          <GetInTouch />\n        </Container>\n      </FullWidthBox>\n\n    </Box >\n  );\n}\n\nexport default Home;\n"],"names":["Explanation","AQIexplanation","themePreference","useContext","PreferenceContext","_jsx","ExpandableSection","title","content","_jsxs","_Fragment","children","AirQualityIndexTable","Typography","component","variant","color","sx","mt","parse","replace","replacePlainHTMLWithMuiComponents","StyledTable","styled","Table","_ref","theme","isTiny","minWidth","fontSize","palette","text","secondary","breakpoints","down","fontWeight","primary","lineHeight","props","hideAQIDescription","returnFormattedBreakpoints","low","high","Infinity","concat","Box","overflow","size","TableHead","TableRow","TableCell","pr","width","height","pl","align","TableBody","AQIdatabase","map","element","index","border","backgroundColor","category","whiteSpace","aqiUS","rawPM2_5","description","healthSuggestions","outdoors","StyledAccordion","MuiAccordion","expanded","backgroundImage","background","default","boxShadow","shadows","transition","StyledAccordionSummary","MuiAccordionSummary","_ref2","marginTop","spacing","flexDirection","paddingLeft","textDecoration","main","marginBottom","TooltipText","_ref3","setExpanded","useState","undefined","onChange","panel","event","isExpanded","Tracking","expandSection","collapseSection","section","transitionDuration","expandIcon","ArrowDropDownIcon","id","Tooltip","enterDelay","leaveDelay","InfoIcon","marginLeft","MuiAccordionDetails","UppercaseTitle","capitalizePhrase","jsonData","Stack","Paper","elevation","p","mainText","reference","px","pb","displayNyuadSensorCounts","nyuadSensorCounts","active","total","temperatureUnitPreference","useEffect","document","setCurrentPage","setChartsTitlesList","LinkContext","UniqueRoutes","home","nyuadCurrentSensorData","setNyuadCurrentSensorData","setNyuadSensorCounts","rawMapData","setRawMapData","nyuadUrl","getApiUrl","endpoint","GeneralEndpoints","current","school_id","fetchAndProcessCurrentSensorsData","then","data","selectedSensorData","slice","activeSensorCount","reduce","count","obj","_obj$current","sensor_status","SensorStatus","length","catch","error","console","log","mapUrl","FullWidthBox","Container","pt","mb","Grid","container","justifyContent","textAlign","item","xs","lg","CurrentAQIGrid","currentSensorsData","isScreen","firstSensorOwnLine","Button","RouterLink","to","nyuad","onClick","internalNavigation","destination_id","destination_school_id","origin_id","BarChartIcon","py","AQImap","tileOption","TileOptions","centerCoordinates","maxBounds","ariaLabel","Divider","About","GetInTouch"],"sourceRoot":""}