{"version":3,"file":"static/js/871.00adec1a.chunk.js","mappings":"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","sources":["Components/ExpandableSection.jsx","Pages/Home/About.jsx","Pages/Home/GetInTouch.jsx","Pages/Home/Home.jsx"],"sourcesContent":["// disable eslint for this file\n/* eslint-disable */\nimport { useState } from 'react';\nimport { styled } from '@mui/material/styles';\n\nimport MuiAccordion from '@mui/material/Accordion';\nimport MuiAccordionSummary from '@mui/material/AccordionSummary';\nimport MuiAccordionDetails from '@mui/material/AccordionDetails';\nimport { Box, Typography, Tooltip } from '@mui/material';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport InfoIcon from '@mui/icons-material/Info';\nimport * as Tracking from '../Utils/Tracking';\n\nconst StyledAccordion = styled(MuiAccordion)(({ theme, expanded }) => ({\n  color: theme.palette.text.secondary,\n  backgroundImage: 'none',\n  backgroundColor: expanded ? theme.palette.background.default : 'transparent',\n  boxShadow: expanded ? theme.shadows : 'none',\n  transition: 'none',\n}));\n\nconst StyledAccordionSummary = styled(MuiAccordionSummary)(({ theme, expanded }) => ({\n  marginTop: expanded ? theme.spacing(3) : 0,\n  flexDirection: 'row-reverse',\n  paddingLeft: expanded ? theme.spacing(1) : 0,\n  '& .MuiTypography-root': {\n    color: theme.palette.text.primary,\n    textDecoration: 'underline',\n    transition: 'none',\n    '&:hover': {\n      color: theme.palette.primary.main,\n    },\n  },\n}));\n\nconst TooltipText = {\n  expand: \"Click to expand section\",\n  collapse: \"Click to collapse section\"\n}\n\nconst ExpandableSection = ({ title, content }) => {\n  const [expanded, setExpanded] = useState(undefined);\n\n  const handleAccordionChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : undefined);\n    Tracking.sendEventAnalytics(\n      isExpanded ? Tracking.Events.expandSection : Tracking.Events.collapseSection,\n      {\n        section: title\n      }\n    );\n  };\n\n  return (\n    <Box>\n      <StyledAccordion\n        expanded={expanded === \"panel1\"}\n        onChange={handleAccordionChange(\"panel1\")}\n        transitionDuration={0}\n      >\n        <StyledAccordionSummary expanded={expanded} expandIcon={<ArrowDropDownIcon />} aria-controls=\"panel1a-content\" id=\"panel1a-header\">\n          <Tooltip title={expanded ? TooltipText.collapse : TooltipText.expand} enterDelay={0} leaveDelay={200}>\n            <Typography component=\"a\" variant=\"body1\">\n              {title}\n              <InfoIcon sx={{ fontSize: \"1rem\", marginLeft: \"0.25rem\" }} />\n            </Typography>\n          </Tooltip>\n        </StyledAccordionSummary>\n        <MuiAccordionDetails>\n          {content}\n        </MuiAccordionDetails>\n      </StyledAccordion>\n    </Box>\n  );\n}\n\nexport default ExpandableSection;","import { Stack, Typography, Paper } from '@mui/material';\n\nimport parse from 'html-react-parser';\nimport UppercaseTitle from '../../Components/UppercaseTitle';\nimport ExpandableSection from '../../Components/ExpandableSection';\nimport jsonData from '../../section_data.json';\nimport { replacePlainHTMLWithMuiComponents, capitalizePhrase } from '../../Utils/Utils';\n\nfunction About() {\n  return (\n    <>\n      <UppercaseTitle text={capitalizePhrase(jsonData.about.id)} />\n      <Stack spacing={3}>\n        {jsonData.about.content.map((element, index) => (\n          <Paper key={index} elevation={2} sx={{ p: 3 }}>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              {parse(element.mainText, {\n                replace: replacePlainHTMLWithMuiComponents,\n              })}\n            </Typography>\n            {\n              element.reference && (\n                <ExpandableSection\n                  title={\"Reference\"}\n                  content={(\n                    <Typography variant=\"caption\" color=\"text.secondary\">\n                      {parse(element.reference, {\n                        replace: replacePlainHTMLWithMuiComponents,\n                      })}\n                    </Typography>\n                  )}\n                />\n              )\n            }\n          </Paper>\n        ))}\n        <Typography variant=\"caption\" color=\"text.secondary\" sx={{ px: 3 }}>\n          {parse(jsonData.disclaimer.content, {\n            replace: replacePlainHTMLWithMuiComponents,\n          })}\n        </Typography>\n      </Stack>\n    </>\n  );\n}\n\nexport default About;\n","import { Typography, Paper } from '@mui/material';\n\nimport parse from 'html-react-parser';\nimport UppercaseTitle from '../../Components/UppercaseTitle';\n\nimport jsonData from '../../section_data.json';\nimport { replacePlainHTMLWithMuiComponents, capitalizePhrase } from '../../Utils/Utils';\n\nfunction GetInTouch() {\n  return (\n    <>\n      <UppercaseTitle text={capitalizePhrase(jsonData.getInTouch.id)} />\n      <Paper elevation={2} sx={{ p: 3, pb: 1 }}>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          {parse(jsonData.getInTouch.content, {\n            replace: replacePlainHTMLWithMuiComponents,\n          })}\n        </Typography>\n      </Paper>\n    </>\n  );\n}\n\nexport default GetInTouch;\n","import { useEffect, useContext, useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\nimport { Button, Box, Grid, Typography, Container, Divider } from '@mui/material';\nimport { LinkContext } from '../../ContextProviders/LinkContext';\n\nimport UppercaseTitle from '../../Components/UppercaseTitle';\nimport FullWidthBox from '../../Components/FullWidthBox';\n\n// import AtAGlance from './AtAGlance';\nimport About from './About';\n\nimport jsonData from '../../section_data.json';\n\nimport * as Tracking from '../../Utils/Tracking';\nimport parse from 'html-react-parser';\nimport { replacePlainHTMLWithMuiComponents } from '../../Utils/Utils';\n\nimport AQImap, { TileOptions } from '../../Components/AirQuality/AQImap';\n\nimport CurrentAQIGrid from '../../Components/AirQuality/CurrentAQIGrid';\nimport { EndPoints, fetchAndProcessCurrentSensorsData, getApiUrl } from '../../Utils/ApiUtils';\n\nimport BarChartIcon from '@mui/icons-material/BarChart';\nimport GetInTouch from './GetInTouch';\nimport { UniqueRoutes } from '../../Utils/RoutesUtils';\nimport { SensorStatus } from \"../../Components/AirQuality/SensorStatus\";\n\nconst displayNyuadSensorCounts = (nyuadSensorCounts) => {\n  if (nyuadSensorCounts.active && nyuadSensorCounts.total) {\n    return (\n      <Typography variant='body2' color=\"text.secondary\">\n        <b>NYUAD sensors status: </b>{nyuadSensorCounts.active} active out of {nyuadSensorCounts.total}\n      </Typography>\n    );\n  }\n  else return null;\n}\n\nfunction Home({ themePreference, temperatureUnitPreference, title }) {\n  // Update the page's title\n  useEffect(() => {\n    document.title = title;\n  }, [title]);\n\n  const { setCurrentPage, setChartsTitlesList } = useContext(LinkContext);\n\n  // set underline link to home\n  useEffect(() => {\n    setCurrentPage(UniqueRoutes.home);\n    setChartsTitlesList([]);\n  }, [setCurrentPage, setChartsTitlesList]);\n\n  // Fetch public NYUAD sensors data and public map data\n  const [nyuadCurrentSensorData, setNyuadCurrentSensorData] = useState({});\n  const [nyuadSensorCounts, setNyuadSensorCounts] = useState({\n    active: null,\n    total: null\n  });\n  const [rawMapData, setRawMapData] = useState();\n\n  useEffect(() => {\n    const nyuadUrl = getApiUrl({ endpoint: EndPoints.current, school_id: 'nyuad' });\n    fetchAndProcessCurrentSensorsData(nyuadUrl)\n      .then((data) => {\n        // Only display 3 sensors in the homepage\n        const selectedSensorData = data.slice(0, 3);\n        setNyuadCurrentSensorData(selectedSensorData);\n\n        // Count the number of active sensors at NYUAD to display it\n        const activeSensorCount = data.reduce((count, obj) => {\n          return obj?.current?.sensor_status === SensorStatus.active ? count + 1 : count;\n        }, 0);\n        setNyuadSensorCounts({\n          active: activeSensorCount,\n          total: data.length\n        });\n      })\n      .catch((error) => console.log(error));\n\n    const mapUrl = getApiUrl({ endpoint: EndPoints.map });\n    fetchAndProcessCurrentSensorsData(mapUrl)\n      .then((data) => {\n        setRawMapData(data)\n      })\n      .catch((error) => console.log(error));\n  }, []);\n\n\n  return (\n    <Box width=\"100%\">\n      <FullWidthBox>\n        <Container sx={{ pt: 3, pb: 4 }}>\n          <UppercaseTitle text=\"real-time air quality at NYUAD\" />\n          <Typography variant='body1' color='text.secondary' sx={{ mt: -2, mb: 2 }}>\n            PM2.5 (Particulate Matter Smaller Than 2.5 Micrometer)\n          </Typography>\n\n          <Grid container spacing={2} justifyContent=\"center\" textAlign=\"center\">\n            <Grid item xs={12} lg={10}>\n              <CurrentAQIGrid\n                currentSensorsData={nyuadCurrentSensorData}\n                isScreen={false}\n                temperatureUnitPreference={temperatureUnitPreference}\n                firstSensorOwnLine={true}\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              {displayNyuadSensorCounts(nyuadSensorCounts)}\n            </Grid>\n\n            <Grid item container xs={12}>\n              <Grid item xs={12}>\n                <Button\n                  component={RouterLink}\n                  variant='contained'\n                  sx={{ width: \"fit-content\", mb: 1 }}\n                  to={UniqueRoutes.nyuad}\n                  onClick={() => {\n                    Tracking.sendEventAnalytics(\n                      Tracking.Events.internalNavigation,\n                      {\n                        destination_id: UniqueRoutes.nyuad,\n                        destination_school_id: \"nyuad\",\n                        origin_id: UniqueRoutes.home\n                      }\n                    );\n                  }}\n                >\n                  <BarChartIcon sx={{ fontSize: '0.8rem' }} />&nbsp;NYUAD Dashboard (Public Access)\n                </Button>\n              </Grid>\n              <Grid item xs={12}>\n                <Typography variant=\"caption\" color=\"text.secondary\">\n                  See detailed analysis of historical air quality data at NYUAD\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Container>\n      </FullWidthBox>\n\n      <FullWidthBox sx={{ backgroundColor: 'customAlternateBackground' }}>\n        <Container sx={{ py: 3 }}>\n          <UppercaseTitle text=\"public outdoor stations\" />\n          <Typography variant=\"body1\" color=\"text.secondary\">\n            {parse(jsonData.publicOutdoorStations.content, {\n              replace: replacePlainHTMLWithMuiComponents,\n            })}\n          </Typography>\n        </Container>\n        <AQImap\n          tileOption={TileOptions.default}\n          themePreference={themePreference}\n          temperatureUnitPreference={temperatureUnitPreference}\n          placeholderText={\"Map of CITIESair public outdoor air quality stations in Abu Dhabi.\"}\n          centerCoordinates={[24.46, 54.52]}\n          maxBounds={[\n            [22.608292, 51.105185],\n            [26.407575, 56.456571],\n          ]}\n          rawMapData={rawMapData}\n        />\n\n      </FullWidthBox>\n\n      <Divider />\n\n      <FullWidthBox id={jsonData.about.id} sx={{ pt: 3, pb: 4 }}>\n        <Container>\n          <About />\n        </Container>\n      </FullWidthBox>\n\n      <Divider />\n\n      <FullWidthBox id={jsonData.getInTouch.id} sx={{ pt: 3, pb: 4 }}>\n        <Container>\n          <GetInTouch />\n        </Container>\n      </FullWidthBox>\n\n    </Box >\n  );\n}\n\nexport default Home;\n"],"names":["StyledAccordion","styled","MuiAccordion","_ref","theme","expanded","color","palette","text","secondary","backgroundImage","backgroundColor","background","default","boxShadow","shadows","transition","StyledAccordionSummary","MuiAccordionSummary","_ref2","marginTop","spacing","flexDirection","paddingLeft","primary","textDecoration","main","TooltipText","_ref3","title","content","setExpanded","useState","undefined","_jsx","Box","children","_jsxs","onChange","panel","event","isExpanded","Tracking","expandSection","collapseSection","section","transitionDuration","expandIcon","ArrowDropDownIcon","id","Tooltip","enterDelay","leaveDelay","Typography","component","variant","InfoIcon","sx","fontSize","marginLeft","MuiAccordionDetails","_Fragment","UppercaseTitle","capitalizePhrase","jsonData","Stack","map","element","index","Paper","elevation","p","parse","mainText","replace","replacePlainHTMLWithMuiComponents","reference","ExpandableSection","px","pb","displayNyuadSensorCounts","nyuadSensorCounts","active","total","themePreference","temperatureUnitPreference","useEffect","document","setCurrentPage","setChartsTitlesList","useContext","LinkContext","UniqueRoutes","home","nyuadCurrentSensorData","setNyuadCurrentSensorData","setNyuadSensorCounts","rawMapData","setRawMapData","nyuadUrl","getApiUrl","endpoint","EndPoints","current","school_id","fetchAndProcessCurrentSensorsData","then","data","selectedSensorData","slice","activeSensorCount","reduce","count","obj","_obj$current","sensor_status","SensorStatus","length","catch","error","console","log","mapUrl","width","FullWidthBox","Container","pt","mt","mb","Grid","container","justifyContent","textAlign","item","xs","lg","CurrentAQIGrid","currentSensorsData","isScreen","firstSensorOwnLine","Button","RouterLink","to","nyuad","onClick","internalNavigation","destination_id","destination_school_id","origin_id","BarChartIcon","py","AQImap","tileOption","TileOptions","placeholderText","centerCoordinates","maxBounds","Divider","About","GetInTouch"],"sourceRoot":""}