{"version":3,"file":"static/js/300.a530a8a9.chunk.js","mappings":"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","sources":["Components/CurrentAQIGrid.jsx","Components/UppercaseTitle.jsx","Pages/Home/About.jsx","IQAir_logo.svg","Pages/Home/Map.jsx","Pages/Home/GetInTouch.jsx","Pages/Home/Home.jsx","Pages/Project/ExpandableSection.jsx"],"sourcesContent":["// disable eslint for this file\r\n/* eslint-disable */\r\nimport { Box, Grid, Typography, Skeleton, Stack } from '@mui/material';\r\nimport ThermostatIcon from '@mui/icons-material/Thermostat';\r\nimport WaterDropIcon from '@mui/icons-material/WaterDrop';\r\nimport ErrorIcon from '@mui/icons-material/Error';\r\n\r\nimport { returnSensorStatus, SensorStatus, getFormattedElapsedTimeFromNow } from '../Pages/Screen/ScreenUtils';\r\nimport { TemperatureUnits, getFormattedTemperature, calculateHeatIndex } from \"../Pages/Screen/TemperatureUtils\";\r\n\r\nimport AQIdatabase from '../Utils/AirQualityIndexHelper';\r\n\r\nimport CustomThemes from '../Themes/CustomThemes';\r\n\r\nconst CurrentAQIGrid = (props) => {\r\n  const { currentSensorsData, temperatureUnitPreference, isScreen = true, orderOfItems } = props;\r\n\r\n  const getGridItemSize = (numOfItems) => {\r\n    return {\r\n      xs: Math.max(12 / numOfItems, 6),\r\n      sm: Math.max(12 / numOfItems, 4),\r\n      lg: isScreen ? (12 / numOfItems) : Math.min(5, Math.max(12 / numOfItems, 3))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      justifyContent=\"center\"\r\n      sx={{\r\n        '& .MuiSvgIcon-root': {\r\n          verticalAlign: 'sub',\r\n          fontSize: isScreen ? null : '1rem'\r\n        },\r\n        '& *': {\r\n          fontWeight: '500'\r\n        },\r\n        '& .condensedFont': {\r\n          fontFamily: 'IBM Plex Sans Condensed, sans-serif !important',\r\n          '& *': {\r\n            fontFamily: 'IBM Plex Sans Condensed, sans-serif !important'\r\n          }\r\n        }\r\n      }}\r\n    >\r\n      {\r\n        currentSensorsData ?\r\n\r\n          (Object.entries(currentSensorsData).map(([key, sensorData], index) => (\r\n            <Grid\r\n              item\r\n              order={orderOfItems && orderOfItems[index]}\r\n              key={key}\r\n              {...getGridItemSize(Object.keys(currentSensorsData).length)}\r\n              sx={\r\n                sensorData.current?.sensor_status !== SensorStatus.active &&\r\n                { '& *': { color: `${CustomThemes.universal.palette.inactiveSensor}` } }\r\n              }\r\n            >\r\n              <Box sx={{ '& *': { color: sensorData.current?.color } }}>\r\n                <Typography variant={isScreen ? \"h4\" : 'h5'} fontWeight=\"500\" className='condensedFont'>\r\n                  {sensorData.sensor?.location_long || sensorData.sensor?.location_short || 'No Location Name'}\r\n                </Typography>\r\n                <Typography variant={isScreen ? \"h1\" : 'h2'} fontWeight=\"500\" lineHeight={isScreen ? 0.8 : 0.9}>\r\n                  {sensorData.current?.aqi || '--'}\r\n                </Typography>\r\n                <Typography variant={isScreen ? \"h4\" : 'h5'} fontWeight=\"500\" className='condensedFont'>\r\n                  {sensorData.current?.category || '--'}\r\n                </Typography>\r\n              </Box>\r\n\r\n              <Box sx={{\r\n                '& *': {\r\n                  color:\r\n                    isScreen ? (\r\n                      sensorData.current?.sensor_status === SensorStatus.active ?\r\n                        '#c8dcff' : CustomThemes.universal.palette.inactiveSensor\r\n                    )\r\n                      : 'text.secondary'\r\n                }, mt: isScreen ? 2 : 1\r\n              }} className='condensedFont'>\r\n                <Typography variant={isScreen ? \"h6\" : 'body1'}>\r\n                  <ThermostatIcon />\r\n                  {\r\n                    getFormattedTemperature({\r\n                      rawTemp: sensorData.current?.temperature,\r\n                      currentUnit: TemperatureUnits.celsius,\r\n                      returnUnit: temperatureUnitPreference\r\n                    })\r\n                  }\r\n                  &nbsp;&nbsp;-&nbsp;\r\n                  <WaterDropIcon sx={{ transform: 'scaleX(0.9)' }} />\r\n                  {sensorData.current?.rel_humidity ? Math.round(sensorData.current?.rel_humidity) : \"--\"}%\r\n                </Typography>\r\n                {\r\n                  // Show heat index for selected location types\r\n                  ['outdoors', 'indoors_gym'].includes(sensorData.sensor?.location_type) &&\r\n                  <Typography variant={isScreen ? \"body1\" : 'body2'} sx={{ fontWeight: '300 !important' }}>\r\n                    {calculateHeatIndex({\r\n                      rawTemp: sensorData.current?.temperature,\r\n                      currentUnit: TemperatureUnits.celsius,\r\n                      rel_humidity: sensorData.current?.rel_humidity,\r\n                      returnUnit: temperatureUnitPreference\r\n                    })}\r\n                  </Typography>\r\n                }\r\n                {\r\n                  displayLastUpdateAndSensorStatus({ sensorData, isScreen })\r\n                }\r\n              </Box>\r\n\r\n              {\r\n                // Display outdoor-indoor comparison if both sensors are active\r\n                sensorData.sensor_status !== SensorStatus.active &&\r\n                <Typography variant={isScreen ? \"h6\" : 'body1'} className=\"condensedFont\">\r\n                  {returnSensorStatus(sensorData)}\r\n                </Typography>\r\n              }\r\n            </Grid>\r\n          ))\r\n          )\r\n          :\r\n          (\r\n            <Stack direction=\"column\" alignItems=\"center\" justifyContent=\"center\">\r\n              <Skeleton variant='text' sx={{ width: '15rem', fontSize: '2rem' }} />\r\n              <Skeleton variant='text' sx={{ width: '5rem', fontSize: '4rem', my: -1.5 }} />\r\n              <Skeleton variant='text' sx={{ width: '10rem', fontSize: '2rem' }} />\r\n              <Skeleton variant='text' sx={{ width: '7.5rem', fontSize: '1rem' }} />\r\n              <Skeleton variant='text' sx={{ width: '7.5rem', fontSize: '1rem' }} />\r\n            </Stack>\r\n          )\r\n      }\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst displayLastUpdateAndSensorStatus = ({ sensorData, isScreen }) => {\r\n  if (isScreen && sensorData.current.sensor_status === SensorStatus.active) return null;\r\n  else\r\n    return (\r\n      <Typography\r\n        variant={isScreen ? 'h6' : 'caption'}\r\n        sx={{\r\n          mt: 0,\r\n          fontWeight: isScreen && '500 !important'\r\n        }}\r\n      >\r\n        {\r\n          sensorData.current?.sensor_status !== SensorStatus.active\r\n          &&\r\n          <>\r\n            <ErrorIcon\r\n              sx={{\r\n                '& *': {\r\n                  color: `${AQIdatabase[3].lightThemeColor} !important`\r\n                },\r\n                mr: 0.5\r\n              }} />\r\n            Offline.&nbsp;\r\n          </>\r\n        }\r\n        Last update:\r\n        {(sensorData.current?.timestamp || sensorData.sensor?.last_seen)\r\n          ? ` ${getFormattedElapsedTimeFromNow(sensorData.current?.timestamp || sensorData.sensor?.last_seen)} ago`\r\n          : '--'}\r\n      </Typography>\r\n    )\r\n}\r\n\r\nexport default CurrentAQIGrid;\r\n","import { Skeleton, Typography } from '@mui/material';\r\n\r\nexport default function UppercaseTitle({ text }) {\r\n  return (\r\n    <Typography\r\n      variant=\"h4\"\r\n      color=\"text.primary\"\r\n      sx={{\r\n        fontWeight: 'medium',\r\n        display: 'block',\r\n        textTransform: 'uppercase',\r\n        pb: 3,\r\n        lineHeight: 1\r\n      }}\r\n    >\r\n      {text || <Skeleton variant='text' />}\r\n    </Typography>\r\n  );\r\n}\r\n","import { Stack, Typography, Paper } from '@mui/material';\n\nimport parse from 'html-react-parser';\nimport UppercaseTitle from '../../Components/UppercaseTitle';\nimport ExpandableSection from '../Project/ExpandableSection';\n\nimport jsonData from '../../section_data.json';\nimport { replacePlainHTMLWithMuiComponents, capitalizePhrase } from '../../Utils/Utils';\n\nfunction About() {\n  return (\n    <>\n      <UppercaseTitle text={capitalizePhrase(jsonData.about.id)} />\n      <Stack spacing={3}>\n        {jsonData.about.content.map((element, index) => (\n          <Paper key={index} elevation={2} sx={{ p: 3 }}>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              {parse(element.mainText, {\n                replace: replacePlainHTMLWithMuiComponents,\n              })}\n            </Typography>\n            {\n              element.reference && (\n                <ExpandableSection\n                  title={\"Reference\"}\n                  content={(\n                    <Typography variant=\"caption\" color=\"text.secondary\">\n                      {parse(element.reference, {\n                        replace: replacePlainHTMLWithMuiComponents,\n                      })}\n                    </Typography>\n                  )}\n                />\n              )\n            }\n          </Paper>\n        ))}\n        <Typography variant=\"caption\" color=\"text.secondary\" sx={{ px: 3 }}>\n          {parse(jsonData.disclaimer.content, {\n            replace: replacePlainHTMLWithMuiComponents,\n          })}\n        </Typography>\n      </Stack>\n    </>\n  );\n}\n\nexport default About;\n","var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgIqAirLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 77,\n    height: 29,\n    viewBox: \"0 0 77 29\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"none\",\n    fillRule: \"evenodd\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 28.988h76.999V0H0z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#4e8abe\",\n    d: \"M25.789 19.005c0 2.573.218 2.646 1.36 2.792l.534.073c.17.17.146.608-.049.703a74.045 74.045 0 0 0-6.506 0c-.194-.095-.219-.533-.048-.703l.533-.073c1.142-.146 1.36-.22 1.36-2.792v-9.03c0-2.574-.218-2.647-1.36-2.794l-.533-.072c-.171-.17-.146-.607.048-.704a71.547 71.547 0 0 0 6.507-.001c.194.098.218.535.048.705l-.534.072c-1.142.147-1.36.22-1.36 2.794v9.03zM51.372 16.35h4.257l-.78-6.33h-.044l-3.433 6.33zm2.318-9.763h3.589L59.93 22.5h-3.476l-.514-3.543h-5.95L47.985 22.5h-3.7L53.69 6.587zM66.995 9.195h-3.187l.58-2.607h3.186l-.579 2.607zm-3.543 1.783h3.187l-2.452 11.523H61l2.452-11.523zM69.18 10.978h3.009l-.47 2.072.046.045c.714-1.583 2.274-2.429 3.967-2.429.335 0 .647.023.98.067l-.645 3.075c-.446-.089-.892-.2-1.338-.2-2.43 0-3.298 1.827-3.722 3.79l-1.07 5.102h-3.164l2.407-11.522z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#4e8abe\",\n    d: \"M31.508 14.004c0 3.35 1.433 7.915 5.584 7.915 2.767 0 5.002-2.064 5.002-6.943 0-3.666-1.65-7.915-5.512-7.915-2.428 0-5.074 1.772-5.074 6.943m13.887.534c0 3.787-2.282 6.822-5.487 7.843-.145.097-.049.29.22.509 1.383 1.214 3.543 3.132 5.364 3.666.583.17 1.165.267 1.748.267a3.36 3.36 0 0 0 1.214-.243c.146.073.22.34.146.486-.729.557-1.99.752-3.035.752-3.253 0-6.604-1.942-8.983-4.467-.437-.437-.606-.51-.898-.534-4.418-.365-7.477-3.958-7.477-8.11 0-4.952 3.592-8.618 8.691-8.618 5.608 0 8.497 4.079 8.497 8.449\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D9272E\",\n    d: \"M15.984 21.264a1.22 1.22 0 0 1-1.22 1.221H1.218A1.22 1.22 0 0 1 0 21.265V7.72c0-.674.546-1.219 1.22-1.219h13.543a1.22 1.22 0 0 1 1.221 1.22v13.543z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FFF\",\n    d: \"M9.735 12.91V9.418H6.369v3.494l-3.495-.006v3.36h3.495v3.496h3.366v-3.497h3.494V12.91z\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIqAirLogo);\nexport default __webpack_public_path__ + \"static/media/IQAir_logo.6664e0a790249b05f736fb791effaaf3.svg\";\nexport { ForwardRef as ReactComponent };","// disable eslint for this file\r\n/* eslint-disable */\r\nimport { useState, useEffect, useMemo, useCallback } from 'react';\r\nimport { Box, Typography, Stack, Link } from '@mui/material';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { MapContainer, TileLayer, Marker, Popup, useMap, AttributionControl, useMapEvent, Rectangle, CircleMarker } from 'react-leaflet';\r\nimport { useEventHandlers } from '@react-leaflet/core';\r\nimport L from 'leaflet';\r\n\r\nimport LaunchIcon from '@mui/icons-material/Launch';\r\n\r\nimport IQAir_Logo from '../../IQAir_logo.svg';\r\n\r\nimport { SensorStatus, calculateSensorStatus, getFormattedElapsedTimeFromNow } from '../Screen/ScreenUtils';\r\n\r\nimport { fetchDataFromURL } from '../../Components/DatasetDownload/DatasetFetcher';\r\n\r\nimport { getFormattedTemperature, TemperatureUnits } from '../Screen/TemperatureUtils';\r\n\r\nimport AQIdatabase from '../../Utils/AirQualityIndexHelper';\r\nimport convertToAQI from '../../Utils/AirQualityIndexCalculator';\r\n\r\nimport ThermostatIcon from '@mui/icons-material/Thermostat';\r\nimport WaterDropIcon from '@mui/icons-material/WaterDrop';\r\nimport ThemePreferences from '../../Themes/ThemePreferences';\r\n\r\nimport { styled } from '@mui/material/styles';\r\nimport CustomThemes from '../../Themes/CustomThemes';\r\nimport { EndPoints, getApiUrl } from '../../Utils/ApiUtils';\r\n\r\nconst StyledLeafletPopup = styled(Popup)(({ theme }) => ({\r\n    '& .leaflet-popup-tip-container': {\r\n        display: 'none !important'\r\n    }\r\n}));\r\n\r\n\r\nfunction MapPlaceholder() {\r\n    return (\r\n        <p>\r\n            Map of CITIESair stations in Abu Dhabi\r\n            <noscript>You need to enable JavaScript to see this map.</noscript>\r\n        </p>\r\n    )\r\n}\r\n\r\nconst getTileUrl = ({ themePreference, isMiniMap }) => {\r\n    let tileTheme;\r\n    switch (themePreference) {\r\n        case ThemePreferences.dark:\r\n            tileTheme = isMiniMap ? 'light' : 'dark';\r\n            break\r\n        default:\r\n            tileTheme = isMiniMap ? 'dark' : 'light';\r\n            break\r\n    }\r\n    return `https://{s}.tile.jawg.io/jawg-${tileTheme}/{z}/{x}/{y}{r}.png?access-token={accessToken}`;\r\n}\r\nconst getMiniMapBoundOptions = ({ themePreference }) => {\r\n    switch (themePreference) {\r\n        case ThemePreferences.dark:\r\n            return {\r\n                fillColor: \"#000\",\r\n                color: \"#000\"\r\n            }\r\n        default:\r\n            return {\r\n                fillColor: \"#fff\",\r\n                color: \"#fff\"\r\n            }\r\n    }\r\n}\r\nconst tileAttribution = '<a href=\"https://leafletjs.com/\" target=\"_blank\"><b>Leaflet</b></a> | <a href=\"https://jawg.io\" target=\"_blank\">&copy; <b>Jawg</b>Maps</a> <a href=\"https://www.openstreetmap.org/copyright\">&copy; OpenStreetMap</a> contributors';\r\nconst tileAccessToken = 'N4ppJQTC3M3uFOAsXTbVu6456x1MQnQTYityzGPvAkVB3pS27NMwJ4b3AfebMfjY';\r\nconst centerCoordinate = [24.46, 54.52];\r\nconst maxBounds = [\r\n    [22.608292, 51.105185], // [Southwest corner coordinates]\r\n    [26.407575, 56.456571], // [Northeast corner coordinates]\r\n];\r\n\r\nconst MIN_ZOOM = 8;\r\nconst MAX_ZOOM = 12;\r\nconst DEFAULT_ZOOM = 10;\r\nconst POSITION_CLASSES = {\r\n    bottomleft: 'leaflet-bottom leaflet-left',\r\n    bottomright: 'leaflet-bottom leaflet-right',\r\n    topleft: 'leaflet-top leaflet-left',\r\n    topright: 'leaflet-top leaflet-right',\r\n}\r\n\r\nconst Map = ({ themePreference, temperatureUnitPreference }) => {\r\n    const [mapData, setMapData] = useState({});\r\n    const theme = useTheme();\r\n\r\n    const url = getApiUrl({ endpoint: EndPoints.map });\r\n\r\n    useEffect(() => {\r\n        fetchDataFromURL(url, 'json').then((data => {\r\n            Object.entries(data).map(([_, location]) => {\r\n                // Calculate if the sensor is currently active or not\r\n                const now = new Date();\r\n                const currentTimestamp = new Date(location.current?.timestamp);\r\n                const lastSeenInHours = Math.round((now - currentTimestamp) / 1000 / 3600);\r\n                if (location.current) {\r\n                    location.current.lastSeenInHours = lastSeenInHours;\r\n                    location.current.sensor_status = calculateSensorStatus(lastSeenInHours);\r\n                }\r\n\r\n                // Calculate AQI from raw measurements\r\n                if (location.current?.[\"pm2.5\"]) {\r\n                    const aqiObject = convertToAQI(location.current[\"pm2.5\"]);\r\n                    if (aqiObject) {\r\n                        const aqiCategory = AQIdatabase[aqiObject.aqi_category_index];\r\n                        location.current.aqi = aqiObject.aqi;\r\n                        location.current.category = aqiCategory.category;\r\n\r\n                        if (location.current.sensor_status === SensorStatus.active) {\r\n                            location.current.color = aqiCategory.lightThemeColor;\r\n                        }\r\n                        else {\r\n                            location.current.color = CustomThemes.universal.palette.inactiveSensor;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Create the marker icon on the map\r\n                location.markerIcon = new L.DivIcon({\r\n                    className: 'aqi-marker-icon',\r\n                    html: `<div onmouseover=\"this.style.opacity=1;\" onmouseleave=\"this.style.opacity=0.75;\" style=\"width: 2.25rem; height: 2.25rem; background-color: ${location.current.color}; border-radius: 50%; border: solid 2px; display: flex; justify-content: center; align-items: center; font-size: 1rem; font-weight: 500; color: ${themePreference === ThemePreferences.light ? 'black' : 'white'}; opacity: 0.75; :hover: {opacity: 1}\">${location.current.aqi || '--'}</div>`\r\n\r\n                });\r\n            });\r\n            setMapData(data);\r\n        }));\r\n\r\n    }, []);\r\n\r\n    function MinimapBounds({ parentMap, zoom }) {\r\n        const minimap = useMap()\r\n\r\n        // Clicking a point on the minimap sets the parent's map center\r\n        const onClick = useCallback(\r\n            (e) => {\r\n                parentMap.setView(e.latlng, parentMap.getZoom())\r\n            },\r\n            [parentMap],\r\n        )\r\n        useMapEvent('click', onClick)\r\n\r\n        // Keep track of bounds in state to trigger renders\r\n        const [bounds, setBounds] = useState(parentMap.getBounds())\r\n        const onChange = useCallback(() => {\r\n            setBounds(parentMap.getBounds())\r\n            // Update the minimap's view to match the parent map's center and zoom\r\n            minimap.setView(parentMap.getCenter(), zoom)\r\n        }, [minimap, parentMap, zoom])\r\n\r\n        // Listen to events on the parent map\r\n        const handlers = useMemo(() => ({ move: onChange, zoom: onChange }), [])\r\n        useEventHandlers({ instance: parentMap }, handlers)\r\n\r\n        return (\r\n            <Rectangle\r\n                bounds={bounds}\r\n                pathOptions={{\r\n                    weight: 1,\r\n                    ...getMiniMapBoundOptions({ themePreference })\r\n                }}\r\n            />\r\n        );\r\n    }\r\n\r\n    function MinimapControl({ position, zoom, mapData }) {\r\n        const parentMap = useMap()\r\n        const mapZoom = zoom || MIN_ZOOM - 2;\r\n\r\n        // Memoize the minimap so it's not affected by position changes\r\n        const minimap = useMemo(\r\n            () => (\r\n                <MapContainer\r\n                    style={{ height: \"20vh\", width: \"30vw\", maxWidth: \"250px\", maxHeight: \"200px\" }}\r\n                    center={parentMap.getCenter()}\r\n                    zoom={mapZoom}\r\n                    dragging={false}\r\n                    doubleClickZoom={false}\r\n                    scrollWheelZoom={false}\r\n                    attributionControl={false}\r\n                    zoomControl={false}\r\n                >\r\n                    <TileLayer\r\n                        url={getTileUrl({ themePreference, isMiniMap: true })}\r\n                        accessToken={tileAccessToken}\r\n                    />\r\n                    {\r\n                        Object.entries(mapData).map(([key, location]) => (\r\n                            <CircleMarker\r\n                                key={key}\r\n                                center={[location.sensor?.coordinates?.latitude, location.sensor?.coordinates?.longitude]}\r\n                                pathOptions={{\r\n                                    fillColor: location.current?.color,\r\n                                    radius: 3,\r\n                                    weight: 0,\r\n                                    fillOpacity: 1\r\n                                }}\r\n                            >\r\n                            </CircleMarker>\r\n\r\n                        ))\r\n                    }\r\n                    <MinimapBounds parentMap={parentMap} zoom={mapZoom} />\r\n                </MapContainer>\r\n            ),\r\n            [],\r\n        )\r\n\r\n        const positionClass =\r\n            (position && POSITION_CLASSES[position]) || POSITION_CLASSES.bottomleft\r\n        return (\r\n            <div className={positionClass}>\r\n                <div className=\"leaflet-control leaflet-bar\">{minimap}</div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Box sx={{\r\n            height: \"50vh\",\r\n            [theme.breakpoints.down('md')]: {\r\n                height: '70vh',\r\n            },\r\n            '& .leaflet-container': { height: \"100%\", width: \"100%\" },\r\n            '& .leaflet-control-attribution': { fontSize: '0.5rem' }\r\n        }}>\r\n            <MapContainer\r\n                center={centerCoordinate}\r\n                zoom={DEFAULT_ZOOM}\r\n                maxBounds={maxBounds}\r\n                scrollWheelZoom={false}\r\n                placeholder={<MapPlaceholder />}\r\n                attributionControl={false}\r\n            >\r\n                <MinimapControl position=\"bottomleft\" mapData={mapData} />\r\n\r\n                <TileLayer\r\n                    attribution={tileAttribution}\r\n                    url={getTileUrl({ themePreference })}\r\n                    minZoom={MIN_ZOOM}\r\n                    maxZoom={MAX_ZOOM}\r\n                    bounds={maxBounds}\r\n                    accessToken={tileAccessToken}\r\n                />\r\n                <AttributionControl position=\"bottomright\" prefix={false} />\r\n                {\r\n                    Object.entries(mapData).map(([key, location]) => (\r\n                        <Marker\r\n                            key={key}\r\n                            position={[location.sensor?.coordinates?.latitude, location.sensor?.coordinates?.longitude]}\r\n                            icon={location.markerIcon}\r\n                        >\r\n                            <StyledLeafletPopup>\r\n                                <Stack direction=\"row\" spacing={3}>\r\n                                    <Link\r\n                                        variant=\"body1\"\r\n                                        fontWeight={500}\r\n                                        href={location.sensor?.public_iqAir_station_link}\r\n                                        target='_blank'\r\n                                        rel=\"noopener noreferrer\"\r\n                                        color={`${theme.palette.primary.main}!important`}\r\n                                        underline=\"hover\"\r\n                                    >\r\n                                        {location.sensor?.public_iqAir_station_name}\r\n                                        &nbsp;\r\n                                        <sup>\r\n                                            <LaunchIcon fontSize='0.8rem' />\r\n                                        </sup>\r\n                                    </Link>\r\n                                    <Box>\r\n                                        <img src={IQAir_Logo} />\r\n                                    </Box>\r\n                                </Stack>\r\n\r\n                                <Box sx={{ '& *': { color: location.current?.color } }}>\r\n                                    <Typography variant=\"h3\" fontWeight=\"500\" lineHeight={0.9}>\r\n                                        {location.current?.aqi || '--'}\r\n                                        <Typography variant='caption' fontWeight=\"500\">(US AQI)</Typography>\r\n                                    </Typography>\r\n\r\n                                    <Typography variant=\"body1\" component=\"span\" fontWeight=\"500\">\r\n                                        {location.current?.category || '--'}\r\n                                    </Typography>\r\n                                </Box>\r\n\r\n                                <Typography\r\n                                    variant=\"caption\"\r\n                                    sx={{ display: 'block', fontWeight: 500 }}\r\n                                    gutterBottom\r\n                                >\r\n                                    PM2.5: {location.current?.[\"pm2.5\"] || '--'}µg/m<sup>3</sup>\r\n                                </Typography>\r\n                                <Typography\r\n                                    variant=\"caption\"\r\n                                    sx={{ display: 'block', fontWeight: 500 }}\r\n                                    gutterBottom\r\n                                >\r\n                                    <ThermostatIcon sx={{ fontSize: '1rem', verticalAlign: 'sub' }} />\r\n                                    {\r\n                                        getFormattedTemperature({\r\n                                            rawTemp: location.current?.temperature,\r\n                                            currentUnit: TemperatureUnits.celsius,\r\n                                            returnUnit: temperatureUnitPreference\r\n                                        })}\r\n                                    &nbsp;&nbsp;-&nbsp;&nbsp;\r\n                                    <WaterDropIcon sx={{ fontSize: '1rem', verticalAlign: 'sub' }} />\r\n                                    {location.current?.rel_humidity ? Math.round(location.current?.rel_humidity) : \"--\"}%\r\n                                </Typography>\r\n                                <Typography variant=\"caption\" sx={{ display: 'block', fontWeight: 500 }}>\r\n\r\n                                </Typography>\r\n                                <Box>\r\n                                    <Typography variant='caption' sx={{ mt: 0 }}>\r\n                                        <Typography variant='caption' fontWeight=\"500\">Last update:</Typography>\r\n                                        {location.current?.timestamp\r\n                                            ? ` ${getFormattedElapsedTimeFromNow(location.current.timestamp)} ago (${new Date(location.current.timestamp).toLocaleString()})`\r\n                                            : '--'}\r\n                                    </Typography>\r\n                                    <br />\r\n                                    <Typography\r\n                                        variant=\"caption\"\r\n                                        textTransform=\"capitalize\"\r\n                                    >\r\n                                        <Typography variant='caption' fontWeight=\"500\">Status:</Typography>\r\n                                        &nbsp;\r\n                                        {location.current?.sensor_status}\r\n                                    </Typography>\r\n                                </Box>\r\n                            </StyledLeafletPopup>\r\n                        </Marker>\r\n\r\n                    ))\r\n                }\r\n\r\n            </MapContainer>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Map;","import { Stack, Typography, Paper } from '@mui/material';\n\nimport parse from 'html-react-parser';\nimport UppercaseTitle from '../../Components/UppercaseTitle';\nimport ExpandableSection from '../Project/ExpandableSection';\n\nimport jsonData from '../../section_data.json';\nimport { replacePlainHTMLWithMuiComponents, capitalizePhrase } from '../../Utils/Utils';\n\nfunction GetInTouch() {\n  return (\n    <>\n      <UppercaseTitle text={capitalizePhrase(jsonData.getInTouch.id)} />\n      <Paper elevation={2} sx={{ p: 3, pb: 1 }}>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          {parse(jsonData.getInTouch.content, {\n            replace: replacePlainHTMLWithMuiComponents,\n          })}\n        </Typography>\n      </Paper>\n    </>\n  );\n}\n\nexport default GetInTouch;\n","import { useEffect, useContext, useState } from 'react';\r\n\r\nimport { Button, Box, Grid, Stack, Typography, Container, Card, CardContent, CardMedia, CardActionArea, Divider, Tooltip } from '@mui/material';\r\nimport { LinkContext } from '../../ContextProviders/LinkContext';\r\n\r\nimport UppercaseTitle from '../../Components/UppercaseTitle';\r\nimport FullWidthBox from '../../Components/FullWidthBox';\r\n\r\n// import AtAGlance from './AtAGlance';\r\nimport About from './About';\r\n\r\nimport jsonData from '../../section_data.json';\r\n\r\nimport * as Tracking from '../../Utils/Tracking';\r\nimport parse from 'html-react-parser';\r\nimport { replacePlainHTMLWithMuiComponents } from '../../Utils/Utils';\r\n\r\nimport Map from './Map';\r\n\r\nimport CurrentAQIGrid from '../../Components/CurrentAQIGrid';\r\nimport { EndPoints, fetchAndProcessCurrentSensorsData, getApiUrl } from '../../Utils/ApiUtils';\r\n\r\nimport LaunchIcon from '@mui/icons-material/Launch';\r\nimport GetInTouch from './GetInTouch';\r\n\r\nfunction Home({ themePreference, temperatureUnitPreference, title }) {\r\n  // Update the page's title\r\n  useEffect(() => {\r\n    document.title = title;\r\n  }, [title]);\r\n\r\n  // useState for home page data\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [_, setCurrentPage, __, setChartsTitlesList] = useContext(LinkContext);\r\n\r\n  // set underline link to home\r\n  useEffect(() => {\r\n    setCurrentPage('home');\r\n    setChartsTitlesList([]);\r\n  }, [setCurrentPage, setChartsTitlesList]);\r\n\r\n  // Fetch public NYUAD sensors data\r\n  const [nyuadCurrentSensorData, setNyuadCurrentSensorData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const url = getApiUrl({ endpoint: EndPoints.current, school_id: 'nyuad' });\r\n\r\n    fetchAndProcessCurrentSensorsData(url)\r\n      .then((data) => {\r\n        setNyuadCurrentSensorData(data)\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n\r\n  return (\r\n    <Box width=\"100%\">\r\n      <FullWidthBox>\r\n        <Container sx={{ pt: 3, pb: 4 }}>\r\n          <UppercaseTitle text=\"real-time air quality at NYUAD\" />\r\n          <Typography variant='body1' color='text.secondary' sx={{ mt: -2, mb: 2 }}>\r\n            PM2.5 (Particulate Matter Smaller Than 2.5 Micrometer)\r\n          </Typography>\r\n\r\n          <Grid container justifyContent=\"center\" spacing={3}>\r\n            <Grid item textAlign=\"center\" xs={10}>\r\n              <CurrentAQIGrid\r\n                currentSensorsData={nyuadCurrentSensorData}\r\n                isScreen={false}\r\n                orderOfItems={[3, 1, 2]}\r\n                temperatureUnitPreference={temperatureUnitPreference}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Stack width=\"fit-content\" alignItems=\"center\" margin=\"auto\">\r\n                <Button\r\n                  variant='contained'\r\n                  sx={{ width: \"fit-content\", mb: 1 }}\r\n                  href=\"https://citiesdashboard.com/project/air-quality\"\r\n                  target=\"blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  <LaunchIcon sx={{ fontSize: '0.8rem' }} />&nbsp;NYUAD Dashboard (Public Access)\r\n                </Button>\r\n                <Typography variant=\"caption\" color=\"text.secondary\">\r\n                  See detailed analysis of historical air quality data at NYUAD\r\n                </Typography>\r\n              </Stack>\r\n            </Grid>\r\n          </Grid>\r\n\r\n\r\n        </Container>\r\n      </FullWidthBox>\r\n\r\n      <FullWidthBox sx={{ backgroundColor: 'customAlternateBackground' }}>\r\n        <Container sx={{ py: 3 }}>\r\n          <UppercaseTitle text=\"public outdoor stations\" />\r\n          <Typography variant=\"body1\" color=\"text.secondary\">\r\n            {parse(jsonData.publicOutdoorStations.content, {\r\n              replace: replacePlainHTMLWithMuiComponents,\r\n            })}\r\n          </Typography>\r\n        </Container>\r\n        <Map themePreference={themePreference} temperatureUnitPreference={temperatureUnitPreference} />\r\n\r\n      </FullWidthBox>\r\n\r\n      <Divider />\r\n\r\n      <FullWidthBox id={jsonData.about.id} sx={{ pt: 3, pb: 4 }}>\r\n        <Container>\r\n          <About />\r\n        </Container>\r\n      </FullWidthBox>\r\n\r\n      <Divider />\r\n\r\n      <FullWidthBox id={jsonData.getInTouch.id} sx={{ pt: 3, pb: 4 }}>\r\n        <Container>\r\n          <GetInTouch />\r\n        </Container>\r\n      </FullWidthBox>\r\n\r\n    </Box >\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","// disable eslint for this file\n/* eslint-disable */\nimport { useState } from 'react';\nimport { styled } from '@mui/material/styles';\n\nimport MuiAccordion from '@mui/material/Accordion';\nimport MuiAccordionSummary from '@mui/material/AccordionSummary';\nimport MuiAccordionDetails from '@mui/material/AccordionDetails';\nimport { Box, Typography, Tooltip } from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\nimport * as Tracking from '../../Utils/Tracking';\n\nconst StyledAccordion = styled(MuiAccordion)(({ theme, expanded }) => ({\n  color: theme.palette.text.secondary,\n  backgroundImage: 'none',\n  backgroundColor: expanded ? theme.palette.background.default : 'transparent',\n  boxShadow: expanded ? theme.shadows : 'none',\n  transition: 'none',\n}));\n\nconst StyledAccordionSummary = styled(MuiAccordionSummary)(({ theme, expanded }) => ({\n  marginTop: expanded ? theme.spacing(3) : 0,\n  flexDirection: 'row-reverse',\n  paddingLeft: expanded ? theme.spacing(1) : 0,\n  '& .MuiTypography-root': {\n    color: theme.palette.text.primary,\n    textDecoration: 'underline',\n    transition: 'none',\n    '&:hover': {\n      color: theme.palette.primary.main,\n    },\n  },\n}));\n\nconst ExpandableSection = ({ title, content }) => {\n  const [expanded, setExpanded] = useState(undefined);\n\n  const handleAccordionChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : undefined);\n\n    Tracking.sendEventAnalytics(isExpanded ? Tracking.Events.expandSampleData : Tracking.Events.collapseSampleData);\n  };\n\n  return (\n    <Box>\n      <StyledAccordion\n        expanded={expanded === \"panel1\"}\n        onChange={handleAccordionChange(\"panel1\")}\n        transitionDuration={0}\n      >\n        <StyledAccordionSummary expanded={expanded} expandIcon={<ExpandMoreIcon />} aria-controls=\"panel1a-content\" id=\"panel1a-header\">\n          <Tooltip title={expanded ? \"Click to collapse\" : \"Click to expand\"} enterDelay={0} leaveDelay={200}>\n            <Typography component=\"a\" variant=\"body2\">\n              {title}\n            </Typography>\n          </Tooltip>\n        </StyledAccordionSummary>\n        <MuiAccordionDetails>\n          {content}\n        </MuiAccordionDetails>\n      </StyledAccordion>\n    </Box>\n  );\n}\n\nexport default ExpandableSection;"],"names":["displayLastUpdateAndSensorStatus","sensorData","isScreen","current","sensor_status","SensorStatus","variant","sx","mt","fontWeight","color","AQIdatabase","mr","timestamp","sensor","last_seen","getFormattedElapsedTimeFromNow","props","currentSensorsData","temperatureUnitPreference","orderOfItems","container","justifyContent","verticalAlign","fontSize","fontFamily","Object","entries","map","index","numOfItems","key","item","order","keys","length","xs","Math","max","sm","lg","min","CustomThemes","className","location_long","location_short","lineHeight","aqi","category","getFormattedTemperature","rawTemp","temperature","currentUnit","TemperatureUnits","returnUnit","transform","rel_humidity","round","includes","location_type","calculateHeatIndex","returnSensorStatus","direction","alignItems","width","my","UppercaseTitle","text","display","textTransform","pb","capitalizePhrase","jsonData","Stack","spacing","element","Paper","elevation","p","Typography","parse","mainText","replace","replacePlainHTMLWithMuiComponents","reference","ExpandableSection","title","content","px","StyledLeafletPopup","styled","Popup","theme","MapPlaceholder","getTileUrl","tileTheme","themePreference","isMiniMap","ThemePreferences","tileAccessToken","centerCoordinate","maxBounds","POSITION_CLASSES","bottomleft","bottomright","topleft","topright","useState","mapData","setMapData","useTheme","url","getApiUrl","endpoint","EndPoints","MinimapBounds","parentMap","zoom","minimap","useMap","onClick","useCallback","e","setView","latlng","getZoom","useMapEvent","getBounds","bounds","setBounds","onChange","getCenter","handlers","useMemo","move","useEventHandlers","instance","Rectangle","pathOptions","weight","fillColor","MinimapControl","position","mapZoom","MIN_ZOOM","MapContainer","style","height","maxWidth","maxHeight","center","dragging","doubleClickZoom","scrollWheelZoom","attributionControl","zoomControl","TileLayer","accessToken","location","CircleMarker","coordinates","latitude","longitude","radius","fillOpacity","positionClass","useEffect","fetchDataFromURL","then","data","now","Date","currentTimestamp","lastSeenInHours","calculateSensorStatus","aqiObject","convertToAQI","aqiCategory","aqi_category_index","lightThemeColor","markerIcon","L","html","Box","breakpoints","down","placeholder","attribution","minZoom","maxZoom","AttributionControl","prefix","Marker","icon","Link","href","public_iqAir_station_link","target","rel","palette","primary","main","underline","public_iqAir_station_name","Launch","src","IQAir_Logo","component","gutterBottom","Thermostat","WaterDrop","toLocaleString","document","useContext","LinkContext","setCurrentPage","setChartsTitlesList","nyuadCurrentSensorData","setNyuadCurrentSensorData","school_id","fetchAndProcessCurrentSensorsData","catch","error","console","log","FullWidthBox","Container","pt","mb","Grid","textAlign","CurrentAQIGrid","margin","Button","backgroundColor","py","Divider","id","StyledAccordion","MuiAccordion","expanded","secondary","backgroundImage","background","default","boxShadow","shadows","transition","StyledAccordionSummary","MuiAccordionSummary","marginTop","flexDirection","paddingLeft","textDecoration","panel","undefined","setExpanded","event","isExpanded","Tracking","transitionDuration","expandIcon","enterDelay","leaveDelay"],"sourceRoot":""}