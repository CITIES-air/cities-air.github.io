{"version":3,"file":"static/js/739.12759d1b.chunk.js","mappings":"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","sources":["Graphs/ChartSubstituteComponents/AirQualityIndexTable.jsx","Components/AirQualityHelper.jsx","Components/DatasetDownload/DatasetCalendar.jsx","Components/DatasetDownload/DatasetDownloadDialog.jsx","Pages/Project/Project.jsx"],"sourcesContent":["import { Box, Table, TableBody, TableCell, TableHead, TableRow, Stack, styled } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport ChartComponent from '../ChartComponent';\n\nexport const StyledTable = styled(Table)(({ theme, isTiny }) => ({\n  minWidth: isTiny || 700,\n  '& th, td': {\n    fontSize: isTiny ? '0.625rem' : '0.6875rem',\n    color: theme.palette.text.secondary,\n    [theme.breakpoints.down('sm')]: {\n      fontSize: isTiny ? '0.5rem' : '0.6875rem',\n    },\n  },\n  '& th': {\n    fontWeight: 500,\n    color: theme.palette.text.primary,\n    lineHeight: '1rem'\n  }\n}));\n\nfunction AirQualityIndexTable(props) {\n  const { isTiny, hideAQIDescription } = props;\n  // Air quality index legend\n  const theme = useTheme();\n\n  const airQualityIndexCategories = [\n    {\n      name: 'Good',\n      color: theme.palette.chart.optionsColors.aqi[0],\n      aqi: '0 - 50',\n      rawPM2_5: '0.0 - 12.0',\n      description: 'Air quality is satisfactory, and air pollution poses little or no risk',\n      suggestion: 'Enjoy the clean air'\n    },\n    {\n      name: 'Moderate',\n      color: theme.palette.chart.optionsColors.aqi[1],\n      aqi: '51 - 100',\n      rawPM2_5: '12.1 - 35.4',\n      description: 'Air quality is acceptable. However, there may be a risk for some people, particularly those who are unusually sensitive to air pollution',\n      suggestion: 'Individuals with respiratory issues might need to reduce prolonged outdoor exertion'\n    },\n    {\n      name: 'Unhealthy for Sensitive Groups',\n      color: theme.palette.chart.optionsColors.aqi[2],\n      aqi: '101 - 150',\n      rawPM2_5: '35.5 - 55.4',\n      description: 'Members of sensitive groups may experience health effects. The general public is less likely to be affected',\n      suggestion: 'Children and individuals with respiratory issues should limit outdoor exertion'\n    },\n    {\n      name: 'Unhealthy',\n      color: theme.palette.chart.optionsColors.aqi[3],\n      aqi: '151 - 200',\n      rawPM2_5: '55.5 - 150.4',\n      description: 'Some members of the general public may experience health effects; members of sensitive groups may experience more serious health effects',\n      suggestion: ''\n    },\n    {\n      name: 'Very Unhealthy',\n      color: theme.palette.chart.optionsColors.aqi[4],\n      aqi: '201 - 300',\n      rawPM2_5: '150.5 - 250.4',\n      description: 'Health alert: The risk of health effects is increased for everyone',\n      suggestion: ''\n    },\n    {\n      name: 'Hazardous',\n      color: theme.palette.chart.optionsColors.aqi[5],\n      aqi: '300 - 500',\n      rawPM2_5: '250.5 - 550.5',\n      description: 'Health warning of emergency conditions: everyone is more likely to be affected',\n      suggestion: ''\n    },\n  ];\n\n  return (\n    <>\n      <Box overflow=\"auto\">\n        <StyledTable size=\"small\" isTiny={isTiny}>\n          <TableHead>\n            <TableRow>\n              <TableCell sx={{ pr: 0 }}>\n                <Box sx={{ width: '1em', height: '1em' }} />\n              </TableCell>\n              <TableCell sx={{ pl: 1 }}>\n                Category\n              </TableCell>\n              <TableCell align=\"right\">US AQI</TableCell>\n              <TableCell align=\"right\">\n                PM2.5 Concentration\n                (µg/m\n                <sup>3</sup>\n                )\n              </TableCell>\n              {!hideAQIDescription && <TableCell align=\"left\">Description</TableCell>}\n              {!hideAQIDescription && <TableCell align=\"left\">CITIESair&apos; Suggested Actions</TableCell>}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {airQualityIndexCategories.map((element) => (\n              <TableRow\n                key={element.name}\n                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n              >\n                <TableCell sx={{ pr: 0 }}>\n                  <Box sx={{ width: '1em', height: '1em', backgroundColor: element.color }} />\n                </TableCell>\n                <TableCell sx={{ pl: 1 }}>\n                  {element.name}\n                </TableCell>\n                <TableCell align=\"right\">{element.aqi}</TableCell>\n                <TableCell align=\"right\">\n                  {element.rawPM2_5}\n                </TableCell>\n                {!hideAQIDescription && <TableCell align=\"left\">{element.description}</TableCell>}\n                {!hideAQIDescription && <TableCell align=\"left\">{element.suggestion}</TableCell>}\n              </TableRow>\n            ))}\n          </TableBody>\n        </StyledTable>\n      </Box>\n      {!hideAQIDescription\n        && (\n          <ChartComponent\n            chartHeight=\"4rem\"\n            chartData={\n              {\n                sheetId: '157f6vu47RBEvnBnW24jGI7cz-ov1aSBUFPdkb5sDKDc',\n                gid: 1958405288,\n                query: 'SELECT * WHERE A = \"US AQI\"',\n                headers: 1,\n                chartType: 'BarChart',\n                columns: [0, 1, 3, 5, 7, 9, 11],\n                options: {\n                  legend: { position: 'none' },\n                  enableInteractivity: false,\n                  hAxis: {\n                    ticks: [0, 50, 100, 150, 200, 300, 500]\n                  },\n                  chartArea:\n                  {\n                    width: { portrait: '98%', landscape: '50%' },\n                    height: { portrait: '20%', landscape: '30%' }\n                  },\n                  isStacked: true,\n                  colors: 'aqi',\n                  bar: { groupWidth: '100%' }\n                }\n              }\n            }\n          />\n        )}\n    </>\n\n  );\n}\n\nexport default AirQualityIndexTable;\n","import { useState } from 'react';\nimport { isMobile } from 'react-device-detect';\n\nimport { Fab, Fade, Popper, Paper, Typography, Stack } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport AirIcon from '@mui/icons-material/Air';\nimport { FadeInButtonForSpeedDial } from './Header/FadeInButtonForSpeedDial';\n\nimport * as Tracking from '../Utils/Tracking';\nimport AirQualityIndexTable from '../Graphs/ChartSubstituteComponents/AirQualityIndexTable';\n\nexport default function AirQualityIndexLegendQuickGlance(props) {\n  // Mechanism for opening and closing the Quick Glance on hover\n  const [anchorEl, setAnchorEl] = useState(null);\n  const handlePopperOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n    Tracking.sendEventAnalytics(Tracking.Events.airQualityIndexLegendQuickGlance);\n  };\n  const handlePopperClose = () => {\n    setAnchorEl(null);\n  };\n  const open = Boolean(anchorEl);\n\n  // Air quality index legend\n  const theme = useTheme();\n\n  return (\n    <>\n      <FadeInButtonForSpeedDial {...props} distanceFromBottomOfWindow=\"5.5rem\">\n        <Fab\n          sx={{ mt: 1 }}\n          aria-owns={open ? Tracking.Events.airQualityIndexLegendQuickGlance : undefined}\n          aria-haspopup=\"true\"\n          onMouseEnter={handlePopperOpen}\n          onMouseLeave={handlePopperClose}\n          onClick={(event) => isMobile && (open ? handlePopperClose() : handlePopperOpen(event))}\n          aria-label={Tracking.Events.airQualityIndexLegendQuickGlance}\n          color=\"primary\"\n        >\n          <Stack direction=\"column\" alignItems=\"center\">\n            <AirIcon fontSize=\"1rem\" />\n            <Typography variant=\"body2\" fontWeight=\"500\">\n              AQI\n            </Typography>\n          </Stack>\n        </Fab>\n      </FadeInButtonForSpeedDial>\n\n      <Popper\n        id={Tracking.Events.airQualityIndexLegendQuickGlance}\n        sx={{\n          pointerEvents: 'none',\n          mt: -1\n        }}\n        open={open}\n        anchorEl={anchorEl}\n        placement=\"top-end\"\n        onClose={handlePopperClose}\n        keepMounted\n        disableRestoreFocus\n        transition\n      >\n        {({ TransitionProps }) => (\n          <Fade {...TransitionProps} timeout={350}>\n            <Paper elevation={8} sx={{ py: 0.5, mb: 1 }}>\n              <Typography sx={{ mx: 2, mt: 1 }} color=\"text.disabled\" variant=\"body1\" fontWeight={500}>\n                AQI at quick glance\n              </Typography>\n              <AirQualityIndexTable isTiny hideAQIDescription />\n            </Paper>\n          </Fade>\n        )}\n\n      </Popper>\n    </>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport dayjs from 'dayjs';\nimport { styled } from '@mui/material/styles';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { PickersDay } from '@mui/x-date-pickers/PickersDay';\nimport { DateCalendar } from '@mui/x-date-pickers/DateCalendar';\nimport { DayCalendarSkeleton } from '@mui/x-date-pickers/DayCalendarSkeleton';\nimport Card from '@mui/material/Card';\nimport ClickAwayListener from '@mui/base/ClickAwayListener';\n\nconst HighlightedDay = styled(PickersDay)(({ theme }) => ({\n  // styles for dot\n  '&:after, :hover::after': {\n    content: '\".\"',\n    fontSize: '1.5rem',\n    bottom: '-0.5rem',\n    position: 'absolute',\n    color: theme.palette.primary.main,\n    opacity: 0.5\n  },\n  '&:hover::after': {\n    opacity: 1\n  }\n}));\n\nfunction isValidDate(date, validDates) {\n  return validDates.indexOf(dayjs(date).format('YYYY-MM-DD')) >= 0;\n}\n\nfunction CustomDayComponent(props) {\n  const { versionDates = [], day, ...other } = props;\n\n  const isHighlighted = versionDates.indexOf(dayjs(day).format('YYYY-MM-DD')) >= 0;\n\n  return (\n    isHighlighted\n      ? <HighlightedDay {...other} day={day} />\n      : <PickersDay {...other} day={day} />\n  );\n}\n\nexport default function DatasetCalendar(props) {\n  const { smallScreen, onChange, versions } = props;\n\n  const versionDates = versions\n    .filter((version) => version.version.length === 10) // valid date\n    .map((version) => version.version);\n\n  return (\n    <ClickAwayListener onClickAway={() => onChange('close')}>\n      <Card\n        sx={!smallScreen && { position: 'absolute', right: 0, zIndex: 999 }}\n        raised\n      >\n        <LocalizationProvider dateAdapter={AdapterDayjs}>\n          <DateCalendar\n            loading={!versionDates}\n            format=\"YYYY-MM-DD\"\n            renderLoading={() => <DayCalendarSkeleton />}\n            slots={{\n              day: CustomDayComponent,\n            }}\n            onChange={(value, selectionState) => {\n              if (selectionState === 'finish') {\n                return onChange(dayjs(value).format('YYYY-MM-DD'));\n              }\n              return null;\n            }}\n            slotProps={{\n              day: {\n                versionDates\n              }\n            }}\n            // disable the date if its not a valid date\n            shouldDisableDate={(day) => !isValidDate(day, versionDates)}\n            disableHighlightToday\n            minDate={dayjs(versionDates.slice(-1)[0])}\n            maxDate={dayjs(versionDates[0])}\n          />\n        </LocalizationProvider>\n      </Card>\n    </ClickAwayListener>\n  );\n}\n","// disable eslint for this file\n/* eslint-disable */\nimport { useState, useEffect, useContext } from 'react';\nimport { Container, Avatar, Modal, Tooltip, Box, Link, Typography, Stack, Select, FormControl, MenuItem, Grid, Chip, Dialog, Button, DialogActions, DialogContent, useMediaQuery, Table, TableBody, TableCell, TableHead, TableRow } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\nimport { RawDatasetsMetadataContext } from '../../ContextProviders/RawDatasetsMetadataContext';\n\nimport DownloadIcon from '@mui/icons-material/Download';\nimport DataObjectIcon from '@mui/icons-material/DataObject';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport EventIcon from '@mui/icons-material/Event';\nimport PublishedWithChangesIcon from '@mui/icons-material/PublishedWithChanges';\n\nimport * as Tracking from '../../Utils/Tracking';\nimport { fetchDataFromURL } from './DatasetFetcher';\nimport DatasetCalendar from './DatasetCalendar';\n\nexport default function DatasetDownloadDialog(props) {\n  const { project } = props;\n  const rawDatasetsMetadata = useContext(RawDatasetsMetadataContext);\n  const [datasets, setDatasets] = useState();\n\n  useEffect(() => {\n    if (!project || !rawDatasetsMetadata) return;\n    setDatasets(rawDatasetsMetadata[project?.id]); // get all the dataset(s) of this project\n  }, [project, rawDatasetsMetadata]);\n\n  const theme = useTheme();\n  const smallScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  function getOwnerString(owners) {\n    if (!owners || owners.length === 0) {\n      return 'the relevant owners';\n    } else if (owners.length === 1) {\n      return owners[0];\n    } else if (owners.length === 2) {\n      return owners.join(' and ');\n    } else {\n      const lastOwner = owners.pop();\n      const oxfordCommaOwners = owners.join(', ');\n      return `${oxfordCommaOwners}, and ${lastOwner}`;\n    }\n  }\n\n  return (\n    <>\n      <Button\n        onClick={() => {\n          handleOpen();\n          Tracking.sendEventAnalytics(Tracking.Events.rawDatasetButtonClicked, {\n            project_id: project.id\n          });\n        }}\n        variant=\"contained\"\n      >\n        <DataObjectIcon sx={{ fontSize: '1rem' }} />&nbsp;Raw Dataset\n      </Button>\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        maxWidth=\"lg\"\n        fullWidth\n        fullScreen={smallScreen}\n        keepMounted\n      >\n        {(\n          smallScreen &&\n          <DialogActions justifyContent=\"flex-start\">\n            <Button autoFocus onClick={handleClose}>\n              <ChevronLeftIcon sx={{ fontSize: '1rem' }} />Back\n            </Button>\n          </DialogActions>\n        )}\n\n        <DialogContent sx={{\n          px: smallScreen ? 2 : 3,\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'start',\n          height: '100%'\n        }}>\n          <Chip label={project.title} size=\"small\" sx={{ mb: 1 }} />\n          <Typography variant=\"h6\" >\n            Preview and download raw dataset(s)\n          </Typography>\n\n          <DatasetSelectorAndPreviewer datasets={datasets} smallScreen={smallScreen} project={project} />\n          {\n            datasets &&\n            <Typography variant=\"caption\" sx={{ my: 3, fontStyle: 'italic' }} >\n              This dataset is provided by the CITIES Dashboard with the support of {getOwnerString(project.owners)}. Should you intend to utilize this dataset for your project, research, or publication, we kindly request that you notify us at <Link href='mailto:nyuad.cities@nyu.edu'>nyuad.cities@nyu.edu</Link> to discuss citation requirements.\n            </Typography>\n          }\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n}\n\nconst DatasetSelectorAndPreviewer = (props) => {\n  const { datasets, smallScreen, project } = props;\n  const [previewingDataset, setPreviewingDataset] = useState();\n  const [previewingDatasetId, setPreviewingDatasetId] = useState();\n\n  // Preview the first version of the first dataset initially\n  useEffect(() => {\n    if (datasets?.length > 0) {\n      setPreviewingDataset(datasets[0]?.versions[0]);\n      setPreviewingDatasetId(datasets[0]?.id);\n      fetchDataFromURL(datasets[0]?.versions[0]?.rawLink, 'csv').then((data) => {\n        setPreviewingDataset({ ...datasets[0]?.versions[0], fetchedDataset: data });\n      });\n    }\n  }, [datasets]);\n\n  return (\n    <Grid container justifyContent=\"center\" alignItems=\"start\" spacing={3}>\n      <Grid item sm={12} md={6}>\n        <DatasetsTable\n          datasets={datasets}\n          smallScreen={smallScreen}\n          previewingDataset={previewingDataset}\n          setPreviewingDataset={setPreviewingDataset}\n          previewingDatasetId={previewingDatasetId}\n          setPreviewingDatasetId={setPreviewingDatasetId}\n        />\n      </Grid>\n      <Grid item sm={12} md={6} maxWidth={smallScreen ? '100%' : 'unset'} sx={{ mt: 1 }}>\n        <PreviewDataset\n          previewingDataset={previewingDataset}\n          previewingDatasetId={previewingDatasetId}\n          project={project}\n          smallScreen={smallScreen}\n        />\n      </Grid>\n    </Grid>\n  )\n};\n\nconst DatasetsTable = (props) => {\n  const { datasets, smallScreen, previewingDataset, setPreviewingDataset, previewingDatasetId, setPreviewingDatasetId } = props;\n  return (\n    <Table\n      size=\"small\"\n      sx={{\n        tableLayout: 'fixed',\n        '& td, div, .MuiMenuItem-root': {\n          fontSize: smallScreen ? '0.625rem' : '0.8rem'\n        }\n      }}\n    >\n      <TableHead>\n        <TableRow>\n          <TableCell sx={{ pl: 1 }}>\n            Dataset\n          </TableCell>\n          <TableCell sx={{ width: smallScreen ? '9.5rem' : '11rem' }}>Version</TableCell>\n          <TableCell sx={{ width: smallScreen ? '5rem' : '6rem' }}>\n            Size\n          </TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {datasets?.map((dataset) => (\n          <Dataset\n            smallScreen={smallScreen}\n            dataset={dataset}\n            previewingDataset={previewingDataset}\n            setPreviewingDataset={setPreviewingDataset}\n            isPreviewing={dataset.id === previewingDatasetId}\n            setPreviewingDatasetId={setPreviewingDatasetId}\n          />\n        ))}\n      </TableBody>\n    </Table>\n  )\n}\n\nconst Dataset = (props) => {\n  const { smallScreen, dataset, setPreviewingDataset, isPreviewing, previewingDatasetId, setPreviewingDatasetId } = props;\n\n  const [fetchedDatasets, setFetchedDatasets] = useState({});\n  const NUM_RECENT_VERSIONS = 3;\n\n  const latestVersionOfThisDataset = dataset?.versions[0] || {};\n  const [showCalendar, setShowCalendar] = useState(false);\n  const [selectedVersionOfThisDataset, setSelectedVersionOfThisDataset] = useState(latestVersionOfThisDataset);\n\n  // only show NUM_RECENT_VERSIONS rows in Dropdown\n  const visibleVersions = dataset?.versions.slice(0, NUM_RECENT_VERSIONS);\n  // if currently selected version is not in first NUM_RECENT_VERSION rows,\n  // add it to the list\n  if (!visibleVersions.find((version) => version == selectedVersionOfThisDataset)) {\n    visibleVersions.push({ ...selectedVersionOfThisDataset, isOlderVersion: true });\n  }\n\n  // only show Calendar option if there are more than NUM_RECENT_VERSIONS versions\n  const shouldShowCalendar = dataset?.versions.length > NUM_RECENT_VERSIONS;\n\n  const handleVersionChange = (event) => {\n    const selectedVal = event.target.value;\n    if (selectedVal === 'Calendar') {\n      setShowCalendar(true);\n      return;\n    }\n    // Loop through the array (allVersionsOfThisDataset) to find the one with the selected version\n    const selectedVersion = dataset?.versions.find(aDatasetVersion => {\n      return aDatasetVersion.version === selectedVal;\n    });\n    setSelectedVersionOfThisDataset(selectedVersion);\n    setPreviewingDatasetId(dataset.id);\n    setPreviewingDataset(selectedVersion);\n\n    fetchThisDataset(selectedVersion);\n  };\n\n  const handleCalendarChange = (event) => {\n    // close calendar after selecting\n    setShowCalendar(false)\n    if (event === 'close') { // click outside of card\n      return\n    }\n\n    handleVersionChange({ target: { value: event } });\n  }\n\n  const fetchThisDataset = (selectedVersion) => {\n    // If this dataset version hasn't been fetched yet,\n    // fetch it and append it into the object fetchedDatasets\n    if (!fetchedDatasets[selectedVersion.version]) {\n      fetchDataFromURL(selectedVersion.rawLink, 'csv').then((data) => {\n        const selectedVersionWithFetchedDataset = { ...selectedVersion, fetchedDataset: data };\n        setPreviewingDataset(selectedVersionWithFetchedDataset);\n        setFetchedDatasets({\n          ...fetchedDatasets,\n          [selectedVersionWithFetchedDataset.version]: selectedVersionWithFetchedDataset\n        });\n      });\n    }\n    // If it has been fetched before, simply get it from memory \n    else {\n      setPreviewingDataset(fetchedDatasets[selectedVersion.version]);\n    }\n  }\n\n  const setThisDatasetToPreview = () => {\n    if (previewingDatasetId !== dataset.id) {\n      setPreviewingDatasetId(dataset.id);\n      setPreviewingDataset(selectedVersionOfThisDataset);\n      fetchThisDataset(selectedVersionOfThisDataset);\n    }\n  }\n\n  const theme = useTheme();\n\n  const formatFileSize = (sizeInBytes) => {\n    if (!sizeInBytes) return;\n\n    if (sizeInBytes < 1024 * 1024) {\n      return (sizeInBytes / 1024).toFixed(1) + \" KB\";\n    } else {\n      return (sizeInBytes / (1024 * 1024)).toFixed(1) + \" MB\";\n    }\n  }\n\n  return (\n    <>\n      <TableRow key={dataset.id}>\n        <TableCell\n          sx={{\n            pl: 1,\n            cursor: 'pointer',\n            background: isPreviewing && theme.palette.background.NYUpurpleLight\n          }}\n          onClick={setThisDatasetToPreview}>\n          {selectedVersionOfThisDataset?.name}\n        </TableCell>\n\n        <TableCell sx={{ position: 'relative', background: isPreviewing && theme.palette.background.NYUpurpleLight }}>\n          {showCalendar &&\n            (smallScreen ? <Modal\n              open={showCalendar}\n              sx={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center'\n              }}\n            >\n              <DatasetCalendar\n                onChange={handleCalendarChange}\n                smallScreen={smallScreen}\n                versions={dataset?.versions}\n              />\n            </Modal>\n              : <DatasetCalendar\n                onChange={handleCalendarChange}\n                versions={dataset?.versions}\n              />)}\n          <FormControl size=\"small\">\n            <Select\n              value={selectedVersionOfThisDataset?.version}\n              onClick={() => {\n                if (dataset.versions.length <= 1) setThisDatasetToPreview();\n              }}\n              onChange={handleVersionChange}\n              variant=\"standard\"\n              MenuProps={{ disablePortal: true }}\n            >\n              {visibleVersions.map((aDatasetVersion, index) => (\n                <MenuItem\n                  key={aDatasetVersion.version}\n                  value={aDatasetVersion.version}\n                  sx={[\n                    (index === visibleVersions.length - 1) && {\n                      mb: -0.75\n                    },\n                    aDatasetVersion.isOlderVersion && {\n                      marginTop: '1rem',\n                      '&::before': {\n                        content: '\"\"',\n                        borderTop: `2px dotted ${theme.palette.text.secondary}`,\n                        width: '1rem',\n                        height: '1rem',\n                        position: 'absolute',\n                        top: 0,\n                        left: '50%',\n                        transform: 'translate(-50%, -50%)'\n                      }\n                    }\n                  ]}\n                >\n                  <Stack direction=\"row\" alignItems=\"center\">\n                    {aDatasetVersion.version}\n                    { /* 'LATEST' chip for latest version */}\n                    {aDatasetVersion === latestVersionOfThisDataset &&\n                      <Tooltip title=\"Latest version\" enterDelay={0} leaveDelay={200}>\n                        <Avatar sx={{\n                          ml: 0.5,\n                          width: '1rem',\n                          height: '1rem',\n                          background: theme.palette.success.main\n                        }}>\n                          <PublishedWithChangesIcon sx={{ width: '0.8rem', height: '0.8rem' }} />\n                        </Avatar>\n                      </Tooltip>\n                    }\n                  </Stack>\n                </MenuItem>\n              ))}\n\n              {shouldShowCalendar && <MenuItem\n                key=\"Calendar\"\n                value=\"Calendar\"\n                sx={{ pt: 1, mt: 1, mb: -0.75, borderTop: '0.5px solid' }}\n              >\n                <Stack direction=\"row\" alignItems=\"center\">\n                  Older Versions\n                  <EventIcon fontSize='small' sx={{ ml: 0.5 }} />\n                </Stack>\n              </MenuItem>\n              }\n            </Select>\n          </FormControl>\n        </TableCell>\n        <TableCell sx={{ background: isPreviewing && theme.palette.background.NYUpurpleLight }}>\n          {formatFileSize(selectedVersionOfThisDataset?.sizeInBytes)}\n        </TableCell>\n      </TableRow >\n    </>\n  )\n}\n\nconst PreviewDataset = (props) => {\n  const { previewingDataset, previewingDatasetId, project, smallScreen } = props;\n  const downloadDatasetName = `[${project.id}] ${previewingDataset?.name}-${previewingDataset?.version}.csv`;\n\n  const theme = useTheme();\n\n  const downloadPreviewingDataset = () => {\n    if (!previewingDataset?.fetchedDataset) return;\n\n    const blob = new Blob([previewingDataset?.fetchedDataset], { type: 'application/octet-stream' }); // create a Blob with the raw data\n    const url = URL.createObjectURL(blob); // create a download link for the Blob\n    const downloadLink = document.createElement('a');\n    downloadLink.href = url;\n    downloadLink.download = downloadDatasetName;\n    document.body.appendChild(downloadLink);\n    downloadLink.click(); // simulate a click on the download link\n    URL.revokeObjectURL(url); // clean up by revoking the object URL\n    document.body.removeChild(downloadLink);\n  };\n\n  const [formattedData, setFormattedData] = useState('');\n  const [rowIndices, setRowIndices] = useState('');\n  const numFirstLastRowsToPreview = 5;\n\n  useEffect(() => {\n    if (!previewingDataset?.fetchedDataset) return;\n\n    const csvData = previewingDataset?.fetchedDataset;\n    const lines = csvData.split('\\n');\n    const numRows = lines.length;\n\n    if (numRows <= numFirstLastRowsToPreview * 2) {\n      setFormattedData(csvData);\n      setRowIndices(Array.from({ length: numRows }, (_, index) => index + 1).join('\\n')); // +1 because rowNumber starts at 1 while index starts at 0\n    } else {\n\n      const firstRows = lines.slice(0, numFirstLastRowsToPreview);\n      const lastRows = lines.slice(numRows - numFirstLastRowsToPreview);\n\n      const numOfHiddenRows = numRows - 2 * numFirstLastRowsToPreview;\n\n      const middleRow = [`... [${numOfHiddenRows} rows hidden] ...`];\n\n      setFormattedData(firstRows.concat(middleRow).concat(lastRows).join('\\n'));\n      setRowIndices(\n        Array.from({\n          length: numFirstLastRowsToPreview * 2 + 1 // +1 to account for the middleRow\n        },\n          (_, index) => {\n            const rowIndex = index + 1; // +1 because rowNumber starts at 1 while index starts at 0\n            // Indices for the first rows\n            if (rowIndex < numFirstLastRowsToPreview + 1) {\n              return rowIndex;\n            }\n            // No index for the middle row\n            else if (rowIndex == numFirstLastRowsToPreview + 1) {\n              return '';\n            }\n            // Indices for the last rows\n            else {\n              return numOfHiddenRows + rowIndex - 1;\n            }\n          })\n          .join('\\n'));\n    }\n\n  }, [previewingDataset]);\n\n  return (\n    <Stack spacing={1}>\n      <Box sx={{ '& *': { fontFamily: \"monospace !important\" } }}>\n        <Stack direction=\"row\">\n          <Typography variant='body2' gutterBottom fontWeight={600}>\n            {previewingDataset ?\n              `Previewing: ${previewingDataset.name} (${previewingDataset?.version})`\n              : 'Not previewing any dataset'}\n          </Typography>\n        </Stack>\n\n        <Box\n          component=\"pre\"\n          sx={{\n            overflowX: 'auto',\n            color: theme.palette.text.secondary,\n            backgroundColor: theme.palette.customBackground,\n            p: 2,\n            pt: 1.5,\n            borderRadius: theme.spacing(1),\n            borderTopLeftRadius: 0,\n            minHeight: \"5rem\",\n            width: smallScreen ? '100%' : 'unset',\n            marginTop: 0\n          }}\n        >\n          <Stack direction=\"row\" sx={{ fontSize: smallScreen ? '0.625rem !important' : '0.8rem !important' }}>\n            <Box sx={{ mr: 2, userSelect: 'none' }}>\n              {rowIndices}\n            </Box>\n            <Box>\n              {formattedData}\n            </Box>\n          </Stack>\n        </Box>\n      </Box>\n      <Box textAlign=\"center\" >\n        <Button\n          variant=\"contained\"\n          sx={{\n            textTransform: 'none',\n            textAlign: 'left',\n            lineHeight: 1.1,\n            px: 1.5,\n            py: 1\n          }}\n          onClick={() => {\n            downloadPreviewingDataset();\n            Tracking.sendEventAnalytics(Tracking.Events.rawDatasetDownloaded, {\n              project_id: project.id,\n              dataset_id: previewingDatasetId,\n              dataset_name: previewingDataset.name,\n              dataset_version: previewingDataset.version\n            });\n          }}\n          disabled={!previewingDataset}\n        >\n          <DownloadIcon sx={{ fontSize: '1.25rem', mr: 0.5 }} />\n          {previewingDataset ? downloadDatasetName : \"No dataset available to download\"}\n        </Button>\n      </Box>\n    </Stack >\n  )\n}","// disable eslint for this file\n/* eslint-disable */\nimport { useState, useEffect, useContext } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { LinkContext } from '../../ContextProviders/LinkContext';\nimport { TabContext } from '../../ContextProviders/TabContext';\nimport parse from 'html-react-parser';\nimport ChartComponent from '../../Graphs/ChartComponent';\nimport UppercaseTitle from '../../Components/UppercaseTitle';\nimport CommentSection from '../../Components/CommentSection';\nimport { Box, Typography, Container, Divider, Chip, Grid, Tooltip } from '@mui/material';\n\nimport { useTheme } from '@mui/material/styles';\n\nimport ThemePreferences from '../../Themes/ThemePreferences';\n\nimport AirQualityIndexLegendQuickGlance from '../../Components/AirQualityHelper';\n\nimport data from '../../temp_database.json';\nimport jsonData from '../../section_data.json';\n\nimport PersonIcon from '@mui/icons-material/Person';\nimport EmailIcon from '@mui/icons-material/Email';\nimport PublishedWithChangesIcon from '@mui/icons-material/PublishedWithChanges';\nimport BarChartIcon from '@mui/icons-material/BarChart';\nimport CommentIcon from '@mui/icons-material/Comment';\n\nimport { replacePlainHTMLWithMuiComponents } from '../../Utils/Utils';\nimport DatasetDownloadDialog from '../../Components/DatasetDownload/DatasetDownloadDialog';\n\nimport { scrollToSection } from '../../Components/Header/MenuItemAsNavLink';\nimport FullWidthBox from '../../Components/FullWidthBox';\n\nimport * as Tracking from '../../Utils/Tracking';\n\nimport { CommentCountsContext } from '../../ContextProviders/CommentCountsContext';\n\nimport { SheetsDataContext } from '../../ContextProviders/SheetsDataContext';\n\nimport ChartSubstituteComponentLoader from '../../Graphs/ChartSubstituteComponents/ChartSubstituteComponentLoader';\n\n// Custom Chip component to display metadata\nconst CustomChip = (props) => {\n  const { tooltipTitle, ...otherProps } = props;\n  return (\n    <Tooltip title={tooltipTitle} enterDelay={0} leaveDelay={200}>\n      <Chip\n        size=\"small\"\n        {...otherProps}\n      />\n    </Tooltip>\n  );\n}\n\nconst Project = ({ themePreference }) => {\n  const [_, setCurrentPage, chartsTitlesList, setChartsTitlesList] = useContext(LinkContext);\n\n  let { id } = useParams();\n  const [project, setProject] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [tab, setTab] = useContext(TabContext);\n\n  const [commentCounts] = useContext(CommentCountsContext);\n  const commentCount = commentCounts[project.id];\n\n  const [sheetsData] = useContext(SheetsDataContext);\n  const lastUpdate = sheetsData[project.id];\n\n  // Update the page's title\n  useEffect(() => { if (project.title) document.title = `${project.title} | CITIES Dashboard`, [project] });\n\n  // Update the currentPage with the project's ID\n  // and the chartsTitle with all the charts' titles of the project\n  useEffect(() => {\n    // loop through all projects and find the one with the matching id\n    let chartsTitles = [];\n\n    data.map((project) => {\n      if (project.id === id) {\n        setProject({ ...project });\n        let temp = {};\n        for (let i = 0; i < project.charts.length; i++) {\n          temp[i] = 0;\n        }\n        setTab(temp);\n        setLoading(true);\n        // Populate the array with all the charts' titles of the project\n        chartsTitles = project.charts.map((element, index) => ({ chartTitle: element.title, chartID: `chart-${index + 1}` }));\n      }\n    });\n\n    setCurrentPage(\"project\");\n    setChartsTitlesList(chartsTitles);\n\n  }, [id, setCurrentPage, setChartsTitlesList]);\n\n  const theme = useTheme();\n\n  return (\n    <>\n      {loading && (\n        <Box width=\"100%\">\n          {\n            project.id === 'air-quality' && <AirQualityIndexLegendQuickGlance />\n          }\n\n          <FullWidthBox backgroundColor='customAlternateBackground'>\n            <Container sx={{ pt: 5, pb: 3 }}>\n\n              <UppercaseTitle text={project.title} />\n\n              <Grid container spacing={1} sx={{ pb: 3, mt: -3 }}>\n                {\n                  project.owners.map((owner, index) => (\n                    <Grid item>\n                      <CustomChip\n                        key={index}\n                        icon={<PersonIcon />}\n                        label={owner}\n                        tooltipTitle=\"Dataset Owner\"\n                      />\n                    </Grid>\n                  ))\n                }\n\n                <Grid item>\n                  <CustomChip\n                    icon={<EmailIcon />}\n                    label={project.contact}\n                    tooltipTitle=\"Contact\"\n                    component=\"a\"\n                    href={`mailto:${project.contact}`}\n                    clickable\n                  />\n                </Grid>\n\n                <Grid item>\n                  <CustomChip\n                    icon={<BarChartIcon />}\n                    label={`${project.charts.length} Chart${project.charts.length > 1 && \"s\"}`}\n                    tooltipTitle=\"Number of Charts\"\n                    onClick={() => {\n                      scrollToSection(jsonData.charts.id);\n                      Tracking.sendEventAnalytics(Tracking.Events.internalNavigation,\n                        {\n                          destination_id: jsonData.charts.id,\n                          destination_label: jsonData.project.toString(),\n                          origin_id: 'chip'\n                        })\n                    }}\n                  />\n                </Grid>\n\n                {\n                  lastUpdate &&\n                  <Grid item>\n                    <CustomChip\n                      icon={<PublishedWithChangesIcon />}\n                      label={`Last update: ${lastUpdate}`}\n                      tooltipTitle=\"Last Update\" />\n                  </Grid>\n                }\n\n                {commentCount != null &&\n                  <Grid item>\n                    <CustomChip\n                      icon={<CommentIcon />}\n                      label={`${commentCount} Comment${commentCounts[project.id] > 1 ? \"s\" : \"\"}`}\n                      tooltipTitle=\"Number of Comments\"\n                      onClick={() => {\n                        scrollToSection(jsonData.commentSection.id);\n                        Tracking.sendEventAnalytics(Tracking.Events.internalNavigation,\n                          {\n                            destination_id: jsonData.commentSection.id,\n                            destination_label: jsonData.commentSection.toString(),\n                            origin_id: 'chip'\n                          })\n                      }}\n                    />\n                  </Grid>}\n              </Grid>\n\n              <Typography\n                component=\"div\"\n                variant=\"body1\"\n                color=\"text.secondary\"\n                sx={{\n                  textAlign: 'justify', pb: 3, mb: 0, \"& table *\": {\n                    color: `${theme.palette.text.secondary}`\n                  }\n                }}\n                gutterBottom\n              >\n                {parse(project.description, {\n                  replace: replacePlainHTMLWithMuiComponents,\n                })}\n              </Typography>\n\n              <DatasetDownloadDialog project={project} />\n            </Container>\n          </FullWidthBox>\n\n          <Box id={jsonData.charts.id}>\n            {project.charts.map((element, index) => (\n              <FullWidthBox\n                id={chartsTitlesList[index].chartID} // set the chartWrapper's ID to help Navbar in Header scroll to\n                key={index}\n                backgroundColor={\n                  index % 2 != 0 && 'customAlternateBackground'\n                }\n              >\n                <Container\n                  sx={{ pt: 4, pb: 4 }}\n                  height=\"auto\"\n                  className={themePreference === ThemePreferences.dark ? 'dark' : ''}\n                >\n                  <Typography variant=\"h6\" color=\"text.primary\">\n                    {index + 1}. {element.title}\n                  </Typography>\n\n                  {/* Either display the regular ChartComponent, or substitute with a customized component in ../../Graphs/ChartSubstituteComponents/ (if specified) */}\n                  {element.chartSubstituteComponentName ?\n                    <ChartSubstituteComponentLoader chartSubstituteComponentName={element.chartSubstituteComponentName} />\n                    : (\n                      <ChartComponent\n                        chartData={{\n                          chartIndex: index,\n                          sheetId: project.sheetId,\n                          ...element,\n                        }}\n                      />\n                    )}\n\n                  <Box sx={{ my: 3 }}>\n                    <Typography\n                      component=\"div\"\n                      variant=\"body1\"\n                      color=\"text.secondary\"\n                    >\n                      {element.subtitle && parse(element.subtitle, {\n                        replace: replacePlainHTMLWithMuiComponents,\n                      })}\n                      {Object.keys(tab)[index] == index &&\n                        element.subcharts &&\n                        element.subcharts[Object.values(tab)[index]]\n                          .subchartSubtitle &&\n                        parse(\n                          element.subcharts[Object.values(tab)[index]]\n                            .subchartSubtitle, {\n                          replace: replacePlainHTMLWithMuiComponents,\n                        }\n                        )}\n                    </Typography>\n                    <Typography variant=\"caption\" color=\"text.secondary\">\n                      {element.reference && parse(element.reference, {\n                        replace: replacePlainHTMLWithMuiComponents,\n                      })}\n                      {Object.keys(tab)[index] == index &&\n                        element.subcharts &&\n                        element.subcharts[Object.values(tab)[index]].reference &&\n                        parse(\n                          element.subcharts[Object.values(tab)[index]].reference, {\n                          replace: replacePlainHTMLWithMuiComponents,\n                        }\n                        )}\n                    </Typography>\n                  </Box>\n                </Container>\n              </FullWidthBox>\n            ))}\n          </Box>\n\n          <Divider />\n\n          <FullWidthBox id={jsonData.commentSection.id} sx={{ pt: 3, pb: 4 }}>\n            <CommentSection pageID={project.id} />\n          </FullWidthBox>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default Project;\n"],"names":["StyledTable","styled","Table","theme","isTiny","minWidth","fontSize","color","palette","text","secondary","breakpoints","down","fontWeight","primary","lineHeight","props","hideAQIDescription","useTheme","airQualityIndexCategories","name","chart","optionsColors","aqi","rawPM2_5","description","suggestion","overflow","size","sx","pr","width","height","pl","align","map","element","border","backgroundColor","chartHeight","chartData","sheetId","gid","query","headers","chartType","columns","options","legend","position","enableInteractivity","hAxis","ticks","chartArea","portrait","landscape","isStacked","colors","bar","groupWidth","AirQualityIndexLegendQuickGlance","useState","anchorEl","setAnchorEl","handlePopperOpen","event","currentTarget","Tracking","handlePopperClose","open","Boolean","FadeInButtonForSpeedDial","distanceFromBottomOfWindow","Fab","mt","undefined","onMouseEnter","onMouseLeave","onClick","isMobile","Stack","direction","alignItems","Air","Typography","variant","Popper","id","pointerEvents","placement","onClose","keepMounted","disableRestoreFocus","transition","TransitionProps","Fade","timeout","Paper","elevation","py","mb","mx","AirQualityIndexTable","HighlightedDay","PickersDay","content","bottom","main","opacity","CustomDayComponent","versionDates","day","other","indexOf","dayjs","format","DatasetCalendar","smallScreen","onChange","versions","filter","version","length","ClickAwayListener","onClickAway","Card","right","zIndex","raised","LocalizationProvider","dateAdapter","AdapterDayjs","DateCalendar","loading","renderLoading","DayCalendarSkeleton","slots","value","selectionState","slotProps","shouldDisableDate","date","disableHighlightToday","minDate","slice","maxDate","DatasetDownloadDialog","project","rawDatasetsMetadata","useContext","RawDatasetsMetadataContext","datasets","setDatasets","useEffect","useMediaQuery","setOpen","handleClose","Button","project_id","DataObject","Dialog","maxWidth","fullWidth","fullScreen","DialogActions","justifyContent","autoFocus","ChevronLeft","DialogContent","px","display","flexDirection","Chip","label","title","DatasetSelectorAndPreviewer","my","fontStyle","owners","join","lastOwner","pop","oxfordCommaOwners","getOwnerString","Link","href","previewingDataset","setPreviewingDataset","previewingDatasetId","setPreviewingDatasetId","fetchDataFromURL","rawLink","then","data","fetchedDataset","Grid","container","spacing","item","sm","md","DatasetsTable","PreviewDataset","tableLayout","TableHead","TableRow","TableCell","TableBody","dataset","Dataset","isPreviewing","fetchedDatasets","setFetchedDatasets","latestVersionOfThisDataset","showCalendar","setShowCalendar","selectedVersionOfThisDataset","setSelectedVersionOfThisDataset","visibleVersions","find","push","isOlderVersion","shouldShowCalendar","handleVersionChange","selectedVal","target","selectedVersion","aDatasetVersion","fetchThisDataset","handleCalendarChange","selectedVersionWithFetchedDataset","setThisDatasetToPreview","cursor","background","NYUpurpleLight","Modal","FormControl","Select","MenuProps","disablePortal","index","MenuItem","marginTop","borderTop","top","left","transform","Tooltip","enterDelay","leaveDelay","Avatar","ml","success","PublishedWithChanges","pt","Event","sizeInBytes","toFixed","formatFileSize","downloadDatasetName","formattedData","setFormattedData","rowIndices","setRowIndices","csvData","lines","split","numRows","numFirstLastRowsToPreview","Array","from","_","firstRows","lastRows","numOfHiddenRows","middleRow","concat","rowIndex","Box","fontFamily","gutterBottom","component","overflowX","customBackground","p","borderRadius","borderTopLeftRadius","minHeight","mr","userSelect","textAlign","textTransform","blob","Blob","type","url","URL","createObjectURL","downloadLink","document","createElement","download","body","appendChild","click","revokeObjectURL","removeChild","downloadPreviewingDataset","dataset_id","dataset_name","dataset_version","disabled","Download","CustomChip","tooltipTitle","otherProps","themePreference","LinkContext","setCurrentPage","chartsTitlesList","setChartsTitlesList","useParams","setProject","setLoading","TabContext","tab","setTab","CommentCountsContext","commentCounts","commentCount","SheetsDataContext","lastUpdate","chartsTitles","temp","i","charts","chartTitle","chartID","FullWidthBox","Container","pb","UppercaseTitle","owner","icon","Person","Email","contact","clickable","BarChart","scrollToSection","jsonData","destination_id","destination_label","origin_id","Comment","parse","replace","replacePlainHTMLWithMuiComponents","className","ThemePreferences","chartSubstituteComponentName","ChartSubstituteComponentLoader","ChartComponent","chartIndex","subtitle","Object","keys","subcharts","values","subchartSubtitle","reference","Divider","CommentSection","pageID"],"sourceRoot":""}