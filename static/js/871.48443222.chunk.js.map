{"version":3,"file":"static/js/871.48443222.chunk.js","mappings":"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","sources":["Components/CurrentAQIGrid.jsx","Pages/Home/About.jsx","Pages/Home/GetInTouch.jsx","Pages/Home/Home.jsx","Pages/Project/ExpandableSection.jsx"],"sourcesContent":["// disable eslint for this file\n/* eslint-disable */\nimport { Box, Grid, Typography, Skeleton, Stack } from '@mui/material';\nimport ThermostatIcon from '@mui/icons-material/Thermostat';\nimport WaterDropIcon from '@mui/icons-material/WaterDrop';\nimport ErrorIcon from '@mui/icons-material/Error';\n\nimport { returnSensorStatus, SensorStatus, getFormattedElapsedTimeFromNow } from '../Pages/Screen/ScreenUtils';\nimport { TemperatureUnits, getFormattedTemperature, calculateHeatIndex } from \"../Pages/Screen/TemperatureUtils\";\n\nimport AQIdatabase from '../Utils/AirQualityIndexHelper';\n\nimport CustomThemes from '../Themes/CustomThemes';\n\nconst CurrentAQIGrid = (props) => {\n  const { currentSensorsData, temperatureUnitPreference, isScreen = true } = props;\n\n  const getGridItemSize = (numOfItems) => {\n    return {\n      xs: Math.max(12 / numOfItems, 6),\n      sm: Math.max(12 / numOfItems, 4),\n      lg: isScreen ? (12 / numOfItems) : Math.min(5, Math.max(12 / numOfItems, 2))\n    }\n  }\n\n  return (\n    <Grid\n      container\n      justifyContent=\"center\"\n      sx={{\n        '& .MuiSvgIcon-root': {\n          verticalAlign: 'sub',\n          fontSize: isScreen ? null : '1rem'\n        },\n        '& *': {\n          fontWeight: '500'\n        },\n        '& .condensedFont': {\n          fontFamily: 'IBM Plex Sans Condensed, sans-serif !important',\n          '& *': {\n            fontFamily: 'IBM Plex Sans Condensed, sans-serif !important'\n          }\n        }\n      }}\n    >\n      {\n        currentSensorsData ?\n\n          (Object.entries(currentSensorsData).map(([key, sensorData], index) => (\n            <Grid\n              item\n              key={key}\n              {...getGridItemSize(Object.keys(currentSensorsData).length)}\n              sx={\n                sensorData.current?.sensor_status !== SensorStatus.active &&\n                { '& *': { color: `${CustomThemes.universal.palette.inactiveSensor}` } }\n              }\n            >\n              <Box sx={{ '& *': { color: sensorData.current?.color } }}>\n                <Typography variant={isScreen ? \"h4\" : 'h5'} fontWeight=\"500\" className='condensedFont'>\n                  {sensorData.sensor?.location_long || sensorData.sensor?.location_short || 'No Location Name'}\n                </Typography>\n                <Typography variant={isScreen ? \"h1\" : 'h2'} fontWeight=\"500\" lineHeight={isScreen ? 0.8 : 0.9}>\n                  {sensorData.current?.aqi || '--'}\n                </Typography>\n                <Typography variant={isScreen ? \"h4\" : 'h5'} fontWeight=\"500\" className='condensedFont'>\n                  {sensorData.current?.category || '--'}\n                </Typography>\n              </Box>\n\n              <Box sx={{\n                '& *': {\n                  color:\n                    isScreen ? (\n                      sensorData.current?.sensor_status === SensorStatus.active ?\n                        '#c8dcff' : CustomThemes.universal.palette.inactiveSensor\n                    )\n                      : 'text.secondary'\n                }, mt: isScreen ? 2 : 1\n              }} className='condensedFont'>\n                <Typography variant={isScreen ? \"h6\" : 'body1'}>\n                  <ThermostatIcon />\n                  {\n                    getFormattedTemperature({\n                      rawTemp: sensorData.current?.temperature,\n                      currentUnit: TemperatureUnits.celsius,\n                      returnUnit: temperatureUnitPreference\n                    })\n                  }\n                  &nbsp;&nbsp;-&nbsp;\n                  <WaterDropIcon sx={{ transform: 'scaleX(0.9)' }} />\n                  {sensorData.current?.rel_humidity ? Math.round(sensorData.current?.rel_humidity) : \"--\"}%\n                </Typography>\n                {\n                  // Show heat index for selected location types\n                  ['outdoors', 'indoors_gym'].includes(sensorData.sensor?.location_type) &&\n                  <Typography variant={isScreen ? \"body1\" : 'body2'} sx={{ fontWeight: '300 !important' }}>\n                    {calculateHeatIndex({\n                      rawTemp: sensorData.current?.temperature,\n                      currentUnit: TemperatureUnits.celsius,\n                      rel_humidity: sensorData.current?.rel_humidity,\n                      returnUnit: temperatureUnitPreference\n                    })}\n                  </Typography>\n                }\n                {\n                  displayLastUpdateAndSensorStatus({ sensorData, isScreen })\n                }\n              </Box>\n\n              {\n                // Display outdoor-indoor comparison if both sensors are active\n                sensorData.sensor_status !== SensorStatus.active &&\n                <Typography variant={isScreen ? \"h6\" : 'body1'} className=\"condensedFont\">\n                  {returnSensorStatus(sensorData)}\n                </Typography>\n              }\n            </Grid>\n          ))\n          )\n          :\n          (\n            <Stack direction=\"column\" alignItems=\"center\" justifyContent=\"center\">\n              <Skeleton variant='text' sx={{ width: '15rem', fontSize: '2rem' }} />\n              <Skeleton variant='text' sx={{ width: '5rem', fontSize: '4rem', my: -1.5 }} />\n              <Skeleton variant='text' sx={{ width: '10rem', fontSize: '2rem' }} />\n              <Skeleton variant='text' sx={{ width: '7.5rem', fontSize: '1rem' }} />\n              <Skeleton variant='text' sx={{ width: '7.5rem', fontSize: '1rem' }} />\n            </Stack>\n          )\n      }\n    </Grid>\n  );\n};\n\nconst displayLastUpdateAndSensorStatus = ({ sensorData, isScreen }) => {\n  if (isScreen && sensorData.current.sensor_status === SensorStatus.active) return null;\n  else\n    return (\n      <Typography\n        variant={isScreen ? 'h6' : 'caption'}\n        sx={{\n          mt: 0,\n          fontWeight: isScreen && '500 !important'\n        }}\n      >\n        {\n          sensorData.current?.sensor_status !== SensorStatus.active\n          &&\n          <>\n            <ErrorIcon\n              sx={{\n                '& *': {\n                  color: `${AQIdatabase[3].lightThemeColor} !important`\n                },\n                mr: 0.5\n              }} />\n            Offline.&nbsp;\n          </>\n        }\n        Last update:\n        {(sensorData.current?.timestamp || sensorData.sensor?.last_seen)\n          ? ` ${getFormattedElapsedTimeFromNow(sensorData.current?.timestamp || sensorData.sensor?.last_seen)} ago`\n          : '--'}\n      </Typography>\n    )\n}\n\nexport default CurrentAQIGrid;\n","import { Stack, Typography, Paper } from '@mui/material';\n\nimport parse from 'html-react-parser';\nimport UppercaseTitle from '../../Components/UppercaseTitle';\nimport ExpandableSection from '../Project/ExpandableSection';\n\nimport jsonData from '../../section_data.json';\nimport { replacePlainHTMLWithMuiComponents, capitalizePhrase } from '../../Utils/Utils';\n\nfunction About() {\n  return (\n    <>\n      <UppercaseTitle text={capitalizePhrase(jsonData.about.id)} />\n      <Stack spacing={3}>\n        {jsonData.about.content.map((element, index) => (\n          <Paper key={index} elevation={2} sx={{ p: 3 }}>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              {parse(element.mainText, {\n                replace: replacePlainHTMLWithMuiComponents,\n              })}\n            </Typography>\n            {\n              element.reference && (\n                <ExpandableSection\n                  title={\"Reference\"}\n                  content={(\n                    <Typography variant=\"caption\" color=\"text.secondary\">\n                      {parse(element.reference, {\n                        replace: replacePlainHTMLWithMuiComponents,\n                      })}\n                    </Typography>\n                  )}\n                />\n              )\n            }\n          </Paper>\n        ))}\n        <Typography variant=\"caption\" color=\"text.secondary\" sx={{ px: 3 }}>\n          {parse(jsonData.disclaimer.content, {\n            replace: replacePlainHTMLWithMuiComponents,\n          })}\n        </Typography>\n      </Stack>\n    </>\n  );\n}\n\nexport default About;\n","import { Typography, Paper } from '@mui/material';\n\nimport parse from 'html-react-parser';\nimport UppercaseTitle from '../../Components/UppercaseTitle';\n\nimport jsonData from '../../section_data.json';\nimport { replacePlainHTMLWithMuiComponents, capitalizePhrase } from '../../Utils/Utils';\n\nfunction GetInTouch() {\n  return (\n    <>\n      <UppercaseTitle text={capitalizePhrase(jsonData.getInTouch.id)} />\n      <Paper elevation={2} sx={{ p: 3, pb: 1 }}>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          {parse(jsonData.getInTouch.content, {\n            replace: replacePlainHTMLWithMuiComponents,\n          })}\n        </Typography>\n      </Paper>\n    </>\n  );\n}\n\nexport default GetInTouch;\n","import { useEffect, useContext, useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\nimport { Button, Box, Stack, Typography, Container, Divider } from '@mui/material';\nimport { LinkContext } from '../../ContextProviders/LinkContext';\n\nimport UppercaseTitle from '../../Components/UppercaseTitle';\nimport FullWidthBox from '../../Components/FullWidthBox';\n\n// import AtAGlance from './AtAGlance';\nimport About from './About';\n\nimport jsonData from '../../section_data.json';\n\nimport * as Tracking from '../../Utils/Tracking';\nimport parse from 'html-react-parser';\nimport { replacePlainHTMLWithMuiComponents } from '../../Utils/Utils';\n\nimport AQImap, { TileOptions } from '../../Components/AQImap';\n\nimport CurrentAQIGrid from '../../Components/CurrentAQIGrid';\nimport { EndPoints, fetchAndProcessCurrentSensorsData, getApiUrl } from '../../Utils/ApiUtils';\n\nimport BarChartIcon from '@mui/icons-material/BarChart';\nimport GetInTouch from './GetInTouch';\nimport { UniqueRoutes } from '../../Utils/RoutesUtils';\n\nfunction Home({ themePreference, temperatureUnitPreference, title }) {\n  // Update the page's title\n  useEffect(() => {\n    document.title = title;\n  }, [title]);\n\n  // useState for home page data\n  // eslint-disable-next-line no-unused-vars\n  const [_, setCurrentPage, __, setChartsTitlesList] = useContext(LinkContext);\n\n  // set underline link to home\n  useEffect(() => {\n    setCurrentPage(UniqueRoutes.home);\n    setChartsTitlesList([]);\n  }, [setCurrentPage, setChartsTitlesList]);\n\n  // Fetch public NYUAD sensors data and public map data\n  const [nyuadCurrentSensorData, setNyuadCurrentSensorData] = useState({});\n  const [rawMapData, setRawMapData] = useState();\n\n  useEffect(() => {\n    const nyuadUrl = getApiUrl({ endpoint: EndPoints.current, school_id: 'nyuad' });\n    fetchAndProcessCurrentSensorsData(nyuadUrl)\n      .then((data) => {\n        setNyuadCurrentSensorData(data)\n      })\n      .catch((error) => console.log(error));\n\n    const mapUrl = getApiUrl({ endpoint: EndPoints.map });\n    fetchAndProcessCurrentSensorsData(mapUrl)\n      .then((data) => {\n        setRawMapData(data)\n      })\n      .catch((error) => console.log(error));\n  }, []);\n\n\n  return (\n    <Box width=\"100%\">\n      <FullWidthBox>\n        <Container sx={{ pt: 3, pb: 4 }}>\n          <UppercaseTitle text=\"real-time air quality at NYUAD\" />\n          <Typography variant='body1' color='text.secondary' sx={{ mt: -2, mb: 2 }}>\n            PM2.5 (Particulate Matter Smaller Than 2.5 Micrometer)\n          </Typography>\n\n          <Stack spacing={2} alignItems=\"center\" textAlign=\"center\">\n            <CurrentAQIGrid\n              currentSensorsData={nyuadCurrentSensorData}\n              isScreen={false}\n              temperatureUnitPreference={temperatureUnitPreference}\n            />\n            <Stack width=\"fit-content\" alignItems=\"center\" margin=\"auto\">\n              <Button\n                component={RouterLink}\n                variant='contained'\n                sx={{ width: \"fit-content\", mb: 1 }}\n                to={UniqueRoutes.nyuad}\n                onClick={() => {\n                  Tracking.sendEventAnalytics(\n                    Tracking.Events.internalNavigation,\n                    {\n                      destination_id: UniqueRoutes.nyuad,\n                      destination_school_id: \"nyuad\",\n                      origin_id: UniqueRoutes.home\n                    }\n                  );\n                }}\n              >\n                <BarChartIcon sx={{ fontSize: '0.8rem' }} />&nbsp;NYUAD Dashboard (Public Access)\n              </Button>\n              <Typography variant=\"caption\" color=\"text.secondary\">\n                See detailed analysis of historical air quality data at NYUAD\n              </Typography>\n            </Stack>\n          </Stack>\n        </Container>\n      </FullWidthBox>\n\n      <FullWidthBox sx={{ backgroundColor: 'customAlternateBackground' }}>\n        <Container sx={{ py: 3 }}>\n          <UppercaseTitle text=\"public outdoor stations\" />\n          <Typography variant=\"body1\" color=\"text.secondary\">\n            {parse(jsonData.publicOutdoorStations.content, {\n              replace: replacePlainHTMLWithMuiComponents,\n            })}\n          </Typography>\n        </Container>\n        <AQImap\n          tileOption={TileOptions.default}\n          themePreference={themePreference}\n          temperatureUnitPreference={temperatureUnitPreference}\n          placeholderText={\"Map of CITIESair public outdoor air quality stations in Abu Dhabi.\"}\n          centerCoordinates={[24.46, 54.52]}\n          maxBounds={[\n            [22.608292, 51.105185],\n            [26.407575, 56.456571],\n          ]}\n          rawMapData={rawMapData}\n        />\n\n      </FullWidthBox>\n\n      <Divider />\n\n      <FullWidthBox id={jsonData.about.id} sx={{ pt: 3, pb: 4 }}>\n        <Container>\n          <About />\n        </Container>\n      </FullWidthBox>\n\n      <Divider />\n\n      <FullWidthBox id={jsonData.getInTouch.id} sx={{ pt: 3, pb: 4 }}>\n        <Container>\n          <GetInTouch />\n        </Container>\n      </FullWidthBox>\n\n    </Box >\n  );\n}\n\nexport default Home;\n","// disable eslint for this file\n/* eslint-disable */\nimport { useState } from 'react';\nimport { styled } from '@mui/material/styles';\n\nimport MuiAccordion from '@mui/material/Accordion';\nimport MuiAccordionSummary from '@mui/material/AccordionSummary';\nimport MuiAccordionDetails from '@mui/material/AccordionDetails';\nimport { Box, Typography, Tooltip } from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\nimport * as Tracking from '../../Utils/Tracking';\n\nconst StyledAccordion = styled(MuiAccordion)(({ theme, expanded }) => ({\n  color: theme.palette.text.secondary,\n  backgroundImage: 'none',\n  backgroundColor: expanded ? theme.palette.background.default : 'transparent',\n  boxShadow: expanded ? theme.shadows : 'none',\n  transition: 'none',\n}));\n\nconst StyledAccordionSummary = styled(MuiAccordionSummary)(({ theme, expanded }) => ({\n  marginTop: expanded ? theme.spacing(3) : 0,\n  flexDirection: 'row-reverse',\n  paddingLeft: expanded ? theme.spacing(1) : 0,\n  '& .MuiTypography-root': {\n    color: theme.palette.text.primary,\n    textDecoration: 'underline',\n    transition: 'none',\n    '&:hover': {\n      color: theme.palette.primary.main,\n    },\n  },\n}));\n\nconst ExpandableSection = ({ title, content }) => {\n  const [expanded, setExpanded] = useState(undefined);\n\n  const handleAccordionChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : undefined);\n    Tracking.sendEventAnalytics(\n      isExpanded ? Tracking.Events.expandSection : Tracking.Events.collapseSection,\n      {\n        section: title\n      }\n    );\n  };\n\n  return (\n    <Box>\n      <StyledAccordion\n        expanded={expanded === \"panel1\"}\n        onChange={handleAccordionChange(\"panel1\")}\n        transitionDuration={0}\n      >\n        <StyledAccordionSummary expanded={expanded} expandIcon={<ExpandMoreIcon />} aria-controls=\"panel1a-content\" id=\"panel1a-header\">\n          <Tooltip title={expanded ? \"Click to collapse\" : \"Click to expand\"} enterDelay={0} leaveDelay={200}>\n            <Typography component=\"a\" variant=\"body2\">\n              {title}\n            </Typography>\n          </Tooltip>\n        </StyledAccordionSummary>\n        <MuiAccordionDetails>\n          {content}\n        </MuiAccordionDetails>\n      </StyledAccordion>\n    </Box>\n  );\n}\n\nexport default ExpandableSection;"],"names":["displayLastUpdateAndSensorStatus","_ref2","_sensorData$current11","_sensorData$current12","_sensorData$sensor4","_sensorData$current13","_sensorData$sensor5","sensorData","isScreen","current","sensor_status","SensorStatus","active","_jsxs","Typography","variant","sx","mt","fontWeight","children","_Fragment","_jsx","ErrorIcon","color","concat","AQIdatabase","lightThemeColor","mr","timestamp","sensor","last_seen","getFormattedElapsedTimeFromNow","props","currentSensorsData","temperatureUnitPreference","Grid","container","justifyContent","verticalAlign","fontSize","fontFamily","Object","entries","map","_ref","index","_sensorData$current","_sensorData$current2","_sensorData$sensor","_sensorData$sensor2","_sensorData$current3","_sensorData$current4","_sensorData$current5","_sensorData$current6","_sensorData$current7","_sensorData$current8","_sensorData$sensor3","_sensorData$current9","_sensorData$current10","key","item","numOfItems","keys","length","xs","Math","max","sm","lg","min","CustomThemes","universal","palette","inactiveSensor","Box","className","location_long","location_short","lineHeight","aqi","category","ThermostatIcon","getFormattedTemperature","rawTemp","temperature","currentUnit","TemperatureUnits","celsius","returnUnit","WaterDropIcon","transform","rel_humidity","round","includes","location_type","calculateHeatIndex","returnSensorStatus","Stack","direction","alignItems","Skeleton","width","my","UppercaseTitle","text","capitalizePhrase","jsonData","spacing","element","Paper","elevation","p","parse","mainText","replace","replacePlainHTMLWithMuiComponents","reference","ExpandableSection","title","content","px","pb","themePreference","useEffect","document","_","setCurrentPage","__","setChartsTitlesList","useContext","LinkContext","UniqueRoutes","home","nyuadCurrentSensorData","setNyuadCurrentSensorData","useState","rawMapData","setRawMapData","nyuadUrl","getApiUrl","endpoint","EndPoints","school_id","fetchAndProcessCurrentSensorsData","then","data","catch","error","console","log","mapUrl","FullWidthBox","Container","pt","mb","textAlign","CurrentAQIGrid","margin","Button","component","RouterLink","to","nyuad","onClick","Tracking","internalNavigation","destination_id","destination_school_id","origin_id","BarChartIcon","backgroundColor","py","AQImap","tileOption","TileOptions","default","placeholderText","centerCoordinates","maxBounds","Divider","id","About","GetInTouch","StyledAccordion","styled","MuiAccordion","theme","expanded","secondary","backgroundImage","background","boxShadow","shadows","transition","StyledAccordionSummary","MuiAccordionSummary","marginTop","flexDirection","paddingLeft","primary","textDecoration","main","_ref3","setExpanded","undefined","onChange","panel","event","isExpanded","expandSection","collapseSection","section","transitionDuration","expandIcon","ExpandMoreIcon","Tooltip","enterDelay","leaveDelay","MuiAccordionDetails"],"sourceRoot":""}