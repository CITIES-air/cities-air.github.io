{"version":3,"file":"static/js/879.c76b29d7.chunk.js","mappings":"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","sources":["Components/AirQuality/AQIexplanation.jsx","Components/AirQuality/AirQualityIndexTable.jsx","Components/ExpandableSection/ExpandableSection.jsx","Components/UppercaseTitle.jsx","Graphs/Subchart/SubchartUtils/SeriesSelector.jsx","Graphs/GoogleChartHelper.jsx","Graphs/Subchart/SubchartUtils/GoogleChartStyleWrapper.jsx","Utils/Gradient/GradientUtils.jsx","Graphs/Subchart/NivoCharts/NivoCalendarChart/ValueRangeBox.jsx","Graphs/Subchart/NivoCharts/NivoCalendarChart/TooltipCalendarChart.jsx","Graphs/Subchart/NivoCharts/NivoChartHelper.jsx","Graphs/Subchart/NivoCharts/NivoCalendarChart/NivoCalendarChart.jsx","Components/DateRangePicker/DateRangePickerUtils.jsx","Components/DateRangePicker/AggregationTypeToggle.jsx","ContextProviders/DateRangePickerContext.jsx","Components/DateRangePicker/CustomDateRangePicker.jsx","ContextProviders/AxesPickerContext.jsx","Components/AxesPicker/AxesPicker.jsx","Graphs/Subchart/SubChart.jsx","Components/CollapsibleSubtitle.jsx","Graphs/DataTypeDropDown.jsx","Components/StyledTabs.jsx","Graphs/ChartComponentWrapper.jsx","Components/CommentSection.jsx","Components/AirQuality/AirQualityIndexLegendQuickGlance.jsx","Components/CustomDialog/CustomDialog.jsx","Components/DatasetDownload/DatasetDownloadDialog.jsx","Components/AirQuality/AirQualityScreen/ScreenDropDownMenu.jsx","Components/SchoolSelector.jsx","Components/AirQuality/AirQualityAlerts/EmailsInput.jsx","Components/AirQuality/AirQualityAlerts/AlertTypes.jsx","ContextProviders/AirQualityAlertContext.jsx","Components/AirQuality/AirQualityAlerts/Utils.jsx","Components/AirQuality/AirQualityAlerts/AlertModificationDialog/DialogData.jsx","Components/AirQuality/AirQualityAlerts/AlertModificationDialog/ThresholdTypeToggle.jsx","Components/AirQuality/AirQualityAlerts/AlertModificationDialog/SimplePicker.jsx","Components/AirQuality/AirQualityAlerts/AlertModificationDialog/HOURS.jsx","Components/AirQuality/AirQualityAlerts/AlertModificationDialog/ThresholdSlider.jsx","Components/AirQuality/AirQualityAlerts/AlertModificationDialog/AlertModificationDialog.jsx","Components/AirQuality/AirQualityAlerts/AlertsTable.jsx","Components/AirQuality/AirQualityAlerts/AlertsTabs.jsx","Components/AirQuality/AirQualityAlerts/AirQualityAlert.jsx","Pages/Project.jsx","Pages/Dashboard.jsx"],"sourcesContent":["import { useContext } from 'react';\nimport { Typography, Box } from '@mui/material';\nimport parse from 'html-react-parser';\nimport { replacePlainHTMLWithMuiComponents } from '../../Utils/UtilFunctions';\nimport AirQualityIndexTable from './AirQualityIndexTable';\nimport ExpandableSection from '../ExpandableSection/ExpandableSection';\nimport { PreferenceContext } from '../../ContextProviders/PreferenceContext';\n\nconst Explanation = {\n  title: \"Explanation of the US Air Quality Index (AQI) for PM2.5\",\n  subtitle: \"CITIESair uses the <a href='https://www.airnow.gov/aqi/aqi-basics/'>Air Quality Index (AQI)</a> developed by the United States Environmental Protection Agency (EPA) to effectively communicate different levels of PM2.5 air pollution. To calculate the AQI from the raw measurement of PM2.5 concentration (µg/m³), different breakpoints and piecewise linear function are utilized (read more <a href='https://en.wikipedia.org/wiki/Air_quality_index#United_States'>here</a>). Higher AQI values correspond to poorer air quality and greater heath risks to humans.<br><br>The US EPA sets thresholds for PM2.5 concentration, recently updated in February 2024: <sup>[1]</sup><ul><li><b>Annual average</b>: 9.0 µg/m³, corresponding to US AQI <b>50</b></li><li><b>24-hour average</b>: 35.0 µg/m³, corresponding to US AQI <b>100</b></li></ul>In 2021, the World's Heath Organization (WHO) proposed a new guideline for PM2.5<sup>[2]</sup> with stricter thresholds than those of the US EPA:<ul><li><b>Annual average</b>: 5.0 µg/m³, corresponding to US AQI <b>21</b></li><li><b>24-hour average</b>: 15.0 µg/m³, corresponding to US AQI <b>56</b></li></ul>\",\n  reference: \"[1] \\\"National Ambient Air Quality Standards (NAAQS) for PM.\\\" EPA, Environmental Protection Agency, https://www.epa.gov/pm-pollution/national-ambient-air-quality-standards-naaqs-pm.<br>[2] World Health Organization. \\\"WHO global air quality guidelines: particulate matter (PM2. 5 and PM10), ozone, nitrogen dioxide, sulfur dioxide and carbon monoxide: executive summary.\\\" (2021).\",\n}\n\nconst AQIexplanation = () => {\n  const { themePreference } = useContext(PreferenceContext);\n\n  return (\n    <ExpandableSection\n      title={Explanation.title}\n      content={(\n        <Box>\n          <AirQualityIndexTable themePreference={themePreference} />\n          <Typography\n            component=\"div\"\n            variant=\"body1\"\n            color=\"text.secondary\"\n            sx={{ mt: 2 }}\n          >\n            {parse(Explanation.subtitle, {\n              replace: replacePlainHTMLWithMuiComponents,\n            })}\n          </Typography>\n          <ExpandableSection\n            title={\"Reference\"}\n            content={(\n              <Typography variant=\"caption\" color=\"text.secondary\">\n                {parse(Explanation.reference, {\n                  replace: replacePlainHTMLWithMuiComponents,\n                })}\n              </Typography>\n            )}\n          />\n        </Box>\n      )}\n    />\n  )\n};\n\nexport default AQIexplanation;","import { Box, Table, TableBody, TableCell, TableHead, TableRow, styled } from '@mui/material';\nimport parse from 'html-react-parser';\nimport { replacePlainHTMLWithMuiComponents } from '../../Utils/UtilFunctions';\nimport { AQI_Database } from '../../Utils/AirQuality/AirQualityIndexHelper';\nimport { useContext } from 'react';\nimport { PreferenceContext } from '../../ContextProviders/PreferenceContext';\nimport { CITIESair } from '../../Utils/GlobalVariables';\n\nexport const StyledTable = styled(Table, {\n  shouldForwardProp: (prop) => prop !== 'tiny',\n})(({ theme, tiny }) => ({\n  minWidth: tiny || 700,\n  '& th, td': {\n    fontSize: tiny ? '0.625rem' : '0.6875rem',\n    color: theme.palette.text.secondary,\n    [theme.breakpoints.down('sm')]: {\n      fontSize: tiny ? '0.5rem' : '0.6875rem',\n    },\n  },\n  '& th': {\n    fontWeight: 500,\n    color: theme.palette.text.primary,\n    lineHeight: '1rem'\n  }\n}));\n\nfunction AirQualityIndexTable(props) {\n  const { themePreference } = useContext(PreferenceContext);\n\n  const { tiny, hideAQIDescription } = props;\n\n  const returnFormattedBreakpoints = (low, high) => {\n    if (high === Infinity) return `${low}+`;\n    else return `${low} - ${high}`;\n  }\n\n  return (\n    <>\n      <Box overflow=\"auto\">\n        <StyledTable size=\"small\" tiny={tiny}>\n          <TableHead>\n            <TableRow>\n              <TableCell sx={{ pr: 0 }}>\n                <Box sx={{ width: '1em', height: '1em' }} />\n              </TableCell>\n              <TableCell sx={{ pl: 1 }}>\n                Category\n              </TableCell>\n              <TableCell align=\"right\">US AQI</TableCell>\n              <TableCell align=\"right\">\n                PM2.5\n                (µg/m\n                <sup>3</sup>\n                )\n              </TableCell>\n              {!hideAQIDescription && <TableCell align=\"left\">Description</TableCell>}\n\n              {!hideAQIDescription &&\n                <TableCell align=\"left\">\n                  {CITIESair}&apos; Suggested Actions\n                </TableCell>\n              }\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {AQI_Database.map((element, index) => (\n              <TableRow\n                key={index}\n                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n              >\n                <TableCell sx={{ pr: 0 }}>\n                  <Box sx={{ width: '1em', height: '1em', backgroundColor: element.color[themePreference] }} />\n                </TableCell>\n                <TableCell sx={{ pl: 1 }}>\n                  {element.category}\n                </TableCell>\n                <TableCell align=\"right\" sx={{ whiteSpace: \"nowrap\" }}>\n                  {returnFormattedBreakpoints(element.aqiUS.low, element.aqiUS.high)}\n                </TableCell>\n                <TableCell align=\"right\" sx={{ whiteSpace: \"nowrap\" }}>\n                  {returnFormattedBreakpoints(element.rawPM2_5.low, element.rawPM2_5.high)}\n                </TableCell>\n                {!hideAQIDescription && <TableCell align=\"left\">{element.description}</TableCell>}\n                {!hideAQIDescription\n                  && (\n                    <TableCell align=\"left\">\n                      {\n                        parse(element.healthSuggestions.outdoors, {\n                          replace: replacePlainHTMLWithMuiComponents,\n                        })\n                      }\n                    </TableCell>\n                  )}\n              </TableRow>\n            ))}\n          </TableBody>\n        </StyledTable>\n      </Box>\n    </>\n  );\n}\n\nexport default AirQualityIndexTable;\n","// disable eslint for this file\n/* eslint-disable */\nimport { useState } from 'react';\nimport { styled } from '@mui/material/styles';\n\nimport MuiAccordion from '@mui/material/Accordion';\nimport MuiAccordionSummary from '@mui/material/AccordionSummary';\nimport MuiAccordionDetails from '@mui/material/AccordionDetails';\nimport { Box, Typography, Tooltip } from '@mui/material';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport InfoIcon from '@mui/icons-material/Info';\nimport * as Tracking from '../../Utils/Tracking';\n\nconst StyledAccordion = styled(MuiAccordion)(({ theme, expanded }) => ({\n  color: theme.palette.text.secondary,\n  backgroundImage: 'none',\n  backgroundColor: expanded ? theme.palette.background.default : 'transparent',\n  boxShadow: expanded ? theme.shadows : 'none',\n  transition: 'none',\n}));\n\nconst StyledAccordionSummary = styled(MuiAccordionSummary)(({ theme, expanded }) => ({\n  marginTop: expanded ? theme.spacing(2) : 0,\n  flexDirection: 'row-reverse',\n  paddingLeft: expanded ? theme.spacing(1) : 0,\n  '& .MuiTypography-root': {\n    color: theme.palette.text.primary,\n    textDecoration: 'underline',\n    transition: 'none',\n    '&:hover': {\n      color: theme.palette.primary.main,\n    },\n  },\n  '& .MuiAccordionSummary-content.Mui-expanded': {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2)\n  }\n}));\n\nconst TooltipText = {\n  expand: \"Click to expand section\",\n  collapse: \"Click to collapse section\"\n}\n\nconst ExpandableSection = ({ title, content }) => {\n  const [expanded, setExpanded] = useState(undefined);\n\n  const handleAccordionChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : undefined);\n    Tracking.sendEventAnalytics(\n      isExpanded ? Tracking.Events.expandSection : Tracking.Events.collapseSection,\n      {\n        section: title\n      }\n    );\n  };\n\n  return (\n    <Box>\n      <StyledAccordion\n        expanded={expanded === \"panel1\"}\n        onChange={handleAccordionChange(\"panel1\")}\n      >\n        <StyledAccordionSummary expanded={expanded} expandIcon={<ArrowDropDownIcon />} aria-controls=\"panel1a-content\" id=\"panel1a-header\">\n          <Tooltip title={expanded ? TooltipText.collapse : TooltipText.expand} enterDelay={0} leaveDelay={200}>\n            <Typography component=\"a\" variant=\"body1\">\n              {title}\n              <InfoIcon sx={{ fontSize: \"1rem\", marginLeft: \"0.25rem\" }} />\n            </Typography>\n          </Tooltip>\n        </StyledAccordionSummary>\n        <MuiAccordionDetails>\n          {content}\n        </MuiAccordionDetails>\n      </StyledAccordion>\n    </Box>\n  );\n}\n\nexport default ExpandableSection;","import { Skeleton, Typography } from '@mui/material';\n\nexport default function UppercaseTitle({ text }) {\n  return (\n    <Typography\n      variant=\"h4\"\n      color=\"text.primary\"\n      sx={{\n        fontWeight: 'medium',\n        display: 'block',\n        textTransform: 'uppercase',\n        pb: 3,\n        lineHeight: 1\n      }}\n    >\n      {text || <Skeleton variant='text' />}\n    </Typography>\n  );\n}\n","/* eslint-disable */\nimport { useState, useEffect } from 'react';\nimport { Stack, Grid, MenuItem, FormControl, Select, Chip, Radio, Checkbox, Typography, Switch } from \"@mui/material\";\nimport { useTheme } from '@mui/material/styles';\n\nimport VisibilityIcon from '@mui/icons-material/Visibility';\n\nconst SELECT_ALL = 'Display All Series';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\n\nexport default function SeriesSelector(props) {\n  const { items: itemsFromChart,\n    selectorID,\n    allowMultiple,\n    seriesLabel,\n    onSeriesSelection,\n    displayChip = true\n  } = props;\n\n  const theme = useTheme();\n\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 5.55 + ITEM_PADDING_TOP,\n        overflow: 'visible !important',\n        background: theme.palette.customAlternateBackground\n      }\n    },\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"left\"\n    },\n    transformOrigin: {\n      vertical: \"top\",\n      horizontal: \"left\"\n    },\n    getContentAnchorEl: null\n  };\n\n  const [items, setItems] = useState(itemsFromChart);\n  const [selectAll, setSelectAll] = useState(allowMultiple); // default: all is selected if multiSelect is true\n\n  useEffect(() => {\n    setItems(itemsFromChart);\n  }, [itemsFromChart]);\n\n  useEffect(() => {\n    setSelectAll(items.every(item => item.selected)); // set selectAll if all items are selected\n  }, [items]);\n\n  const handleChange = (event) => {\n    // Get the array of the currently selected value(s)\n    const {\n      target: { value }\n    } = event;\n\n    // If the current selection has SELECT_ALL\n    // Behavior:\n    // - If SELECT_ALL is being selected now, then set all items to selected\n    // - IF SELECT_ALL is being de-selected now, then set all items but the first one to be unselected \n    // (to make sure there's always at least 1 item being selected)\n    if (value.includes(SELECT_ALL)) {\n      const updatedItems = items.map((item, index) => ({ ...item, selected: index == 0 ? true : !selectAll }));\n      onSeriesSelection({ newDataColumns: updatedItems });\n      setSelectAll(!selectAll);\n    }\n    // Else, if an ordinary item is selected/de-selected:\n    else {\n      const selectedItems = items.filter(item => value.includes(item.label));\n      const updatedItems = items.map(item => ({\n        ...item,\n        selected: selectedItems.some(selectedItem => selectedItem.label === item.label)\n      }));\n      onSeriesSelection({ newDataColumns: updatedItems });\n      setSelectAll(false);\n    }\n  };\n\n  const handleItemToggle = (item) => {\n    const updatedItems = items.map(existingItem =>\n      existingItem.label === item.label ? { ...existingItem, selected: !existingItem.selected } : existingItem\n    );\n    onSeriesSelection({ newDataColumns: updatedItems });\n  };\n\n  const renderedLabel = (selected) => {\n    const returnNumSeriesDisplayed = () => {\n      return `${selected.length}/${items.length} ${seriesLabel || \"\"} displayed`;\n    };\n\n    return (\n      <Stack direction=\"row\" alignItems=\"center\" spacing={0.5}>\n        <VisibilityIcon fontSize=\"1.5rem\" sx={{ color: theme.palette.text.secondary }} />\n        <Typography variant=\"caption\" color=\"text.secondary\">\n          {/* show # of series selected if multiSelect. show cur selected serie if singleSelect */}\n          {allowMultiple ? returnNumSeriesDisplayed() : selected}\n        </Typography>\n      </Stack>\n    );\n  };\n\n  return (\n    <Stack spacing={1} direction=\"row\" alignItems=\"center\">\n      <FormControl\n        sx={{\n          [theme.breakpoints.down('sm')]: { width: '100%' },\n          minWidth: '200px',\n          '& .MuiInputBase-root': { borderRadius: `${theme.shape.borderRadius}px` }\n        }}\n        size=\"small\"\n      >\n        <Select\n          labelId={`${selectorID}-label`}\n          id={selectorID}\n          multiple={allowMultiple}\n          value={items.filter(item => item.selected).map(item => item.label)}\n          onChange={handleChange}\n          MenuProps={MenuProps}\n          renderValue={(selected) => renderedLabel(selected)}\n          sx={{ fontSize: '0.75em' }}\n        >\n          {/* Display all available items, together with checkbox for each item to select from */}\n          {items.map((item) => (\n            <MenuItem\n              disabled={\n                // If there is only 1 selected item and this is the selected item\n                // Then, prevent user from de-select this item too\n                // To ensure at least there is 1 selected item at all times\n                (items.filter(item => item.selected).length === 1 && item.selected) ? true : false\n              }\n              key={item.label}\n              value={item.label}\n              sx={{\n                backgroundColor: 'unset !important',\n                \"&:hover\": {\n                  backgroundColor: 'inherit !important',\n                }\n              }}\n            >\n              { /* checkboxes for MultiSelect, radioButtons for singleSelect*/}\n              {allowMultiple ? <Checkbox\n                checked={item.selected}\n                onClick={() => handleItemToggle(item)}\n\n                sx={{ p: 0.25, transform: 'scale(0.8)' }} />\n                : <Radio\n                  checked={item.selected}\n                  onChange={() => handleChange(item)}\n\n                  sx={{ p: 0.25, transform: 'scale(0.8)' }} />\n              }\n              <Typography variant='caption'>{item.label}</Typography>\n            </MenuItem>\n          ))}\n\n          {/* Show the option to select all if multiSelect is true*/}\n          {allowMultiple ?\n            (\n              <MenuItem\n                key={SELECT_ALL}\n                value={SELECT_ALL}\n                sx={{\n                  borderTop: 'solid 0.5px', borderColor: theme.palette.text.secondary,\n                  position: 'sticky', bottom: 0, zIndex: 1, marginBottom: theme.spacing(-1),\n                  background: theme.palette.customAlternateBackground,\n                  \"&:hover\": {\n                    background: theme.palette.customAlternateBackground\n                  }\n                }}\n              >\n                <Stack direction='row' width='100%' alignItems='center' justifyContent='space-between'>\n                  <Typography fontWeight={500} variant='caption' sx={{ pl: 1 }}>{SELECT_ALL}</Typography>\n                  <Switch\n                    checked={selectAll}\n                    onClick={() => handleItemToggle(SELECT_ALL)}\n                    sx={{ transform: 'scale(0.8)' }}\n                  />\n                </Stack>\n              </MenuItem>\n            ) : null\n          }\n        </Select>\n      </FormControl>\n\n      {/* Display only selected items in the Grids, and only in landscape mode and if multiSelect is true*/}\n      {(displayChip && allowMultiple) && <Grid container spacing={1}\n        sx={{\n          [theme.breakpoints.down('sm')]: {\n            display: 'none'\n          },\n        }}\n      >\n        {items.filter(item => item.selected).map((item) => (\n          <Grid item key={item.label}>\n            <Chip\n              label={<Typography variant='caption'>{item.label}</Typography>}\n              size=\"small\"\n              {...(items.filter(item => item.selected).length !== 1 && { onDelete: () => handleItemToggle(item) })}\n            />\n          </Grid>\n        ))}\n      </Grid>}\n\n\n    </Stack>\n  );\n}\n","/* eslint-disable */\n\nexport const ChartControlType = {\n  CategoryFilter: { position: 'top', stackDirection: 'column' },\n  DateRangeFilter: { position: 'bottom', stackDirection: 'column-reverse' },\n  ChartRangeFilter: { position: 'bottom', stackDirection: 'column-reverse' },\n  NumberRangeFilter: { position: 'top', stackDirection: 'column' }\n}\n\n// Function to generate a random ID for the google chart container\nexport const generateRandomID = () => {\n  return Math.random().toString(36).substr(2, 9); // Generates a random string of length 9\n}\n\n// -------- Chart options --------\n\nconst hideAnnotations = {\n  stem: {\n    length: 0,\n  },\n  textStyle: {\n    opacity: 0,\n  },\n  boxStyle: null,\n};\n\nconst returnResponsiveFontSizeInPixels = ({ isPortrait, isSmaller }) => {\n  return (\n    isSmaller ? (isPortrait ? 6 : 8) : (isPortrait ? 8 : 10)\n  );\n}\n\nexport const returnGenericOptions = (props) => {\n  const { chartData, subchartIndex, isPortrait, theme } = props;\n\n  // Define some shared styling rules for the chart\n  const axisTitleTextStyle = {\n    italic: false,\n    bold: true,\n    color: theme.palette.chart.axisTitle,\n    fontSize: returnResponsiveFontSizeInPixels({ isPortrait })\n  };\n  const axisTextStyle = {\n    color: theme.palette.chart.axisText,\n    fontSize: returnResponsiveFontSizeInPixels({ isPortrait })\n  };\n\n  // ---- Formulate the options for this specific chart:\n  // 1. Populate first with subchart's options (if any)\n  let options = chartData.subcharts?.[subchartIndex].options\n    ? { ...chartData.subcharts[subchartIndex].options }\n    : {};\n\n  // 2. Append own chart's options and then populate with universal options for all charts\n  options = {\n    ...options,\n    ...chartData.options,\n    theme: 'material',\n    curveType: options.curveType || chartData.options?.curveType || 'function',\n    crosshair: { orientation: 'both', trigger: 'focus', opacity: 0.5 },\n    backgroundColor: { fill: chartData.options?.backgroundColor?.fill || 'transparent' },\n    chartArea: {\n      ...chartData.options?.chartArea,\n      width: isPortrait ? (chartData.options?.chartArea?.width?.portrait || '80%') : (chartData.options?.chartArea?.width?.landscape || '75%'),\n      height: isPortrait ? (chartData.options?.chartArea?.height?.portrait || '60%') : (chartData.options?.chartArea?.height?.landscape || '70%'),\n    },\n    width: isPortrait ? (chartData.options?.width?.portrait || '100%') : (chartData.options?.width?.landscape || '100%'),\n    // if there is a filter, we make space for the chartFilter from the chart's height.\n    // value is divided in 2 because the calculation is applied twice due to\n    // how react-google-charts nest components\n    height: chartData.height || '100%',\n    tooltip: {\n      isHtml: true,\n      showColorCode: false\n    },\n    legend: {\n      alignment: isPortrait ? 'center' : 'start',\n      position:\n        chartData.options?.legend?.position\n        ?? (isPortrait ? 'top' : 'right'),\n      scrollArrows: {\n        activeColor: theme.palette.chart.axisTitle,\n        inactiveColor: theme.palette.text.secondary,\n      },\n      pagingTextStyle: {\n        fontSize: 10,\n        color: theme.palette.chart.axisTitle,\n        bold: true,\n      }\n    }\n  };\n\n  // 3. Append to vAxis and hAxis properties\n  options.vAxis = {\n    ...options.vAxis,\n    format: options.vAxis?.format ?? 'decimal',\n    title: options.vAxis?.title ?? '',\n    viewWindow: {\n      min: options.vAxis?.viewWindow?.min ?? 0,\n      max: options.vAxis?.viewWindow?.max ?? null,\n      max: options.vAxis?.viewWindow?.max ?? null,\n    },\n  };\n  options.hAxis = {\n    ...options.hAxis,\n    title: options.hAxis?.title ?? '',\n  };\n  // 3.1. If in portrait mode, slant the text of the hAxis\n  if (isPortrait) {\n    options.hAxis = {\n      ...options.hAxis,\n      slantedText: true,\n      slantedTextAngle: 30,\n    };\n  }\n\n  // 4. Override with custom colors:\n  // 4.1. Color scheme of all the series of this chart\n  if (typeof options.colors === 'string' || !options.colors) options.colors = theme.palette.chart.optionsColors[options.colors || 'multiColor'];\n  // 4.2. Individual color of a single serie (if given)\n  if (options.series) {\n    Object.values(options.series).forEach((_serie) => {\n      const serie = _serie;\n      if (serie.color === 'default') {\n        serie.color = theme.palette.primary.main;\n      }\n    });\n  }\n  // 4.3. Color of the trendline\n  if (options.trendlines) {\n    options.trendlines.forEach((_item) => {\n      const item = _item;\n      item.color = theme.palette.primary.main;\n    });\n  }\n  // 4.4. Color axis of the Calendar chart\n  if (options.colorAxis) {\n    switch (options.colorAxis.colors) {\n      case 'matchingColor':\n        options.colorAxis.colors = [\n          theme.palette.chart.colorAxisFirstColor,\n          theme.palette.chart.optionsColors.multiColor[options.colorAxis.colorIndex],\n        ];\n        break;\n      case 'default':\n        options.colorAxis.colors = [\n          theme.palette.chart.colorAxisFirstColor,\n          theme.palette.NYUpurple,\n        ];\n        break\n      // If not any of the above, then the colorAxis should be from the chart (aqi/temperature/humidity...)\n      default:\n        try {\n          options.colorAxis = theme.palette.chart.colorAxes[options.colorAxis.colors]\n        } catch {\n          options.colorAxis = []\n        }\n        break;\n    }\n  }\n  // 4.5. Colors of other elements of the chart (typographies and gridlines)\n  options.vAxis = {\n    ...options.vAxis,\n    titleTextStyle: axisTitleTextStyle,\n    textStyle: axisTextStyle,\n    gridlines: {\n      ...options.vAxis?.gridlines,\n      color: options.vAxis?.gridlines?.color || theme.palette.chart.gridlines\n    },\n    minorGridlines: { count: 0 },\n  };\n  options.hAxis = {\n    ...options.hAxis,\n    titleTextStyle: axisTitleTextStyle,\n    textStyle: axisTextStyle,\n    gridlines: {\n      ...options.hAxis?.gridlines,\n      color: options.hAxis?.gridlines?.color || theme.palette.chart.gridlines\n    },\n    minorGridlines: {\n      ...options.hAxis?.minorGridlines,\n      color: options.hAxis?.gridlines?.color || theme.palette.chart.gridlines,\n    },\n  };\n  options.legend = {\n    ...options.legend,\n    textStyle: axisTextStyle,\n  };\n  options.annotations = {\n    ...options.annotations,\n    highContrast: true,\n    textStyle: {\n      color: theme.palette.primary.contrastText,\n      fontSize: returnResponsiveFontSizeInPixels({ isPortrait, isSmaller: true }),\n      opacity: 0.8\n    },\n    stem: {\n      ...options.annotations?.stem,\n      color: theme.palette.chart.axisTitle,\n      thickness: 2\n    },\n    boxStyle: {\n      rx: theme.shape.borderRadius, // rounded corners\n      ry: theme.shape.borderRadius,\n      fill: theme.palette.chart.annotationBoxFill,\n      fillOpacity: 0.5\n    },\n  };\n\n  return options;\n}\n\nexport const returnChartControlUI = (props) => {\n  const { chartControl, mainChartData, mainChartOptions, subchartIndex, theme, isPortrait } = props;\n  let chartControlUI = {\n    ...chartControl.options?.ui,\n    snapToData: true\n  };\n\n  // Assign the appropriate UI for chartControl based on controlType (if existed)\n  if (chartControl.controlType === 'ChartRangeFilter') {\n    chartControlUI = {\n      ...chartControlUI,\n      chartType: mainChartData.chartType,\n      chartView: {\n        columns:\n          mainChartData.columns\n          || (mainChartData.subcharts\n            && mainChartData.subcharts[subchartIndex].columns)\n          || null\n          || null,\n      },\n      chartOptions: {\n        ...mainChartOptions,\n        hAxis: {\n          ...mainChartOptions.hAxis,\n          textPosition: 'out',\n          textStyle: { color: theme.palette.chart.axisText, fontSize: returnResponsiveFontSizeInPixels({ isPortrait, isSmaller: true }) },\n          title: null\n        },\n        vAxis: {\n          ...mainChartOptions.vAxis,\n          title: null\n        },\n        annotations: hideAnnotations,\n        legend: null,\n      }\n    };\n  }\n  return chartControlUI;\n}\n\nexport const addTouchEventListenerForChartControl = ({ controlWrapper, chartID }) => {\n  const touchHandler = (event) => {\n    var touches = event.changedTouches,\n      first = touches[0],\n      type = '';\n\n    switch (event.type) {\n      case 'touchstart':\n        type = 'mousedown';\n        break;\n      case 'touchmove':\n        type = 'mousemove';\n        break;\n      case 'touchend':\n        type = 'mouseup';\n        break;\n      default:\n        return;\n    }\n\n    var simulatedEvent = new MouseEvent(type, {\n      bubbles: true,\n      cancelable: true,\n      view: window,\n      detail: 1,\n      screenX: first.screenX,\n      screenY: first.screenY,\n      clientX: first.clientX,\n      clientY: first.clientY,\n      button: 0, // left button\n      relatedTarget: null,\n    });\n\n    first.target.dispatchEvent(simulatedEvent);\n    event.preventDefault();\n  }\n\n  let isMounted = true; // Flag to track component's mount status\n  if (!controlWrapper) return;\n\n  const controlDOM = document.querySelector(`#control-${chartID}`);\n  if (!controlDOM) return;\n\n  ['touchstart', 'touchmove', 'touchend', 'touchcancel']\n    .forEach((touchEvent) => {\n      controlDOM.addEventListener(touchEvent, touchHandler, { capture: true });\n    });\n\n  return () => {\n    isMounted = false; // Component is unmounting\n\n    ['touchstart', 'touchmove', 'touchend', 'touchcancel'].forEach((touchEvent) => {\n      controlDOM.removeEventListener(touchEvent, touchHandler, { capture: true });\n    });\n  };\n}","import { Box } from '@mui/material/';\nimport { styled } from '@mui/material/styles';\n\nconst GoogleChartStyleWrapper = styled(Box, {\n  shouldForwardProp: (prop) => prop !== 'gradientBackgroundId' && prop !== 'isPortrait',\n})(({ theme, isPortrait, gradientBackgroundId }) => ({\n  // CSS for optional gradient background \n  '& svg>g:nth-of-type(2)>rect:first-of-type': {\n    fill: `url(#${gradientBackgroundId})`,\n    fillOpacity: 1,\n    filter: 'contrast(0.4) brightness(1.4)'\n  },\n\n  // CSS for HTML tooltip\n  '& .google-visualization-tooltip, .nivo-tooltip': {\n    width: 'unset !important',\n    maxWidth: '350px',\n    height: 'unset',\n    padding: '1em',\n    boxShadow: '0px 2px 2px 0px rgba(204, 204, 204, 0.6)',\n    mozBoxShadow: '0px 2px 2px 0px rgba(204, 204, 204, 0.6)',\n    webkitBoxShadow: '0px 2px 2px 0px rgba(204, 204, 204, 0.6)',\n    border: 'solid 1px',\n    borderColor: theme.palette.text.secondaryRGB,\n    fontSize: `${isPortrait ? 9 : 12}px`,\n    color: theme.palette.chart.tooltip.text,\n    background: theme.palette.chart.tooltip.background,\n    borderRadius: theme.shape.borderRadius,\n    '& ul': {\n      margin: '0 !important',\n      '& li': {\n        margin: '0 !important',\n        padding: '0 !important',\n        '& span': {\n          fontSize: `${isPortrait ? 9 : 12}px !important`,\n          color: `${theme.palette.chart.tooltip.text} !important`,\n        }\n      }\n    }\n  },\n\n  // -------- chartControl's additional stylings\n  '& .goog-menuitem-highlight, .goog-menuitem-hover': {\n    backgroundColor: `${theme.palette.primary} !important`\n  },\n\n  // CategoryFilter\n  '& .google-visualization-controls-categoryfilter': {\n    fontSize: '0.85rem',\n    marginTop: '0.75rem',\n    marginBottom: '-0.75rem',\n\n    '& .goog-inline-block > .goog-menu-button': {\n      marginTop: 0\n    },\n\n    '& .goog-menu-button-hover .goog-menu-button-outer-box, .goog-menu-button-hover .goog-menu-button-inner-box': {\n      borderColor: 'inherit !important'\n    },\n\n    '& .google-visualization-controls-label': {\n      color: theme.palette.text.secondary,\n      fontWeight: 500,\n      verticalAlign: 'middle',\n      marginBottom: '0.25rem'\n    },\n    '& .goog-menu-button-outer-box': {\n      backgroundColor: theme.palette.background.paper,\n      border: 'unset',\n\n      '& .goog-menu-button-inner-box': {\n        paddingTop: theme.spacing(0.5),\n        paddingBottom: theme.spacing(0.5),\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(2),\n        border: 'solid',\n        borderWidth: '0.5px',\n        borderRadius: theme.shape.borderRadius,\n        borderColor: theme.palette.text.secondary,\n\n        '& .goog-menu-button-caption': {\n          color: theme.palette.text.secondary\n        }\n      }\n    }\n  },\n\n  // DateRangeFilter\n  '& .google-visualization-controls-rangefilter': {\n    width: '100%',\n    fontSize: '0.75rem',\n    '& .goog-inline-block': {\n      width: '100%',\n    },\n    '& .google-visualization-controls-slider-horizontal': {\n      width: '90%',\n      margin: '0 5%',\n    },\n    '& .google-visualization-controls-rangefilter-thumblabel:nth-of-type(1)': {\n      position: 'absolute',\n      top: '1.5em',\n      left: '5%'\n    },\n    '& .google-visualization-controls-rangefilter-thumblabel:nth-of-type(2)': {\n      position: 'absolute',\n      top: '1.5em',\n      right: '5%'\n    },\n    '& .google-visualization-controls-slider-handle': {\n      background: theme.palette.primary.main\n    },\n    '& .google-visualization-controls-rangefilter-thumblabel': {\n      color: theme.palette.text.secondary,\n      padding: 0,\n      fontWeight: 500\n    },\n    '& .google-visualization-controls-slider-thumb': {\n      background: theme.palette.primary.main,\n      border: 'unset',\n      borderRadius: theme.shape.borderRadius\n    }\n  },\n\n  // These are the paths showing on top of the line chart\n  // and the stroke around the bar/column chart\n  // when the user hovers on the legend to make the serie stand out\n  // by Google Chart's default doesn't change color based on light/dark theme, but we modify here:\n  '& path[stroke-opacity=\"0.3\"], path[stroke-opacity=\"0.1\"], path[stroke-opacity=\"0.05\"], rect[stroke-opacity]': {\n    stroke: theme.palette.text.primary,\n    strokeWidth: 3\n  },\n\n  // Cursor of series in legends\n  '& [column-id]:not(:empty)': {\n    cursor: 'pointer',\n    ':hover': {\n      fontWeight: 600\n    }\n  }\n}));\n\nexport default GoogleChartStyleWrapper;\n","import { isValidArray } from \"../UtilFunctions\";\n\nconst normalizeColorStopOffsets = ({ offsets, minOffset, maxOffset }) => {\n  return offsets.map(offset => (offset - minOffset) / (maxOffset - minOffset));\n}\n\nconst normalizeColorStops = ({ colors, optionalMinValue, optionalMaxValue }) => {\n  if (!isValidArray(colors)) return [\n    { color: \"#fff\", offset: 0 },\n    { color: \"#fff\", offset: 1 }\n  ];\n\n  // No offsets provided, generate equally spaced offsets\n  if (typeof colors[0] === 'string') {\n    const totalColors = colors.length;\n    return colors.map((color, index) => ({\n      color: color,\n      offset: index / (totalColors - 1)\n    }));\n  }\n  // Offsets are provided, normalize them\n  else {\n    let clampedStops = colors;\n    if (optionalMinValue) {\n      clampedStops = colors.filter(colorStop => colorStop.offset >= optionalMinValue);\n    }\n    if (optionalMaxValue) {\n      clampedStops = colors.filter(colorStop => colorStop.offset <= optionalMaxValue);\n    }\n    const offsets = clampedStops.map(colorStop => colorStop.offset);\n\n    const minOffset = optionalMinValue || Math.min(...offsets);\n    const maxOffset = optionalMaxValue || Math.max(...offsets);\n\n    const normalizedOffsets = normalizeColorStopOffsets({ offsets, minOffset, maxOffset });\n\n    return clampedStops.map((colorStop, index) => ({\n      color: colorStop.color,\n      offset: normalizedOffsets[index]\n    }));\n  }\n}\n\n// Function to return an array of STEPS discrete colors in a gradient from an array of starting colors\n// Used for NivoCalendarChart\nexport const generateDiscreteColorGradientArray = ({ colors, numSteps = 100 }) => {\n  function hexToRgb(hex) {\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n    hex = hex.replace(shorthandRegex, function (m, r, g, b) {\n      return r + r + g + g + b + b;\n    });\n\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? [parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)]\n      : [null, null, null];\n  }\n\n  function rgbToHex(r, g, b) {\n    return \"#\" + [r, g, b].map(x => {\n      const hex = x.toString(16);\n      return hex.length === 1 ? '0' + hex : hex;\n    }).join('');\n  }\n\n  function interpolateColor(color1, color2, factor) {\n    // Return immediately if the 2 colors are the same\n    if (color1.every((element, index) => element === color2[index])) return color1;\n\n    // Else, calculate the middle of the 2 colors\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n      result[i] = Math.round(result[i] + factor * (color2[i] - color1[i]));\n    }\n    return result;\n  }\n\n  const normalizedColors = normalizeColorStops({ colors });\n  normalizedColors.forEach((colorStop) => {\n    colorStop.color = hexToRgb(colorStop.color)\n  });\n\n  let colorArray = [];\n  const stepPositions = Array.from({ length: numSteps }, (_, i) => i / (numSteps - 1));\n\n  for (let i = 0; i < stepPositions.length; i++) {\n    const pos = stepPositions[i];\n    let color1, color2, offset1, offset2;\n\n    for (let j = 0; j < normalizedColors.length - 1; j++) {\n      if (pos >= normalizedColors[j].offset && pos <= normalizedColors[j + 1].offset) {\n        color1 = normalizedColors[j].color;\n        color2 = normalizedColors[j + 1].color;\n        offset1 = normalizedColors[j].offset;\n        offset2 = normalizedColors[j + 1].offset;\n        break;\n      }\n    }\n\n    const localFactor = (pos - offset1) / (offset2 - offset1);\n    const interpolatedColor = interpolateColor(color1, color2, localFactor);\n    colorArray.push(rgbToHex(...interpolatedColor));\n  }\n\n  return colorArray;\n};\n\n// Function to return CSS background from an array of colors (with or without offsets)\nexport const generateCssBackgroundGradient = ({ gradientDirection, colors, optionalMinValue, optionalMaxValue }) => {\n  const normalizedColors = normalizeColorStops({ colors, optionalMinValue, optionalMaxValue });\n\n  return `linear-gradient(${gradientDirection}, ${normalizedColors.map(colorStop => `${colorStop.color} ${colorStop.offset * 100}%`).join(', ')})`;\n}\n\nexport const generateSvgFillGradient = ({ colors, optionalMinValue, optionalMaxValue }) => {\n  const normalizedColors = normalizeColorStops({ colors, optionalMinValue, optionalMaxValue });\n\n  return normalizedColors.map(colorStop => ({\n    color: colorStop.color,\n    offset: colorStop.offset * 100 + '%'\n  }));\n};\n\n// Gradient for background of the Google Charts\nexport const BackgroundGradient = ({ id, colors }) => (\n  <svg width={0} height={0} visibility=\"hidden\">\n    <defs>\n      <linearGradient id={id} x1=\"0\" y1=\"1\" x2=\"0\" y2=\"0\">\n        {colors.map((colorStop, index) => (\n          <stop key={index} offset={colorStop.offset} stopColor={colorStop.color} />\n        ))}\n      </linearGradient>\n    </defs>\n  </svg>\n);","import { useTheme } from '@mui/material/styles';\nimport { Box, Typography } from '@mui/material';\nimport { generateCssBackgroundGradient } from '../../../../Utils/Gradient/GradientUtils';\n\nconst ValueRangeBox = ({ title, valueRange, colorAxis, isPortrait }) => {\n  const theme = useTheme();\n\n  if (valueRange?.min === null || valueRange?.max === null) return null;\n\n  const { colors, minValue, maxValue } = colorAxis;\n  let rangeBoxMinValue = minValue, rangeBoxMaxValue = maxValue;\n\n  if (minValue === undefined) rangeBoxMinValue = valueRange.min;\n  if (maxValue === undefined) rangeBoxMaxValue = valueRange.max;\n\n  if (valueRange.min < rangeBoxMinValue) rangeBoxMinValue = valueRange.min;\n  if (valueRange.max > rangeBoxMaxValue) rangeBoxMaxValue = valueRange.max;\n\n  const calculateMarkerPositionOnRangeBox = (value) => {\n    const position = ((value - rangeBoxMinValue) / (rangeBoxMaxValue - rangeBoxMinValue)) * 100;\n    return `${position}%`;\n  };\n\n  const labelStyle = {\n    position: 'absolute',\n    fontSize: '0.75rem',\n    color: theme.palette.text.secondary,\n    lineHeight: 1,\n    textAlign: 'center',\n    transform: 'translateX(-50%)',\n    minWidth: '75px',\n    whiteSpace: 'nowrap',\n  };\n  const topLabelStyle = {\n    top: '-1.5rem',\n    transform: 'translateX(-50%)'\n  };\n  const bottomLabelStyle = {\n    bottom: '-1.25rem',\n    transform: isPortrait ? 'translateX(-100%)' : 'translateX(-50%)'\n  };\n\n  const triangleStyle = {\n    position: 'absolute',\n    width: 0,\n    height: 0,\n    borderLeft: '0.25rem solid transparent',\n    borderRight: '0.25rem solid transparent',\n    transform: 'translateX(-50%)',\n  };\n  const topTriangleStyle = {\n    top: '-0.5rem',\n    borderTop: `0.25rem solid ${theme.palette.text.secondary}`\n  };\n  const bottomTriangleStyle = {\n    bottom: '-0.5rem',\n    borderBottom: `0.25rem solid ${theme.palette.text.secondary}`\n  };\n\n  return (\n    <Box sx={{\n      position: 'sticky',\n      width: 'fit-content',\n      my: 4,\n      float: 'right',\n      right: (isPortrait ? '0' : '50px')\n    }}>\n      <Typography sx={{\n        display: 'inline',\n        position: 'absolute',\n        textAlign: 'right',\n        transform: 'translateX(calc(-100% - 0.5rem))',\n        fontSize: '0.75rem',\n        lineHeight: 1.25,\n        fontWeight: 500,\n        color: 'text.secondary'\n      }}>\n        {title}\n      </Typography>\n      <Box sx={{\n        background: generateCssBackgroundGradient({ gradientDirection: 'to right', colors: colors, optionalMaxValue: rangeBoxMaxValue }),\n        color: theme.palette.text.secondary,\n        border: `1px solid ${theme.palette.text.secondary}`,\n        width: isPortrait ? '250px' : '300px',\n        height: '1rem',\n        position: 'relative',\n        justifyContent: 'space-between',\n      }}>\n        <span style={{ ...labelStyle, ...topLabelStyle, left: calculateMarkerPositionOnRangeBox(valueRange.min) }}>min: {Math.round(valueRange.min)}</span>\n        <span style={{ ...labelStyle, ...bottomLabelStyle, left: calculateMarkerPositionOnRangeBox(valueRange.max) }}>max: {Math.round(valueRange.max)}</span>\n        <div style={{ ...triangleStyle, ...topTriangleStyle, left: calculateMarkerPositionOnRangeBox(valueRange.min) }}></div>\n        <div style={{ ...triangleStyle, ...bottomTriangleStyle, left: calculateMarkerPositionOnRangeBox(valueRange.max) }}></div>\n      </Box>\n    </Box>\n  );\n};\n\nexport default ValueRangeBox;","import { useEffect, useRef } from 'react';\nimport { Box, Chip } from '@mui/material';\n\nimport parse from 'html-react-parser';\nimport { replacePlainHTMLWithMuiComponents } from '../../../../Utils/UtilFunctions';\n\nconst TooltipCalendarChart = ({ day, color, tooltipText, dateRange, inFirstTwoRowsOfChart }) => {\n  const tooltipBoxRef = useRef(null);\n\n  // If the cell hovered over is in the first two rows of the chart,\n  // move the tooltip to the bottom of the chart\n  // Read subsequent comments to understand why we need to do this\n  useEffect(() => {\n    if (tooltipBoxRef.current && inFirstTwoRowsOfChart(day, dateRange)) {\n      const parentDiv = tooltipBoxRef.current.parentElement;\n      if (parentDiv) {\n        parentDiv.style.top = '11vh';\n      }\n    }\n  }, [tooltipBoxRef, inFirstTwoRowsOfChart]);\n\n\n  // Note that our Box is just a container 'inside' the tooltip\n  // The tooltip itself is actually the Box's parent div\n  return (\n    <Box ref={tooltipBoxRef} className='nivo-tooltip'>\n      <Chip sx={{ backgroundColor: color, mr: 0.5, height: '10px', width: '10px', borderRadius: '50%' }} />\n      {parse(tooltipText, { replace: replacePlainHTMLWithMuiComponents })}\n    </Box>\n  );\n};\n\nexport default TooltipCalendarChart;","\nexport const getDateRangeForCalendarChart = (dateStrings) => {\n  return {\n    min: dateStrings.reduce((min, current) => (current < min ? current : min)),\n    max: dateStrings.reduce((max, current) => (current > max ? current : max))\n  }\n};\n\nexport const getValueRangeForCalendarChart = (values) => {\n  return { min: Math.min(...values), max: Math.max(...values) };\n};\n\nexport const getCalendarChartMargin = (isPortrait) => {\n  return isPortrait\n    ? { top: 30, right: 0, bottom: 20, left: 20 }\n    : { top: 30, right: 40, bottom: 20, left: 40 };\n};\n\nexport const calculateValueRange = (data) => {\n  const values = data.map((item) => item.value);\n  return { min: Math.min(...values), max: Math.max(...values) };\n};\n\n","/* eslint-disable */\nimport { ResponsiveCalendar } from '@nivo/calendar';\nimport { useTheme } from '@mui/material/styles';\nimport { generateDiscreteColorGradientArray } from '../../../../Utils/Gradient/GradientUtils';\n\nimport ValueRangeBox from './ValueRangeBox';\nimport TooltipCalendarChart from './TooltipCalendarChart';\nimport { getCalendarChartMargin, getDateRangeForCalendarChart, getValueRangeForCalendarChart } from '../NivoChartHelper';\nimport { useEffect, useState } from 'react';\nimport { isValidArray } from '../../../../Utils/UtilFunctions';\nimport GoogleChartStyleWrapper from '../../SubchartUtils/GoogleChartStyleWrapper';\nimport { Box } from '@mui/material';\n\nconst YEAR_SPACING = 40;\n\nconst NivoCalendarChart = (props) => {\n    const { dataArray, valueRangeBoxTitle, isPortrait, options, windowSize } = props;\n\n    const [dateRange, setDateRange] = useState({ min: null, max: null });\n    const [valueRange, setValueRange] = useState({ min: null, max: null });\n    const [calendarHeight, setCalendarHeight] = useState(400);\n\n    useEffect(() => {\n        if (!isValidArray(dataArray)) return;\n\n        const dateStrings = dataArray.map(item => item.day);\n        const thisDateRange = getDateRangeForCalendarChart(dateStrings)\n        setDateRange(thisDateRange);\n\n        const values = dataArray.map(item => item.value);\n        setValueRange(getValueRangeForCalendarChart(values));\n\n        // Get the number of years we have data for and the number of years to display\n        const lastYear = new Date(thisDateRange.max).getFullYear();\n        const firstYear = new Date(thisDateRange.min).getFullYear();\n        const numberOfYears = lastYear - firstYear + 1;\n        const calendarChartMargin = getCalendarChartMargin(isPortrait);\n\n        const cellSize = Math.min(windowSize[0] / 60, 20); // windowSize[0]: innerWidth\n        // max cell size of 20\n        const yearHeight = cellSize * 7; // Height for one year\n        const totalHeight = numberOfYears * (yearHeight + YEAR_SPACING) + calendarChartMargin.top + calendarChartMargin.bottom;\n        setCalendarHeight(totalHeight);\n    }, [dataArray, windowSize]);\n\n    const displayLegend = options?.legend?.position && options.legend.position !== \"none\";\n\n    const calendarChartMargin = getCalendarChartMargin(isPortrait, displayLegend);\n\n    const theme = useTheme();\n\n    // Function to extract tooltip text from HTML tooltip\n    const extractTooltipText = (tooltip) => {\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(tooltip, 'text/html');\n        return doc.body.innerHTML;\n    };\n\n    // Function to check if a date is in the first two rows of the chart\n    // Used to anchor the tooltip to the bottom while hovering over\n    // the first two rows of the chart\n    const inFirstTwoRowsOfChart = (dateStr, dateRange) => {\n        const date = new Date(dateStr);\n        const dayOfWeek = date.getDay();\n\n        // Check if the date is Sunday (0) or Monday (1)\n        const isFirstTwoDaysOfWeek = dayOfWeek === 0 || dayOfWeek === 1;\n\n        // Extract the first year from the date range once\n        const firstYear = new Date(dateRange.min).getFullYear();\n\n        // Check if the date is in the first year of the date range\n        const isInFirstYear = date.getFullYear() === firstYear;\n\n        return isFirstTwoDaysOfWeek && isInFirstYear;\n    };\n\n    const calendarCellColors = generateDiscreteColorGradientArray({\n        colors: options?.colorAxis?.colors,\n        numSteps: options?.colorAxis?.gradientSteps\n    });\n\n    return (\n        <GoogleChartStyleWrapper\n            isPortrait={isPortrait}\n            className=\"Calendar\"\n            position=\"relative\"\n            minWidth=\"550px\"\n            height=\"100%\"\n        >\n            {displayLegend ? (\n                <ValueRangeBox\n                    title={valueRangeBoxTitle}\n                    valueRange={valueRange}\n                    colorAxis={options?.colorAxis}\n                    isPortrait={isPortrait}\n                />\n            ) : null}\n\n\n            <Box sx={{\n                height: `${calendarHeight}px`,\n                maxHeight: \"450px\",\n                overflowY: 'auto',\n                width: '100%',\n                position: 'relative'\n            }}>\n                <Box sx={{\n                    height: `${calendarHeight}px`,\n                    position: 'absolute',\n                    width: '100%'\n                }}>\n                    <ResponsiveCalendar\n                        data={dataArray}\n                        from={dateRange.min}\n                        to={dateRange.max}\n                        emptyColor=\"transparent\"\n                        align=\"top\"\n                        theme={{\n                            text: {\n                                fill: theme.palette.text.secondary,\n                            },\n                            fontSize: '0.75rem'\n                        }}\n                        colors={calendarCellColors}\n                        minValue={options?.colorAxis?.minValue}\n                        maxValue={options?.colorAxis?.maxValue}\n                        margin={calendarChartMargin}\n                        yearSpacing={YEAR_SPACING}\n                        monthBorderColor={theme.palette.text.primary}\n                        monthBorderWidth={1}\n                        daySpacing={0.25}\n                        dayBorderWidth={0}\n                        tooltip={({ day, value, color }) => {\n                            const tooltipData = dataArray.find(item => item.day === day);\n                            const tooltipText = tooltipData ? extractTooltipText(tooltipData.tooltip) : '';\n\n                            return (\n                                <TooltipCalendarChart\n                                    day={day}\n                                    color={color}\n                                    tooltipText={tooltipText}\n                                    dateRange={dateRange}\n                                    inFirstTwoRowsOfChart={inFirstTwoRowsOfChart}\n                                />\n                            );\n                        }}\n                    />\n                </Box>\n            </Box>\n\n        </GoogleChartStyleWrapper>\n    );\n};\n\nexport default NivoCalendarChart;\n\n","/* eslint-disable */\n\nimport { styled } from '@mui/material/styles';\nimport { Paper } from '@mui/material';\n\nimport { addDays, endOfDay, startOfDay, format } from \"date-fns\";\nimport AggregationType from './AggregationType';\n\nexport const returnCustomStaticRanges = ({ today, minDateOfDataset, aggregationType }) => {\n  const hourlyReturn = [\n    {\n      label: \"Last 14d\",\n      range: () => ({\n        startDate: startOfDay(addDays(today, -14)),\n        endDate: endOfDay(today)\n      })\n    },\n    {\n      label: \"Last 30d\",\n      range: () => ({\n        startDate: startOfDay(addDays(today, -30)),\n        endDate: endOfDay(today)\n      })\n    }\n  ];\n\n  const dailyReturn = [{\n    label: \"Last 90d\",\n    range: () => ({\n      startDate: startOfDay(addDays(today, -90)),\n      endDate: endOfDay(today)\n    })\n  },\n  {\n    label: \"Last 365d\",\n    range: () => ({\n      startDate: startOfDay(addDays(today, -365)),\n      endDate: endOfDay(today)\n    })\n  },\n  {\n    label: \"All Time\",\n    range: () => ({\n      startDate: minDateOfDataset,\n      endDate: endOfDay(today)\n    })\n  }\n  ];\n\n  return (aggregationType === AggregationType.hourly) ? hourlyReturn : [...hourlyReturn, ...dailyReturn];\n};\n\nexport const StyledDateRangePicker = styled(Paper, {\n  shouldForwardProp: (prop) => prop !== 'showPickerPanel' && prop !== 'smallScreen',\n})(({ theme, showPickerPanel, smallScreen }) => ({\n  zIndex: showPickerPanel === true && 1,\n  position: \"relative\",\n  padding: showPickerPanel ? theme.spacing(1) : 0,\n  margin: (showPickerPanel && !smallScreen) ? theme.spacing(-1) : 0,\n  maxWidth: '100%',\n  background: showPickerPanel ? theme.palette.customAlternateBackground : 'transparent',\n  boxShadow: showPickerPanel === false && 'none',\n  '& .rdrDayToday .rdrDayNumber span:after': {\n    background: theme.palette.secondary\n  },\n  '& .rdrDateDisplayWrapper, .rdrCalendarWrapper, .rdrDefinedRangesWrapper, .rdrStaticRange, .rdrDateDisplayItem': {\n    background: 'transparent'\n  },\n  '& .rdrDateInput': {\n    borderRadius: theme.shape.borderRadius,\n    boxShadow: 'none'\n  },\n  '& .rdrDateDisplayItemActive': {\n    border: showPickerPanel === false && 'none'\n  },\n  '& .rdrDateDisplay': {\n    margin: 0,\n    minWidth: \"20rem\"\n  },\n  '& .rdrDateDisplayItem': {\n    margin: 0,\n    borderRadius: showPickerPanel ? theme.shape.borderRadius : 0,\n    \"&:hover:not(.rdrDateDisplayItemActive)\": {\n      border: showPickerPanel ? `1px solid ${theme.palette.action.disabled}` : \"none\"\n    }\n  },\n  '& .rdrDateDisplayItem:hover:not(.rdrDateDisplayItemActive)': {\n    border: showPickerPanel === false && '1px solid transparent'\n  },\n  '& .rdrDateDisplayItem + .rdrDateDisplayItem': {\n    margin: 0\n  },\n  '& .rdrDateDisplayItem:first-of-type': {\n    borderRight: showPickerPanel === false && `1px solid ${theme.palette.action.disabled} !important`\n  },\n  '& .rdrMonthAndYearWrapper, .rdrInputRanges': {\n    display: showPickerPanel === false && 'none !important',\n    padding: 0\n  },\n  '& .rdrMonthName': {\n    display: 'none',\n  },\n  '& .rdrDefinedRangesWrapper, .rdrMonths': {\n    display: showPickerPanel === false && 'none'\n  },\n  '&  .rdrInfiniteMonths': {\n    visibility: showPickerPanel === false && 'hidden',\n    width: \"100% !important\",\n    maxWidth: \"675px\",\n    margin: \"auto\"\n  },\n  '& .rdrDateDisplayWrapper': {\n    minWidth: '18rem',\n    borderRadius: theme.shape.borderRadius,\n    border: showPickerPanel ? \"none\" : `1px solid ${theme.palette.action.disabled}`,\n    \"&:hover\": {\n      border: showPickerPanel ? \"none\" : `1px solid ${theme.palette.text.primary}`,\n    }\n  },\n  '& .rdrDateRangePickerWrapper': {\n    width: '100%',\n    flexDirection: 'column-reverse'\n  },\n  '& .rdrStaticRanges': {\n    flexDirection: 'row',\n    minWidth: '21rem'\n  },\n  '& .rdrStaticRangeLabel': {\n    color: theme.palette.text.secondary,\n    borderRadius: theme.shape.borderRadius,\n    padding: `${theme.spacing(0.5)} ${theme.spacing(1)}`\n  },\n  '& .rdrDefinedRangesWrapper': {\n    border: 'none',\n    width: '100%'\n  },\n  '& .rdrNextPrevButton': {\n    background: theme.palette.primary.main,\n    borderRadius: theme.shape.borderRadius,\n    opacity: 1,\n    '&:hover': {\n      opacity: 0.5,\n      background: theme.palette.primary.main\n    }\n  },\n  '& .rdrNextPrevButton > i': {\n    color: \"white\"\n  },\n  '& .rdrNextButton > i': {\n    borderColor: `transparent transparent transparent white`\n  },\n  '& .rdrPprevButton > i': {\n    borderColor: `transparent white transparent transparent`\n  },\n  '& .rdrStaticRange': {\n    border: 'none'\n  },\n  '& .rdrStaticRangeSelected > .rdrStaticRangeLabel, .rdrMonthAndYearPickers': {\n    color: theme.palette.primary.main\n  },\n  '& .rdrMonthAndYearPickers': {\n    fontSize: '1rem'\n  },\n  '& .rdrStaticRange:hover .rdrStaticRangeLabel, .rdrStaticRange:focus .rdrStaticRangeLabel': {\n    background: theme.palette.customBackground.toString()\n  },\n  '& .rdrDayNumber span': {\n    color: theme.palette.text.primary.toString()\n  },\n  '& .rdrDayPassive .rdrDayNumber span': {\n    opacity: 0.5\n  },\n  '& .rdrMonthAndYearWrapper select': {\n    color: theme.palette.text.secondary.toString(),\n    background: 'none',\n    padding: `${theme.spacing(1)} ${theme.spacing(2)}`,\n    '&:hover': {\n      border: `1px solid ${theme.palette.text.secondary}`\n    }\n  },\n  '& .rdrDateDisplayItem input': {\n    color: theme.palette.text.secondary\n  },\n  '& .rdrDayDisabled': {\n    backgroundColor: theme.palette.customBackground\n  },\n  '& .rdrDayEndOfMonth .rdrInRange, .rdrDayEndOfMonth .rdrStartEdge, .rdrDayEndOfWeek .rdrInRange, .rdrDayEndOfWeek .rdrStartEdge, .rdrEndEdge, .rdrDayEndOfMonth .rdrDayInPreview, .rdrDayEndOfMonth .rdrDayStartPreview, .rdrDayEndOfWeek .rdrDayInPreview, .rdrDayEndOfWeek .rdrDayStartPreview, .rdrDayEndPreview': {\n    borderTopRightRadius: '2rem',\n    borderBottomRightRadius: '2rem'\n  },\n  '& .rdrStartEdge, .rdrDayStartOfMonth .rdrInRange, .rdrDayStartOfMonth .rdrEndEdge, .rdrDayStartOfWeek .rdrInRange, .rdrDayStartOfWeek .rdrEndEdge, .rdrDayStartOfMonth .rdrDayInPreview, .rdrDayStartOfMonth .rdrDayEndPreview, .rdrDayStartOfWeek .rdrDayInPreview, .rdrDayStartOfWeek .rdrDayEndPreview, .rdrDayStartPreview': {\n    borderTopLeftRadius: '2rem',\n    borderBottomLeftRadius: '2rem'\n  },\n  '& .rdrStartEdge, .rdrDayStartOfWeek .rdrInRange, .rdrDayStartOfMonth .rdrInRange, .rdrDayStartOfMonth .rdrEndEdge, .rdrDayStartOfWeek .rdrEndEdge': {\n    left: 0\n  },\n  '& .rdrEndEdge, .rdrDayEndOfWeek .rdrInRange, .rdrDayEndOfMonth .rdrInRange, .rdrDayEndOfWeek .rdrStartEdge': {\n    right: 0\n  },\n  '& .rdrSelected, .rdrInRange, .rdrStartEdge, .rdrEndEdge': {\n    top: '0px',\n    bottom: '0px',\n  },\n  '& .rdrMonths': {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  '& .rdrDay': {\n    marginBottom: \"1px\",\n    '& span': {\n      top: '0px',\n      bottom: '0px'\n    }\n  },\n  '& .rdrMonthsHorizontal': {\n    overflowY: 'hidden'\n  },\n  '& .rdrDateInput:first-of-type:before': {\n    content: '\"\"',\n    backgroundImage: `url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' class='MuiSvgIcon-root' focusable='false' aria-hidden='true' viewBox='0 0 24 24' data-testid='DateRangeIcon'%3E%3Cpath d='M9 11H7v2h2zm4 0h-2v2h2zm4 0h-2v2h2zm2-7h-1V2h-2v2H8V2H6v2H5c-1.11 0-1.99.9-1.99 2L3 20c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2m0 16H5V9h14z' fill='${theme.palette.text.secondary}'/%3E%3C/svg%3E\")`,\n    width: \"0.75rem\",\n    height: \"0.75rem\",\n    display: \"block\",\n    position: \"absolute\",\n    top: \"50%\",\n    transform: \"translateY(-50%)\",\n    left: \"0.75rem\"\n  },\n  '& .rdrStaticRangeSelected span': {\n    color: theme.palette.primary.main\n  },\n  '& .rdrDayToday .rdrDayNumber span:after': {\n    background: theme.palette.secondary.main,\n    width: \"0.25rem\",\n    height: \"0.25rem\",\n    borderRadius: \"50%\"\n  }\n}));\n\nexport const returnFormattedDates = ({ startDateObject, endDateObject }) => {\n  return {\n    startDate: format(startDateObject, 'yyyy-MM-dd'),\n    endDate: format(endDateObject, 'yyyy-MM-dd')\n  }\n}","import { ToggleButton, ToggleButtonGroup, Typography, Stack } from '@mui/material';\n\nimport AggregationType from './AggregationType';\n\nexport default function AggregationTypeToggle({ aggregationType, setAggregationType }) {\n  const handleChange = (event, newType) => {\n    if (newType !== null) {\n      setAggregationType(newType);\n    }\n  };\n\n  return (\n    <Stack\n      direction=\"row\"\n      alignItems=\"center\"\n      spacing={1}\n    >\n      <Typography variant=\"caption\" display=\"block\" color=\"text.secondary\">\n        DATA AVERAGE\n      </Typography>\n\n      <ToggleButtonGroup\n        color=\"primary\"\n        value={aggregationType}\n        exclusive\n        onChange={handleChange}\n        aria-label=\"aggregation type toggle for graph average\"\n        size=\"small\"\n      >\n        <ToggleButton\n          size=\"small\"\n          sx={{ textTransform: \"capitalize !important\", px: 1.25, py: 0.5 }}\n          value={AggregationType.hourly}\n          aria-label={AggregationType.hourly}\n        >\n          {AggregationType.hourly}\n        </ToggleButton>\n        <ToggleButton\n          size=\"small\"\n          sx={{ textTransform: \"capitalize !important\", px: 1.25, py: 0.5 }}\n          value={AggregationType.daily}\n          aria-label={AggregationType.daily}\n        >\n          {AggregationType.daily}\n        </ToggleButton>\n      </ToggleButtonGroup>\n    </Stack >\n  );\n}","import { createContext, useMemo, useState, useContext } from 'react';\nimport AggregationType from '../Components/DateRangePicker/AggregationType';\n\nconst DateRangePickerContext = createContext();\n\nconst initDateRange = { startDate: null, endDate: null, key: 'selection' };\n\nexport function DateRangePickerProvider({ children }) {\n    const [dateRange, setDateRange] = useState(initDateRange);\n    const [aggregationType, setAggregationType] = useState(AggregationType.hourly);\n\n    const contextValue = useMemo(() => ({\n        dateRange, setDateRange,\n        aggregationType, setAggregationType\n    }), [dateRange, aggregationType]);\n\n    return (\n        <DateRangePickerContext.Provider value={contextValue}>\n            {children}\n        </DateRangePickerContext.Provider>\n    );\n}\n\n// Custom hook \nexport const useDateRangePicker = () => useContext(DateRangePickerContext);","/* eslint-disable */\n\nimport { useState, useRef, useEffect, useContext } from 'react';\n\nimport { DateRangePicker, createStaticRanges } from 'react-date-range';\nimport 'react-date-range/dist/styles.css'; // main style file\nimport 'react-date-range/dist/theme/default.css'; // theme css file\n\nimport { CircularProgress, useMediaQuery, useTheme } from '@mui/material';\nimport { Alert, Button, Stack } from '@mui/material';\n\nimport { StyledDateRangePicker, returnCustomStaticRanges, returnFormattedDates } from './DateRangePickerUtils';\nimport { getHistoricalChartApiUrl } from '../../API/ApiUrls';\nimport { ChartAPIendpoints, ChartAPIendpointsOrder } from \"../../API/Utils\";\nimport AggregationTypeToggle from './AggregationTypeToggle';\nimport AggregationType from './AggregationType';\nimport { DashboardContext } from '../../ContextProviders/DashboardContext';\n\nimport { differenceInDays, isSameDay } from 'date-fns';\nimport { fetchDataFromURL } from '../../API/ApiFetch';\nimport { useDateRangePicker } from '../../ContextProviders/DateRangePickerContext';\n\nconst InvalidRangeMessages = {\n  tooLong: \"HOURLY data is limited to max 30d\",\n  sameDay: \"Start and end dates must be different\"\n}\n\nconst historicalChartIndex = ChartAPIendpointsOrder.findIndex(endpoint => endpoint === ChartAPIendpoints.historical);\n\nconst CustomDateRangePicker = (props) => {\n  const { minDateOfDataset, dataType } = props;\n  const { currentSchoolID, setIndividualChartData } = useContext(DashboardContext);\n  const [invalidRangeMessage, setInvalidRangeMessage] = useState();\n  const [shouldDisableApplyButton, setShouldDisableApplyButton] = useState(true);\n\n  const today = new Date();\n  const theme = useTheme();\n  const smallScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  // Keep track of the date range and aggregationType  selected by the user\n  const { dateRange, setDateRange, aggregationType, setAggregationType } = useDateRangePicker();\n  useEffect(() => {\n    // Initialize with the range of the first static range\n    setDateRange({\n      ...returnCustomStaticRanges({ today, minDateOfDataset })[0].range(), key: 'selection'\n    });\n    setAggregationType(AggregationType.hourly);\n  }, []);\n\n  const [chartUrl, setChartUrl] = useState();\n\n  // Control displaying / hiding of the date range picker\n  const [showPickerPanel, setShowPickerPanel] = useState(false);\n  const paperRef = useRef(null);\n\n  const [isFetchingData, setIsFetchingData] = useState(false);\n\n  // Hide or show the date-range-picker panel\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (paperRef.current && !paperRef.current.contains(event.target)) {\n        setShowPickerPanel(false);\n      }\n    };\n    document.addEventListener(\"mousedown\", handleClickOutside);\n\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [paperRef]);\n\n  const checkValidRange = (selectedRange) => {\n    const { startDate, endDate } = selectedRange || {};\n    if (!startDate || !endDate) return;\n\n    // Start date and end date can't be the same date\n    if (isSameDay(startDate, endDate)) {\n      setInvalidRangeMessage(InvalidRangeMessages.sameDay);\n      setShouldDisableApplyButton(true);\n      return;\n    }\n    else {\n      setInvalidRangeMessage(null);\n      setShouldDisableApplyButton(false);\n    }\n\n    // Restrict the selection to only 30 days if aggregationType is hourly\n    if (aggregationType === AggregationType.hourly) {\n      const diff = differenceInDays(endDate, startDate);\n      const invalidRange = diff > 30;\n\n      setInvalidRangeMessage(invalidRange ? InvalidRangeMessages.tooLong : null);\n      setShouldDisableApplyButton(invalidRange);\n    }\n    // No restriction for daily aggregationType\n    else {\n      if (invalidRangeMessage !== null) {\n        setInvalidRangeMessage(null);\n      }\n\n      if (shouldDisableApplyButton === true) {\n        setShouldDisableApplyButton(false);\n      }\n    }\n  }\n\n  // Method to handle date range selection changes\n  const handleSelect = (ranges) => {\n    if (!ranges) return;\n\n    checkValidRange(ranges.selection);\n    setDateRange(ranges.selection);\n  };\n\n  useEffect(() => {\n    checkValidRange(dateRange);\n  }, [aggregationType]);\n\n  // Send query request to backend when APPLY button is clicked\n  // Check if a new date range is selected as well\n  const handleApplyButtonClick = (event) => {\n    if (invalidRangeMessage !== null) return;\n\n    event.stopPropagation(); // Prevents Paper onClick from firing\n\n    const formattedDates = returnFormattedDates({\n      startDateObject: dateRange.startDate,\n      endDateObject: dateRange.endDate\n    });\n    const newUrl = getHistoricalChartApiUrl({\n      endpoint: ChartAPIendpoints.historical,\n      school_id: currentSchoolID,\n      aggregationType: aggregationType,\n      dataType: dataType,\n      startDate: formattedDates.startDate,\n      endDate: formattedDates.endDate\n    });\n\n    if (newUrl !== chartUrl) {\n      setIsFetchingData(true);\n\n      fetchDataFromURL({\n        url: newUrl\n      })\n        .then((data) => {\n          setIndividualChartData(historicalChartIndex, data);\n          setChartUrl(newUrl);\n          setIsFetchingData(false);\n          setShowPickerPanel(false);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n  };\n\n  const renderApplyButtonLabel = () => {\n    return (\n      isFetchingData ? <CircularProgress disableShrink size=\"1.4375rem\" color=\"inherit\" /> : \"APPLY\"\n    )\n  };\n\n  return (\n    <StyledDateRangePicker\n      showPickerPanel={showPickerPanel}\n      smallScreen={smallScreen}\n      ref={paperRef}\n      elevation={8}\n      onClick={() => setShowPickerPanel(true)}\n    >\n      <Stack direction={\"column\"} spacing={1}>\n        <DateRangePicker\n          ranges={[dateRange]}\n          onChange={handleSelect}\n          staticRanges={\n            createStaticRanges(\n              returnCustomStaticRanges({\n                today, minDateOfDataset, aggregationType\n              })\n            )\n          }\n          inputRanges={[]}\n          rangeColors={[theme.palette.primary.main, theme.palette.secondary.main, theme.palette.text.secondary]}\n          minDate={minDateOfDataset}\n          maxDate={today}\n          months={1}\n          showMonthAndYearPickers={false}\n          direction={\"horizontal\"}\n          fixedHeight={true}\n          preventSnapRefocus={true}\n          calendarFocus=\"backwards\"\n          startDatePlaceholder=\"Start Date\"\n          endDatePlaceholder=\"End Date\"\n          editableDateInputs={true}\n          showMonthArrow={true}\n        />\n\n        {showPickerPanel && (\n          <Stack\n            direction=\"column\"\n            alignItems=\"end\"\n            width=\"100%\"\n            spacing={1}\n          >\n            <AggregationTypeToggle\n              aggregationType={aggregationType}\n              setAggregationType={setAggregationType}\n              smallScreen={smallScreen}\n            />\n            <Stack direction=\"row\" spacing={1}>\n              {\n                invalidRangeMessage && displayErrorMessage(invalidRangeMessage)\n              }\n              <Button\n                variant=\"contained\"\n                size=\"small\"\n                disabled={shouldDisableApplyButton}\n                onClick={handleApplyButtonClick}\n                sx={{\n                  transform: \"translateY(-1px)\"\n                }}\n              >\n                {renderApplyButtonLabel()}\n              </Button>\n            </Stack>\n\n          </Stack>\n\n        )}\n      </Stack>\n    </StyledDateRangePicker>\n  );\n};\n\nconst displayErrorMessage = (invalidRangeMessage) => {\n  return (\n    <Alert\n      severity=\"error\"\n      sx={{\n        py: 0.5,\n        px: 1,\n        display: \"flex\",\n        alignItems: \"center\",\n        \"& div\": {\n          fontSize: \"0.75rem\",\n          p: 0\n        },\n        \"& .MuiAlert-icon\": {\n          fontSize: \"1rem\",\n          mr: 0.5\n        }\n      }}\n    >\n      {invalidRangeMessage}\n    </Alert>\n  )\n}\n\nexport default CustomDateRangePicker;\n","import { createContext, useMemo, useState, useContext } from 'react';\n\nconst AxesPickerContext = createContext();\n\nexport function AxesPickerProvider({ children }) {\n    const [hAxis, setHAxis] = useState();\n    const [vAxis, setVAxis] = useState();\n\n    const contextValue = useMemo(() => ({\n        hAxis, setHAxis,\n        vAxis, setVAxis\n    }), [hAxis, vAxis]);\n\n    return (\n        <AxesPickerContext.Provider value={contextValue}>\n            {children}\n        </AxesPickerContext.Provider>\n    );\n}\n\n// Custom hook \nexport const useAxesPicker = () => useContext(AxesPickerContext);","import React, { useContext, useEffect, useState } from 'react';\nimport { Select, MenuItem, FormControl, InputLabel, Button, Stack, Grid, CircularProgress } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { useAxesPicker } from '../../ContextProviders/AxesPickerContext';\nimport { getCorrelationChartApiUrl } from '../../API/ApiUrls';\nimport { ChartAPIendpoints, ChartAPIendpointsOrder } from \"../../API/Utils\";\nimport { DashboardContext } from '../../ContextProviders/DashboardContext';\nimport { fetchDataFromURL } from '../../API/ApiFetch';\n\nconst correlationChartIndex = ChartAPIendpointsOrder.findIndex(endpoint => endpoint === ChartAPIendpoints.correlationDailyAverage);\n\n// Define custom styled components for shared border radius\nconst LeftSelect = styled(FormControl)(({ theme }) => ({\n  borderTopRightRadius: 0,\n  borderBottomRightRadius: 0,\n  textTransform: 'capitalize',\n  minWidth: '150px',\n  maxWidth: '250px',\n  '& .MuiOutlinedInput-root': {\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0,\n  },\n  '& .MuiOutlinedInput-notchedOutline': {\n    borderRight: 'none'\n  },\n  '& .Mui-focused .MuiOutlinedInput-notchedOutline': {\n    borderRight: `2px solid ${theme.palette.primary.main}`\n  }\n}));\n\nconst RightSelect = styled(FormControl)(({ theme }) => ({\n  borderTopLeftRadius: 0,\n  borderBottomLeftRadius: 0,\n  textTransform: 'capitalize',\n  minWidth: '150px',\n  maxWidth: '250px',\n  '& .MuiOutlinedInput-root': {\n    borderTopLeftRadius: 0,\n    borderBottomLeftRadius: 0,\n  },\n}));\n\n\nconst AxesPicker = (props) => {\n  const { currentSchoolID, setIndividualChartData } = useContext(DashboardContext);\n  const { allowedAxes, selectedAxes, dataType } = props;\n  const { hAxis, vAxis, setHAxis, setVAxis } = useAxesPicker();\n  const [chartUrl, setChartUrl] = useState();\n  const [isFetchingData, setIsFetchingData] = useState(false);\n  const [shouldDisableApplyButton, setShouldDisableApplyButton] = useState(true);\n\n  useEffect(() => {\n    const { hAxis: receivedHAxis, vAxis: receivedVAxis } = selectedAxes;\n    if (!(receivedHAxis && receivedVAxis)) {\n      setShouldDisableApplyButton(true);\n      return;\n    };\n\n    if (!(hAxis === receivedHAxis && vAxis === receivedVAxis)) {\n      setVAxis(receivedVAxis);\n      setHAxis(receivedHAxis);\n    }\n  }, [selectedAxes]);\n\n  const handleHAxisChange = (event) => {\n    const newHAxis = event.target.value;\n    setHAxis(newHAxis);\n    if (newHAxis === vAxis) {\n      setVAxis('');\n    }\n  };\n\n  const handleVAxisChange = (event) => {\n    setVAxis(event.target.value);\n    if (event.target.value === hAxis) {\n      setHAxis('');\n    }\n  };\n\n  useEffect(() => {\n    const { hAxis: receivedHAxis, vAxis: receivedVAxis } = selectedAxes;\n    if (!(receivedHAxis && receivedVAxis)) {\n      return;\n    };\n\n    setShouldDisableApplyButton(hAxis === receivedHAxis && vAxis === receivedVAxis);\n\n  }, [hAxis, vAxis, selectedAxes]);\n\n  const applyChanges = () => {\n    if (!(vAxis && hAxis)) return;\n\n    const newUrl = getCorrelationChartApiUrl({\n      endpoint: ChartAPIendpoints.correlationDailyAverage,\n      school_id: currentSchoolID,\n      dataType: dataType,\n      sensorX: hAxis,\n      sensorY: vAxis\n    });\n\n    if (newUrl !== chartUrl) {\n      setIsFetchingData(true);\n\n      fetchDataFromURL({\n        url: newUrl\n      })\n        .then((data) => {\n          setIndividualChartData(correlationChartIndex, data);\n          setChartUrl(newUrl);\n          setIsFetchingData(false);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n  }\n\n  const renderApplyButtonLabel = () => {\n    return (\n      isFetchingData ? <CircularProgress disableShrink size=\"1.4375rem\" color=\"inherit\" /> : \"APPLY\"\n    )\n  };\n\n  // Disable option if the current dataType isn't in its allowedDataTypes array\n  const shouldDisableOption = (option) => {\n    return !option.allowedDataTypes.includes(dataType);\n  }\n\n  return (\n    <Grid container spacing={1} alignItems=\"center\">\n      <Grid item xs={12} sm=\"auto\">\n        <Stack direction=\"row\" spacing={0}>\n          <LeftSelect fullWidth size=\"small\">\n            <InputLabel id=\"x-axis-select-label\">X Axis</InputLabel>\n            <Select\n              labelId=\"x-axis-select-label\"\n              value={hAxis || selectedAxes?.hAxis || null}\n              label=\"X Axis\"\n              onChange={handleHAxisChange}\n              autoWidth\n            >\n              {allowedAxes?.map(option => (\n                <MenuItem\n                  key={option.sensor}\n                  value={option.sensor}\n                  disabled={option.sensor === vAxis || shouldDisableOption(option)}\n                  sx={{ textTransform: 'capitalize' }}\n                >\n                  {option.sensor}{shouldDisableOption(option) && \" (No Data)\"}\n                </MenuItem>\n              ))}\n            </Select>\n          </LeftSelect>\n          <RightSelect fullWidth size=\"small\">\n            <InputLabel id=\"y-axis-select-label\">Y Axis</InputLabel>\n            <Select\n              labelId=\"y-axis-select-label\"\n              value={vAxis || selectedAxes?.vAxis || null}\n              label=\"Y Axis\"\n              onChange={handleVAxisChange}\n              autoWidth\n            >\n              {allowedAxes?.map(option => (\n                <MenuItem\n                  key={option.sensor}\n                  value={option.sensor}\n                  disabled={option.sensor === hAxis || shouldDisableOption(option)}\n                  sx={{ textTransform: 'capitalize' }}\n                >\n                  {option.sensor}{shouldDisableOption(option) && \" (No Data)\"}\n                </MenuItem>\n              ))}\n            </Select>\n          </RightSelect>\n        </Stack>\n      </Grid>\n      <Grid item xs={12} sm=\"auto\">\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          fullWidth\n          sx={{ height: \"100%\" }}\n          onClick={applyChanges}\n          disabled={shouldDisableApplyButton}\n        >\n          {renderApplyButtonLabel()}\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default AxesPicker;\n","/* eslint-disable */\n\nimport { useContext, useEffect, useMemo, useState, useCallback } from 'react';\n\nimport { GoogleContext } from '../../ContextProviders/GoogleContext';\n\nimport { Alert, Box, Grid, Stack } from '@mui/material/';\n\nimport { useTheme } from '@mui/material/styles';\nimport SeriesSelector from './SubchartUtils/SeriesSelector';\nimport { generateRandomID, returnGenericOptions, returnChartControlUI, ChartControlType, addTouchEventListenerForChartControl } from '../GoogleChartHelper';\n\nimport GoogleChartStyleWrapper from './SubchartUtils/GoogleChartStyleWrapper';\n\nimport LoadingAnimation from '../../Components/LoadingAnimation';\n\nimport NivoCalendarChart from './NivoCharts/NivoCalendarChart/NivoCalendarChart';\nimport { generateSvgFillGradient, BackgroundGradient } from '../../Utils/Gradient/GradientUtils';\n\nimport CustomDateRangePicker from '../../Components/DateRangePicker/CustomDateRangePicker'\nimport { isValidArray } from '../../Utils/UtilFunctions';\nimport { returnSelectedDataType } from '../../Utils/AirQuality/DataTypes';\n\nimport AxesPicker from '../../Components/AxesPicker/AxesPicker';\n\nconst NoChartToRender = ({ dataType, height, selectableAxes }) => {\n  let messagePrefix = \"This sensor \";\n  let messageSuffix = \" data. Please choose a different sensor.\";\n\n  if (selectableAxes) {\n    messagePrefix = \"This pair of sensors \";\n    messageSuffix = \" correlation data. Please choose another pair or a different data type.\"\n  }\n\n  return (\n    <Box height={height}>\n      <Alert severity=\"error\" sx={{ my: 2 }}>\n        {messagePrefix}\n        does not have&nbsp;\n        <Box component=\"span\" textTransform=\"capitalize\">\n          {dataType}\n        </Box>\n        {messageSuffix}\n      </Alert>\n    </Box>\n  )\n}\n\nexport default function SubChart(props) {\n  // Props\n  const { chartData, subchartIndex, windowSize, isPortrait, height, maxHeight, selectedDataType, allowedDataTypes } = props;\n\n  // Use GoogleContext for loading and manipulating the Google Charts\n  const google = useContext(GoogleContext);\n\n  // States of the Google Charts\n  const [dataTable, setDataTable] = useState();\n  const [chartWrapper, setChartWrapper] = useState();\n  const [controlWrapper, setControlWrapper] = useState();\n\n  const [previousChartData, setPreviousChartData] = useState();\n\n  // Get the current theme\n  const theme = useTheme();\n\n  // To determine the first time the chart renders to show/hide the LoadingAnimation\n  const [isFirstRender, setIsFirstRender] = useState(true);\n\n  // To determine if the charts should be rendered or not\n  const [shouldRenderChart, setShouldRenderChart] = useState(true);\n  const [renderChartNow, setRenderChartNow] = useState(false);\n\n  // Keep track of the columns (series) of the chart\n  const [allInitialColumns, setAllInitialColumns] = useState();\n  const [dataColumns, setDataColumns] = useState();\n  const [initialVAxisRange, setInitialVAxisRage] = useState();\n\n  // Define the DOM container's ID for drawing the google chart inside\n  const [chartID, __] = useState(generateRandomID());\n\n  // Get the options object for chart\n  const options = useMemo(() => {\n    return returnGenericOptions({ ...props, theme });\n  }, [props, theme, chartData.chartType]);\n\n  // State to store transformed data for CalendarChart\n  const [calendarDataArray, setCalendarDataArray] = useState(null);\n\n  // Early exit for 'Calendar' chartType\n  if (chartData.chartType === 'Calendar') {\n    useEffect(() => {\n      const dataArray = chartData.dataArray\n        || (chartData.subcharts\n          && chartData.subcharts[subchartIndex].dataArray)\n        || null\n        || null;\n\n      if (!isValidArray(dataArray)) {\n        setShouldRenderChart(false);\n        return; // early return if there is no data to render\n      }\n\n      setCalendarDataArray(dataArray)\n      setShouldRenderChart(true);\n    }, [chartData]);\n\n    if (!calendarDataArray) {\n      return (\n        <Box sx={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '100%' }}>\n          <LoadingAnimation />\n        </Box>\n      )\n    }\n\n    return (\n      shouldRenderChart ? (\n        <NivoCalendarChart\n          dataArray={calendarDataArray}\n          valueRangeBoxTitle={returnSelectedDataType({ dataTypeKey: selectedDataType, dataTypes: allowedDataTypes, showUnit: true })}\n          isPortrait={isPortrait}\n          options={options}\n          windowSize={windowSize}\n        />\n      ) : <NoChartToRender dataType={returnSelectedDataType({ dataTypeKey: selectedDataType, dataTypes: allowedDataTypes })} />\n    );\n  }\n\n  // Properties for chart control (if existed)\n  let hasChartControl = false;\n  let chartControlOptions;\n  // Only show the chart control if:\n  // It exists in the database (either for all subcharts or just for a particular subchart)\n  // And if the chart is currently not shown on homePage\n  let chartControl = chartData.control || chartData.subcharts?.[subchartIndex].control;\n  if (chartControl) {\n    hasChartControl = true;\n\n    // Get the options for chartControl if hasChartControl\n    chartControlOptions = {\n      ...chartControl.options,\n      ui: returnChartControlUI({\n        chartControl,\n        mainChartData: chartData,\n        mainChartOptions: options,\n        subchartIndex,\n        theme,\n        isPortrait\n      })\n    };\n\n    // Swap touch events for mouse events on ChartRangeControl\n    // as it doesn't support touch events on mobile\n    if (chartControl.controlType === 'ChartRangeFilter') {\n      useEffect(() => {\n        const cleanupTouchEventListener = addTouchEventListenerForChartControl({ controlWrapper, chartID });\n        return cleanupTouchEventListener;\n      }, [controlWrapper]);\n    }\n  }\n\n  // Properties for selecting (showing or hiding) the serie(s)\n  const seriesSelector = options.seriesSelector || false;\n\n  // Properties for date-range-picker\n  const dateRangePicker = options.dateRangePicker || null;\n\n  // Properties for data formatters\n  const formatters = options.formatters || null;\n\n  // Properties for selectableAxes\n  let selectableAxes = chartData.selectableAxes || null;\n  if (selectableAxes) {\n    if (isValidArray(selectableAxes.allowedAxes)) {\n      if (selectableAxes.allowedAxes.length <= 2) selectableAxes = null; // don't display selectableAxes if number of allowedSensors is less than 3\n    }\n  }\n\n  // Set new options prop and re-render the chart if theme or isPortrait changes\n  useEffect(() => {\n    if (seriesSelector) handleSeriesSelection({ newDataColumns: dataColumns }); // this function set new options, too\n    else {\n      chartWrapper?.setOptions({\n        ...options\n      });\n\n      chartWrapper?.draw();\n      if (hasChartControl) {\n        controlWrapper?.setOptions(chartControlOptions);\n        controlWrapper?.draw();\n      }\n    }\n  }, [theme, isPortrait, windowSize]);\n\n  // Set new initialColumnsColors if the theme changes\n  // This only applies to when seriesSelector.method == \"setViewColumn\"\n  useEffect(() => {\n    if (!dataColumns) return;\n    if (seriesSelector && seriesSelector.method == \"setViewColumn\") {\n      setInitialColumnsColors({ dataColumns: dataColumns });\n      handleSeriesSelection({ newDataColumns: dataColumns });\n    }\n  }, [theme]);\n\n  const getInitialColumns = ({ chartWrapper, dataTable, seriesSelector }) => {\n    // Update the initial DataView's columns (often, all of the series are displayed initially)\n    var initialView = chartWrapper.getView();\n    // If (optional) columns is not specified in database\n    // Assign it from DataTable\n    if (initialView.columns == null) {\n      const viewFromDataTable = new google.visualization.DataView(dataTable);\n      chartWrapper.setView({\n        columns: viewFromDataTable.columns\n      });\n      initialView = chartWrapper.getView();\n    }\n\n    let shouldAssignDomainRoleToFistColumn = true; // variable to only assign type: 'domain' to the very first column\n    let dataSeriesIndex = 0;\n    const allInitialColumns = initialView.columns.map((col, index) => {\n      // A column can either be a number (that denotes the index of the sourceColumn) or an object\n      // The code below harmonize all columns to be an object to store crucial data to toggle their visibility\n      if (typeof col === 'number') col = {\n        role: shouldAssignDomainRoleToFistColumn ? 'domain' : 'data',\n        sourceColumn: col\n      }\n      col.label = dataTable.getColumnLabel(col.sourceColumn);\n      col.indexInAllInitialColumns = index;\n\n      shouldAssignDomainRoleToFistColumn = shouldAssignDomainRoleToFistColumn && false;\n\n      // Set the visibility of data column, \n      if (col.role === 'data') {\n        // If defaultSeriesToDisplayInitially is presented\n        // then, only show these series\n        if (seriesSelector.defaultSeriesToDisplayInitially) {\n          if (seriesSelector.defaultSeriesToDisplayInitially.includes(index)) {\n            col.selected = true;\n          }\n          else {\n            col.selected = false;\n          }\n        }\n        // If no defaultSeriesToDisplayInitially is presented\n        else {\n          // then, all data columns are selected if multiple series are selectable\n          if (seriesSelector.allowMultiple) {\n            col.selected = true;\n          } else {\n            // else for single serie selector, only first data column is selected\n            if (dataSeriesIndex === 0) {\n              col.selected = true;\n            } else {\n              col.selected = false;\n            }\n          }\n        }\n\n        col.seriesIndex = dataSeriesIndex;\n        dataSeriesIndex++;\n      }\n      return col;\n    });\n    setAllInitialColumns(allInitialColumns);\n    const initialVAxisRange = getInitialVAxisRange({ dataTable: dataTable, allInitialColumns: allInitialColumns });\n    setInitialVAxisRage(initialVAxisRange);\n    // To track selection, only get the columns that are:\n    // role === 'data'\n    // visibleInLegend !== false\n    const dataColumns = allInitialColumns.filter((col) => {\n      return col.role === 'data' && options.series?.[col.seriesIndex]?.visibleInLegend !== false;\n    });\n\n    if (seriesSelector.method === \"setViewColumn\") setInitialColumnsColors({ dataColumns: dataColumns });\n\n    setDataColumns(dataColumns);\n    return { initAllInitialColumns: allInitialColumns, initDataColumns: dataColumns };\n  };\n\n  const setInitialColumnsColors = ({ dataColumns }) => {\n    dataColumns.forEach((col) => {\n      // Assign inherit color to this data column\n      col.color = options.colors[col.seriesIndex % options.colors.length];\n      // Assign other inherit attributes from its serie object (if existed)\n      col.serieAttribute = options.series?.[col.seriesIndex];\n    });\n  }\n\n  const getInitialVAxisRange = ({ dataTable, allInitialColumns }) => {\n    let vAxisMin, vAxisMax;\n    allInitialColumns.forEach((col, index) => {\n      if (index === 0) return; // the first column is the domain (hAxis)\n      const range = dataTable.getColumnRange(col.sourceColumn);\n      if (!isNaN(range.min) && range.min) vAxisMin = vAxisMin ? Math.min(vAxisMin, range.min) : range.min;\n      if (!isNaN(range.max) && range.max) vAxisMax = vAxisMax ? Math.max(vAxisMax, range.max) : range.max;\n    });\n    return { min: vAxisMin, max: vAxisMax };\n  }\n\n  const handleSeriesSelection = useCallback(({\n    newDataColumns,\n    _allInitialColumns = allInitialColumns,\n    _chartWrapper = chartWrapper,\n    _controlWrapper = controlWrapper\n  }) => {\n    if (!_allInitialColumns) return;\n\n    setDataColumns(newDataColumns);\n\n    if (seriesSelector.method === \"toggleVisibility\" || seriesSelector.method === null) {\n      const hiddenSeriesObject = {};\n      newDataColumns.forEach((col) => {\n        if (!col.selected)\n          hiddenSeriesObject[col.seriesIndex] = {\n            color: 'transparent',\n            enableInteractivity: false,\n            visibleInLegend: false\n          }; // 'hide' the serie by making it transparent\n      });\n\n      _chartWrapper?.setOptions({\n        ...options,\n        series: {\n          ...options.series,\n          ...hiddenSeriesObject\n        }\n      });\n\n      if (hasChartControl) {\n        const currentControlOptions = _controlWrapper?.getOptions();\n        _controlWrapper?.setOptions({\n          ...currentControlOptions,\n          ui: {\n            ...currentControlOptions.ui,\n            chartOptions: {\n              ...currentControlOptions.ui.chartOptions,\n              series: {\n                ...options.series,\n                ...hiddenSeriesObject\n              }\n            }\n          }\n        });\n      }\n    }\n    else if (seriesSelector.method === \"setViewColumn\") {\n      let newViewColumns = [];\n      newViewColumns.push(0); // this is the domain column\n      newDataColumns.forEach((dataColumn) => {\n        if (dataColumn.selected) {\n          newViewColumns.push(dataColumn);\n          // Find this dataColumn's supporting columns (whose role !== 'data')\n          // A dataColumn has its supporting columns (can be many) follow it immediately\n          for (let i = dataColumn.indexIn_ + 1; i < _allInitialColumns.length; i++) {\n            if (_allInitialColumns[i].role !== 'data') {\n              newViewColumns.push(_allInitialColumns[i]);\n            }\n            // If this loop encounter the next dataColumn, break the loop, all supporting columns for this dataColumn have been discovered\n            else {\n              break;\n            }\n          }\n        }\n      });\n      _chartWrapper?.setView({ columns: newViewColumns });\n\n      const newOptions = { ...options };\n      // Preserve the initial vAxis range so that the vAxis doesn't shift based on the visible serie(s)\n      // newOptions.vAxis.viewWindow = {\n      //   min: (options.vAxis.viewWindow.min == null) ? initialVAxisRange.min : options.vAxis.viewWindow.min,\n      //   max: (options.vAxis.viewWindow.max == null) ? initialVAxisRange.max : options.vAxis.viewWindow.max,\n      // }\n      // Set the new color array\n      newOptions.colors = newDataColumns.filter((col) => col.selected).map((col) => col.color);\n      // Set the new series object (if any)\n      // this contains other series' attributes (lineWidth, seriesType...)\n      const series = {};\n      let selectedSeriesCount = 0;\n      newDataColumns.forEach((col) => {\n        if (!col.selected) return;\n        if (col.serieAttribute != null) {\n          series[selectedSeriesCount] = col.serieAttribute;\n        }\n        selectedSeriesCount++;\n      })\n      newOptions.series = series;\n      _chartWrapper?.setOptions(newOptions);\n\n      if (hasChartControl) {\n        const currentControlOptions = _controlWrapper?.getOptions();\n        _controlWrapper?.setOptions({\n          ...currentControlOptions,\n          ui: {\n            ...currentControlOptions.ui,\n            chartOptions: {\n              ...currentControlOptions.ui.chartOptions,\n              colors: newOptions.colors,\n              series: newOptions.series\n            },\n            chartView: {\n              columns: newViewColumns\n            }\n          }\n        });\n      }\n    }\n\n    // Call draw to apply the new DataView and 'refresh' the chart\n    _chartWrapper?.draw();\n\n    if (hasChartControl) {\n      _controlWrapper?.draw();\n    }\n  }, [allInitialColumns, options, seriesSelector, chartWrapper, controlWrapper, initialVAxisRange, hasChartControl]);\n\n  const reconstructFunctionFromJSONstring = (columns) => {\n    if (!columns) return;\n\n    const evaluatedColumns = [];\n    for (const column of columns) {\n      if (typeof column === 'number') {\n        // If it's a number, add it as-is\n        evaluatedColumns.push(column);\n      } else if (typeof column === 'object') {\n        if (column.calc && column.calc !== 'stringify') {\n          // If it's an object with a 'calc' property, evaluate the 'calc' function\n          // using new Function() and add the result to the evaluatedColumns array\n          const calcFunction = new Function(\"dataTable\", \"rowNum\", column.calc);\n          evaluatedColumns.push({\n            ...column,\n            calc: calcFunction,\n          });\n        } else {\n          // If it's an object without a 'calc' property, or with calc = 'stringify', add it as-is\n          evaluatedColumns.push(column);\n        }\n      }\n    }\n    return evaluatedColumns;\n  }\n\n  // Prepare to draw the chart if there is any change in chartData\n  // but only set flag renderChartNow if the chart should draw in the next rendering cycle\n  // to prevent chartID container not being mounted on time\n  useEffect(() => {\n    if (google && chartData) {\n      // Do not draw again if deep comparison between current chartData and previousChartData is true\n      if (JSON.stringify(chartData) === JSON.stringify(previousChartData)) return;\n      setPreviousChartData(chartData);\n\n      // Get and set the dataArray \n      const dataArray = chartData.dataArray\n        || (chartData.subcharts\n          && chartData.subcharts[subchartIndex].dataArray)\n        || null\n        || null;\n\n      const _shouldRenderChart = isValidArray(dataArray);\n      setShouldRenderChart(_shouldRenderChart);\n      if (_shouldRenderChart === true) {\n        setRenderChartNow(true);\n        const dataTable = google.visualization.arrayToDataTable(dataArray);\n\n        // Call functions for formatting the number if numberFormat is specified \n        if (formatters && typeof formatters === 'object') {\n          if (formatters.hasOwnProperty(\"numberFormatter\")) {\n            const numberFormat = new google.visualization.NumberFormat(formatters.numberFormatter.numberFormat);\n            formatters.numberFormatter.columns.forEach(col => numberFormat.format(dataTable, col));\n          }\n        }\n\n        setDataTable(dataTable);\n      }\n    }\n  }, [google, chartData]);\n\n  // Actually draw the chart now because chartID container is already mounted from shouldRenderChart flag\n  useEffect(() => {\n    if (renderChartNow === true) {\n      // Get dataColumn views\n      const columns = chartData.columns\n        || (chartData.subcharts\n          && chartData.subcharts[subchartIndex].columns)\n        || null\n        || null;\n      const reconstructedColumns = reconstructFunctionFromJSONstring(columns);\n\n      // Create chartWrapper\n      const thisChartWrapper = new google.visualization.ChartWrapper({\n        chartType: chartData.chartType,\n        dataTable: (!hasChartControl) ? dataTable : undefined,\n        options: options,\n        view: {\n          columns: reconstructedColumns\n        },\n        containerId: chartID\n      });\n      setChartWrapper(thisChartWrapper);\n\n      let thisControlWrapper;\n      if (hasChartControl) {\n        const thisDashboardWrapper = new google.visualization.Dashboard(\n          document.getElementById(`dashboard-${chartID}`));\n\n        google.visualization.events.addListener(thisDashboardWrapper, 'ready', onChartReady);\n\n        thisControlWrapper = new google.visualization.ControlWrapper({\n          controlType: chartControl.controlType,\n          options: chartControlOptions,\n          containerId: `control-${chartID}`\n        });\n        setControlWrapper(thisControlWrapper);\n\n        // Establish dependencies\n        thisDashboardWrapper.bind(thisControlWrapper, thisChartWrapper);\n\n        thisDashboardWrapper.draw(dataTable);\n      }\n      else {\n        google.visualization.events.addListener(thisChartWrapper, 'ready', onChartReady);\n        thisChartWrapper.draw();\n      }\n\n      // Run the seriesSelector for the first time\n      if (seriesSelector) {\n        const { initAllInitialColumns, initDataColumns } = getInitialColumns({ chartWrapper: thisChartWrapper, dataTable: dataTable, seriesSelector: seriesSelector });\n        handleSeriesSelection({\n          _allInitialColumns: initAllInitialColumns,\n          newDataColumns: initDataColumns,\n          _chartWrapper: thisChartWrapper,\n          _controlWrapper: thisControlWrapper\n        });\n      }\n\n      setRenderChartNow(false);\n    }\n  }, [renderChartNow])\n\n  const renderChart = () => {\n    const chartContainer = (\n      <Box\n        id={chartID}\n        sx={{ height: height, maxHeight: maxHeight }}\n      />\n    );\n\n    if (hasChartControl) {\n      return (\n        <Stack\n          id={`dashboard-${chartID}`}\n          direction={ChartControlType[chartControl.controlType]?.stackDirection || 'column-reverse'}\n          sx={{ height: '100%' }}\n        >\n          <Box\n            id={`control-${chartID}`}\n            sx={{\n              height: `calc(${height} / 8)`,\n              opacity: 0.8,\n              filter: 'saturate(0.3)'\n            }}\n          />\n          {chartContainer}\n        </Stack>\n      );\n    } else {\n      return chartContainer;\n    }\n  };\n\n  // Generate the gradient background if it exists in options parameter\n  const gradientBackgroundColor = options.gradientBackgroundColor;\n  let gradientBackgroundId, svgFillGradient;\n  if (gradientBackgroundColor) {\n    gradientBackgroundId = `${chartID}-backgroundGradient`;\n    svgFillGradient = generateSvgFillGradient({\n      colors: theme.palette.chart.colorAxes[gradientBackgroundColor].colors,\n      optionalMinValue: options.vAxis?.viewWindow?.min,\n      optionalMaxValue: options.vAxis?.viewWindow?.max\n    });\n  }\n\n  const onChartReady = () => {\n    if (!isFirstRender) return;\n    // Hide the circleProgress when chart finishes rendering the first time\n    setIsFirstRender(false);\n  };\n\n  const showAuxiliaryControls = () => {\n    if (!isFirstRender) {\n      return (\n        <Grid\n          container\n          mt={1}\n          sx={{\n            gap: 2,\n            [theme.breakpoints.down('sm')]: { gap: 1 }\n          }}\n        >\n          {seriesSelector &&\n            <Grid item\n              sx={{\n                [theme.breakpoints.down('sm')]: { width: '100%' }\n              }}\n            >\n              <SeriesSelector\n                items={dataColumns}\n                allowMultiple={seriesSelector.allowMultiple}\n                seriesLabel={seriesSelector.seriesLabel}\n                selectorID={`${chartData.title}-selector`}\n                onSeriesSelection={handleSeriesSelection}\n                displayChip={false}\n              />\n            </Grid>\n          }\n          {\n            dateRangePicker &&\n            <Grid item\n              sx={{\n                height: \"2rem\",\n                width: { [theme.breakpoints.down('sm')]: { width: '100%' } }\n              }} >\n              <CustomDateRangePicker dataType={selectedDataType} minDateOfDataset={new Date(dateRangePicker.minDate)} />\n            </Grid>\n          }\n          {selectableAxes &&\n            <AxesPicker\n              allowedAxes={selectableAxes.allowedAxes}\n              selectedAxes={selectableAxes.selectedAxes}\n              dataType={selectedDataType}\n            />\n          }\n        </Grid >\n      );\n    } else {\n      return null;\n    }\n  };\n\n  return (\n    shouldRenderChart ?\n      <GoogleChartStyleWrapper\n        isPortrait={isPortrait}\n        gradientBackgroundId={gradientBackgroundId}\n        className={chartData.chartType}\n        position=\"relative\"\n        height=\"100%\"\n        minHeight={chartData.chartType === 'Calendar' && '200px'}\n      >\n        {/* Conditionally display loading animation here */}\n        {isFirstRender && (\n          <Box sx={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '100%' }}>\n            <LoadingAnimation />\n          </Box>\n        )}\n        {showAuxiliaryControls()}\n        {renderChart()}\n        {gradientBackgroundColor ? <BackgroundGradient id={gradientBackgroundId} colors={svgFillGradient} /> : null}\n      </GoogleChartStyleWrapper> :\n      (\n        <>\n          {selectableAxes &&\n            <Box mt={1}>\n              <AxesPicker\n                allowedAxes={selectableAxes.allowedAxes}\n                selectedAxes={selectableAxes.selectedAxes}\n                dataType={selectedDataType}\n              />\n            </Box>\n          }\n          <NoChartToRender\n            dataType={returnSelectedDataType({ dataTypeKey: selectedDataType, dataTypes: allowedDataTypes })}\n            selectableAxes={selectableAxes}\n            // If the visualization has a series selector or control, we need to account for its height\n            // And since the height is a string, we need to parse it to a number before adding to it\n            height={seriesSelector || hasChartControl ? (parseFloat(height) * 1.2 + 'vw') : height}\n\n          />\n        </>\n      )\n  );\n}","import { useState, useRef } from 'react';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport parse from 'html-react-parser';\nimport { useMediaQuery, useTheme } from '@mui/material';\nimport { replacePlainHTMLWithMuiComponents } from '../Utils/UtilFunctions';\n\nfunction CollapsibleSubtitle({ text, wordLimit = 40, reference }) {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  const subtitleRef = useRef(null);\n\n  const words = text.split(' ');\n\n  // If not on mobile or words are within limit, just display the full text\n  if (!isMobile || words.length / wordLimit <= 1.4) {\n    return (\n      <Box>\n        <Typography>{parse(text, { replace: replacePlainHTMLWithMuiComponents })}</Typography>\n        {reference && (\n          <Typography variant=\"caption\" color=\"text.secondary\">\n            {parse(reference, { replace: replacePlainHTMLWithMuiComponents })}\n          </Typography>\n        )}\n      </Box>\n    );\n  }\n\n  let displayText = words.slice(0, wordLimit).join(' ');\n  const lastFullStop = displayText.lastIndexOf('.');\n\n  if (lastFullStop !== -1) {\n    displayText = displayText.slice(0, lastFullStop + 1);\n  }\n\n  // Do not collapse if the user clicks on the chart associated with the subtitle\n  const isClickWithinSharedParent = (event) => {\n    let { target } = event;\n    // .MuiContainer-root - Container for both the subtitle and the chart\n    const subtitleParent = subtitleRef.current.closest('.MuiContainer-root');\n    // Elements used to detect if the click is on a chart\n    const chartElements = new Set(['rect', 'path', 'svg', 'circle']);\n\n    while (target != null) {\n      // Check if a chart is clicked\n      if (chartElements.has(target.tagName)) {\n        // If the chart element and the subtitle element share the same container\n        // it means that the click is on the chart associated with the subtitle\n        // As such, we should not collapse the subtitle\n        const targetParent = target.closest('.MuiContainer-root');\n        return targetParent === subtitleParent;\n      }\n      target = target.parentNode; // Move up the DOM tree\n    }\n    return false;\n  };\n\n  // Custom onClickAway handler\n  const handleOnClickAway = (event) => {\n    if (!isClickWithinSharedParent(event)) {\n      setIsExpanded(false);\n    }\n  };\n\n  return (\n    <ClickAwayListener onClickAway={handleOnClickAway}>\n      <Box ref={subtitleRef} onClick={() => setIsExpanded(!isExpanded)} style={{ cursor: 'pointer' }}>\n        {isExpanded ? (\n          <>\n            <Typography>{parse(text, { replace: replacePlainHTMLWithMuiComponents })}</Typography>\n            {reference && <Typography variant=\"caption\" color=\"text.secondary\">{parse(reference, { replace: replacePlainHTMLWithMuiComponents })}</Typography>}\n          </>\n        ) : (\n          <>\n            <Typography display=\"inline\">\n              {parse(displayText, { replace: replacePlainHTMLWithMuiComponents })}\n              ...\n            </Typography>\n            <Typography display=\"inline\" color=\"text.primary\" fontWeight=\"500\" sx={{ ml: 0.5, '& :hover': { textDecoration: 'underline' } }}>\n              See more\n            </Typography>\n          </>\n        )}\n      </Box>\n    </ClickAwayListener>\n  );\n}\n\nexport default CollapsibleSubtitle;\n","import { useState } from \"react\";\nimport { Button, Menu, MenuItem, Typography } from \"@mui/material\";\nimport { isValidArray } from \"../Utils/UtilFunctions\";\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport { returnSelectedDataType } from \"../Utils/AirQuality/DataTypes\";\n\nconst DataTypeDropDownMenu = ({ selectedDataType, dataTypes, fetchChartDataType }) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  if (!isValidArray(dataTypes)) return null;\n\n  // If there is only 1 dataType, display it as a string of text\n  if (dataTypes.length <= 1) {\n    return (\n      <Typography display=\"inline\" variant=\"h6\" color=\"text.primary\">\n        {dataTypes[0].name_title}\n      </Typography>\n    )\n  }\n\n  // If there are more than 1 dataTypes to choose from, display a popup dropdown menu\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleMenuItemClick = (dataType) => {\n    fetchChartDataType(dataType);\n    handleClose();\n  };\n\n  return (\n    <>\n      <Button\n        id=\"data-type-drop-down-menu-button\"\n        aria-controls={open ? 'data-type-drop-down-menu' : undefined}\n        aria-haspopup=\"true\"\n        aria-expanded={open ? 'true' : undefined}\n        onClick={handleClick}\n        variant=\"text\"\n        size=\"small\"\n        sx={{\n          p: 0,\n          minWidth: 'unset',\n          borderRadius: 0,\n          verticalAlign: 'top',\n          textTransform: 'unset'\n        }}\n      >\n        <Typography display=\"inline\" variant=\"h6\" borderBottom=\"dotted\">\n          {returnSelectedDataType({ dataTypeKey: selectedDataType, dataTypes: dataTypes, showUnit: true })}\n        </Typography>\n        <ArrowDropDownIcon />\n      </Button>\n      <Menu\n        id=\"data-type-drop-down-menu\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        MenuListProps={{\n          'aria-labelledby': 'data-type-drop-down-menu-button',\n        }}\n      >\n\n        {dataTypes.map((dataType, index) => (\n          <MenuItem\n            key={index}\n            sx={{ fontSize: '0.8rem' }}\n            onClick={() => handleMenuItemClick(dataType.key)}\n          >\n            {dataType.name_title}\n          </MenuItem>\n        ))}\n\n      </Menu>\n    </>\n  );\n};\n\nexport default DataTypeDropDownMenu;","import { styled } from '@mui/material/styles';\nimport { Tabs } from '@mui/material/';\n\nexport const StyledTabs = styled(Tabs, {\n  shouldForwardProp: (prop) => prop !== 'smallFontSize',\n})(({ theme, smallFontSize = '0.625rem' }) => ({\n  '& .MuiTabScrollButton-root': {\n    color: theme.palette.text.primary\n  },\n  '& .MuiTab-root': {\n    [theme.breakpoints.down('sm')]: {\n      fontSize: smallFontSize,\n      padding: theme.spacing(0.5)\n    },\n  },\n  '& .MuiSvgIcon-root ': {\n    [theme.breakpoints.down('sm')]: {\n      fontSize: \"1rem\"\n    }\n  }\n}));\n\nexport default StyledTabs;","import { useState, useEffect, useContext } from 'react';\nimport { styled } from '@mui/material/styles';\nimport { Box, Tab, useMediaQuery, Typography, Menu, MenuItem, Stack, Skeleton } from '@mui/material/';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\nimport { DataTypes } from '../Utils/AirQuality/DataTypes';\nimport { fetchDataFromURL } from '../API/ApiFetch';\nimport { getChartApiUrl, getCorrelationChartApiUrl, getHistoricalChartApiUrl } from \"../API/ApiUrls\";\nimport { ChartAPIendpoints, ChartAPIendpointsOrder } from \"../API/Utils\";\nimport { DashboardContext } from \"../ContextProviders/DashboardContext\";\n\nimport SubChart from './Subchart/SubChart';\n\nimport CollapsibleSubtitle from '../Components/CollapsibleSubtitle';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport DataTypeDropDownMenu from './DataTypeDropDown';\nimport { isValidArray } from '../Utils/UtilFunctions';\nimport { useDateRangePicker } from '../ContextProviders/DateRangePickerContext';\nimport { returnFormattedDates } from '../Components/DateRangePicker/DateRangePickerUtils';\nimport { useAxesPicker } from '../ContextProviders/AxesPickerContext';\nimport StyledTabs from '../Components/StyledTabs';\n\nconst DEBOUNCE_IN_MILLISECONDS = 100;\n\nconst MAX_NUM_TABS_TO_DISPLAY = 3;\nconst INITIAL_DROPDOWN_MENU_TAB_INDEX = -1;\n\nconst ChartStyleWrapper = styled(Box)(({ theme }) => ({\n  // CSS for dark theme only\n  ...(theme.palette.mode === 'dark' && {\n    // De-saturate a bit\n    filter: 'saturate(0.85)',\n    // Invert iframe\n    '& .heat-map-iframe': {\n      filter: 'invert(0.848) hue-rotate(180deg)',\n    }\n  }),\n  // Center Calendar chart in wrapper\n  '& .Calendar [dir]:not(:empty)': {\n    margin: 'auto'\n  },\n\n  // add horizontal scrollbar to Calendar charts\n  '& .Calendar > div > div:last-of-type > div': {\n    overflowX: 'auto',\n    overflowY: 'hidden',\n    scrollbarGutter: 'stable'\n  }\n}));\n\nconst StyledMenuItem = styled(MenuItem)(({ theme }) => ({\n  '& .MuiBox-root ': {\n    [theme.breakpoints.down('sm')]: {\n      fontSize: '0.75rem'\n    },\n  }\n}));\n\n// eslint-disable-next-line max-len\nfunction ChartComponentWrapper(props) {\n  const {\n    chartTitle,\n    generalChartSubtitle,\n    generalChartReference,\n    chartData: passedChartData,\n    chartHeight: passedChartHeight,\n    chartID,\n    chartIndex\n  } = props;\n\n  const { currentSchoolID, setIndividualChartData } = useContext(DashboardContext);\n\n  const isSmallWidth = useMediaQuery((theme) => theme.breakpoints.down('sm'));\n\n  const [isPortrait, setIsPortrait] = useState(window.matchMedia('(orientation: portrait)').matches);\n  const [windowSize, setWindowSize] = useState([\n    window.innerWidth,\n    window.innerHeight,\n  ]);\n\n  let chartMaxHeight;\n  let chartHeight = passedChartHeight;\n  const chartData = passedChartData;\n\n  // Props for tab panels (multiple data visualizations in the same chart area, navigate with tab panels)\n  const [currentTab, setCurrentTab] = useState(0); // start with the first tab\n  const [previousTab, setPreviousTab] = useState(0); // keep tracking of previous tab to keep displaying it if the currentTab = initialDropdownMenuTabIndex (selecting the dropdown menu tab)\n  const [dropdownMenuTabIndex, setDropdownMenuTabIndex] = useState(INITIAL_DROPDOWN_MENU_TAB_INDEX);\n  const [dropdownMenuCurrentTitle, setDropdownMenuCurrentTitle] = useState();\n  const [anchorEl, setAnchorEl] = useState(null); // Define anchorEl state for dropdown menu of the tabs\n\n  // Props for dataType management\n  const [allowedDataTypes, setAllowedDataTypes] = useState([]);\n  const [selectedDataType, setSelectedDataType] = useState(null);\n\n  // Retrieve the dateRange for chart with DateRangePicker\n  const { dateRange, aggregationType } = useDateRangePicker();\n\n  // Retrieve the hAxis and vAxis for chart with AxesPicker\n  const { hAxis, vAxis } = useAxesPicker();\n\n  useEffect(() => {\n    // Using keys returned from backend,\n    // generate the allowedDataTypes object from DataTypes\n    if (chartData.allowedDataTypes) {\n      const dataTypesArr = [];\n      for (let dataType of chartData.allowedDataTypes) {\n        const { name_title, name_short, unit } = DataTypes[dataType];\n        dataTypesArr.push({\n          key: dataType,\n          name_title,\n          name_short,\n          unit\n        })\n      }\n      setAllowedDataTypes(dataTypesArr);\n    }\n    setSelectedDataType(chartData.selectedDataType)\n  }, [chartData]);\n\n  const fetchChartDataType = async (dataType) => {\n    const endpoint = ChartAPIendpointsOrder[chartID];\n    let url;\n    if (endpoint === ChartAPIendpoints.historical) {\n      const { startDate, endDate } = dateRange || {};\n      if (!startDate || !endDate) return;\n\n      const formattedDates = returnFormattedDates({\n        startDateObject: startDate,\n        endDateObject: endDate\n      });\n      url = getHistoricalChartApiUrl({\n        endpoint: endpoint,\n        school_id: currentSchoolID,\n        startDate: formattedDates.startDate,\n        endDate: formattedDates.endDate,\n        aggregationType: aggregationType,\n        dataType: dataType\n      })\n    }\n    else if (endpoint === ChartAPIendpoints.correlationDailyAverage) {\n      url = getCorrelationChartApiUrl({\n        endpoint: ChartAPIendpoints.correlationDailyAverage,\n        school_id: currentSchoolID,\n        dataType: dataType,\n        sensorX: hAxis,\n        sensorY: vAxis\n      });\n    }\n    else {\n      url = getChartApiUrl({\n        endpoint: endpoint,\n        school_id: currentSchoolID,\n        dataType: dataType\n      });\n    }\n    if (!url) return;\n\n    fetchDataFromURL({\n      url: url\n    })\n      .then(data => {\n        setIndividualChartData(chartID, data);\n        setSelectedDataType(data.selectedDataType);\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n  }\n\n  // eventListener for window resize\n  // redraw \"Calendar\" charts and charts with a time filter upon window resize.\n  // Filter & Calendar charts are not automatically respnsive, so we have to redraw them.\n  // redraw other charts when device orientation changes\n  useEffect(() => {\n    let timeoutID = null;\n\n    const handleWindowResize = () => {\n      clearTimeout(timeoutID);\n\n      // debounce before triggering re-render. as user is resizing window, the state could\n      // change multiple times causing many expensive rerenders. we try to rerender at the\n      // end of the resize.\n      timeoutID = setTimeout(() => {\n        // Redraw all charts on device orientation change, as the chartWrapperHeights\n        // have changed.\n        setIsPortrait(window.matchMedia('(orientation: portrait)').matches);\n\n        // Redraw all charts on window resized\n        setWindowSize([window.innerWidth, window.innerHeight]);\n      }, DEBOUNCE_IN_MILLISECONDS);\n    };\n\n    // listen to window resize events\n    window.addEventListener('resize', handleWindowResize);\n\n    return () => {\n      window.removeEventListener('resize', handleWindowResize);\n    };\n  }, [chartData]);\n\n  // set tab back to 0 if school is changed\n  useEffect(() => {\n    setPreviousTab(currentTab);\n    setCurrentTab(0);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentSchoolID])\n\n  if (chartData.chartType !== 'Calendar' && !chartHeight) {\n    chartHeight = isPortrait ? '80vw' : '35vw';\n    chartMaxHeight = isPortrait ? '800px' : '500px';\n  }\n\n  // Function to render only one chart (no subchart --> no tab control)\n  const renderOnlyOneChart = () => {\n    return (\n      <SubChart\n        selectedDataType={selectedDataType}\n        allowedDataTypes={allowedDataTypes}\n        chartData={chartData}\n        isPortrait={isPortrait}\n        windowSize={windowSize}\n        height={chartData.height ? chartData.height : chartHeight}\n      />\n    );\n  }\n\n  // Function to render multiple subcharts with tab control\n  const renderMultipleSubcharts = () => {\n    // Handle tab change\n    const handleTabChange = (__, newIndex) => {\n      setPreviousTab(currentTab);\n      setCurrentTab(newIndex);\n\n      if (needsDropdownMenu && newIndex < MAX_NUM_TABS_TO_DISPLAY && newIndex !== dropdownMenuTabIndex) {\n        setDropdownMenuCurrentTitle();\n        setDropdownMenuTabIndex(INITIAL_DROPDOWN_MENU_TAB_INDEX);\n      }\n    };\n\n    // Determine if dropdown menu is needed\n    const needsDropdownMenu = chartData.subcharts.length > MAX_NUM_TABS_TO_DISPLAY + 1; // maxTabsToDisplay = 3 by default, but here +1 for some leeway, some schools have 4 sensors which is still okay. But if > 4, then only display max 3\n\n    const subchartsDataForTabs = needsDropdownMenu ? chartData.subcharts.slice(0, MAX_NUM_TABS_TO_DISPLAY) : chartData.subcharts;\n    const subchartsDataForDropDownMenu = needsDropdownMenu ? chartData.subcharts.slice(MAX_NUM_TABS_TO_DISPLAY) : null;\n\n    // Function to handle selection from dropdown menu\n    const handleDropdownMenuSelection = (index) => {\n      setPreviousTab(currentTab);\n\n      // Because the original chartData.subcharts array was split in subchartsDataForTabs (length maxTabsToDisplay) and subchartsDataForDropDownMenu (the remaining item), the selected subcharts index is the sum of the length of subchartsDataForTabs array and the index of the selected item from subchartsDataForDropDownMenu\n      setCurrentTab(MAX_NUM_TABS_TO_DISPLAY + index);\n\n      // Same index with the one above to keep the dropdown menu tab highlighted  \n      setDropdownMenuTabIndex(MAX_NUM_TABS_TO_DISPLAY + index);\n\n      // Set title of the selected item in the dropdown menu to display it\n      setDropdownMenuCurrentTitle(subchartsDataForDropDownMenu[index].subchartTitleShort);\n\n      // Close the dropdown menu after selection\n      setAnchorEl(null);\n    };\n\n    const getOtherLocationsLabel = () => {\n      return (\n        <Stack direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\n          <Box flex={1}>\n            Other sensors\n            {\n              dropdownMenuCurrentTitle && ` (${dropdownMenuCurrentTitle})`\n            }\n            &nbsp;\n          </Box>\n          < ExpandMoreIcon />\n        </Stack>\n      )\n    }\n\n    const shouldDisplayThisSubchart = (index) => {\n      if (currentTab === INITIAL_DROPDOWN_MENU_TAB_INDEX) {\n        return previousTab === index;\n      } else {\n        return currentTab === index;\n      }\n    }\n\n    return (\n      <>\n        <StyledTabs\n          value={currentTab}\n          onChange={handleTabChange}\n          variant={isSmallWidth ? 'fullWidth' : 'standard'}\n        >\n          {subchartsDataForTabs.map((_, index) => (\n            <Tab\n              key={index}\n              value={index}\n              label={chartData.subcharts[index].subchartTitle}\n              sx={{\n                // If this subchart doesn't have a valid dataArray to render chart\n                // Make the Tab's text line-through to let user know\n                textDecoration: !isValidArray(chartData.subcharts[index].dataArray) && 'line-through'\n              }}\n            />\n          ))}\n          {/* Render dropdown menu if needed */}\n          {needsDropdownMenu && (\n            <Tab\n              value={dropdownMenuTabIndex}\n              label={getOtherLocationsLabel()}\n              aria-controls=\"submenu\"\n              aria-haspopup=\"true\"\n              onClick={(event) => setAnchorEl(event.currentTarget)}\n            />\n          )}\n        </StyledTabs>\n        {\n          needsDropdownMenu && <Menu\n            id=\"submenu\"\n            anchorEl={anchorEl}\n            open={Boolean(anchorEl)}\n            onClose={() => {\n              // Reset currentTab to the previous valid tab if the user opened the menu (clicked on the drop down menu tab, if shown), but didn't select any menu item\n              if (currentTab === INITIAL_DROPDOWN_MENU_TAB_INDEX) {\n                setPreviousTab(currentTab);\n                setCurrentTab(previousTab);\n              };\n\n              // Close the menu\n              setAnchorEl(null);\n            }}\n          >\n            {/* Render remaining subchart selector in the dropdown menu */}\n            {subchartsDataForDropDownMenu.map((_, index) => (\n              <StyledMenuItem\n                key={index}\n                selected={index === currentTab - MAX_NUM_TABS_TO_DISPLAY}\n                onClick={() => handleDropdownMenuSelection(index)}\n                sx={{\n                  // If this subchart doesn't have a valid dataArray to render chart\n                  // Make the Tab's text line-through to let user know\n                  textDecoration: !isValidArray(chartData.subcharts[index + MAX_NUM_TABS_TO_DISPLAY].dataArray) && 'line-through'\n                }}\n              >\n                <Stack direction=\"row\" alignItems=\"center\" gap={1}>\n                  <Box>\n                    {subchartsDataForDropDownMenu[index].subchartTitle}\n                  </Box>\n                  {\n                    (index === currentTab - MAX_NUM_TABS_TO_DISPLAY) &&\n                    <VisibilityIcon fontSize=\"1rem\" sx={{ color: 'text.secondary' }} />\n                  }\n                </Stack>\n              </StyledMenuItem>\n            ))}\n          </Menu>\n        }\n\n        <Box\n          position=\"relative\"\n          sx={{\n            overflowX: isPortrait && 'auto',\n            WebkitOverflowScrolling: isPortrait && 'touch',\n            overflowY: 'hidden',\n          }}\n        >\n\n          {chartData.subcharts.map((__, index) => (\n            <Box\n              key={index}\n              width=\"100%\"\n              height=\"100%\"\n              role=\"tabpanel\"\n              sx={{\n                transition: '0.35s',\n                position: (index === 0) ? '' : 'absolute',\n                opacity: shouldDisplayThisSubchart(index) ? '1' : '0',\n                pointerEvents: shouldDisplayThisSubchart(index) ? 'auto' : 'none',\n                top: (index === 0) ? '' : 0,\n                overflowX: 'auto',\n                overflowY: 'hidden',\n              }}\n            >\n              <SubChart\n                selectedDataType={selectedDataType}\n                allowedDataTypes={allowedDataTypes}\n                chartData={chartData}\n                subchartIndex={index}\n                isPortrait={isPortrait}\n                windowSize={windowSize}\n                height={chartData.height ? chartData.height : chartHeight}\n                maxHeight={\n                  ['Calendar'].includes(chartData.chartType)\n                    ? ''\n                    : chartMaxHeight\n                }\n                currentSubchart={currentTab}\n              />\n            </Box>\n          ))}\n        </Box>\n      </>\n    )\n  };\n\n  // Function to render remaining subtitles and references for chart with multiple subcharts\n  const getSubtitles = () => {\n    let text = generalChartSubtitle || '';\n    if (chartData.subcharts && chartData.subcharts[currentTab]?.subchartSubtitle) {\n      text += '<br/>';\n      text += chartData.subcharts[currentTab].subchartSubtitle;\n    }\n    return text;\n  }\n  const getReferences = () => {\n    let text = generalChartReference || '';\n    if (chartData.subcharts && chartData.subcharts[currentTab]?.reference) {\n      text += '<br/>';\n      text += chartData.subcharts[currentTab].reference;\n    }\n    return text;\n  }\n\n  return (\n    chartTitle ?\n      <>\n        <Box>\n          <Typography display=\"inline\" variant=\"h6\" color=\"text.primary\">\n            {chartIndex + 1}. {chartTitle}\n            &nbsp;\n          </Typography>\n          <Box display=\"inline\">\n            <DataTypeDropDownMenu\n              selectedDataType={selectedDataType}\n              dataTypes={allowedDataTypes}\n              fetchChartDataType={fetchChartDataType}\n            />\n          </Box>\n        </Box>\n\n        <ChartStyleWrapper height=\"100%\">\n          {chartData.subcharts ? renderMultipleSubcharts() : renderOnlyOneChart()}\n\n          {/* Render subtitle and reference below */}\n          <Box sx={{ my: 3 }}>\n            <Typography\n              component=\"div\"\n              variant=\"body1\"\n              color=\"text.secondary\"\n              sx={{ mb: 1 }}\n            >\n              <CollapsibleSubtitle\n                text={getSubtitles()}\n                reference={getReferences()}\n              />\n            </Typography>\n          </Box>\n        </ChartStyleWrapper>\n      </>\n\n      : <>\n        <Skeleton variant='text' sx={{ width: '100%', fontSize: '2rem' }} />\n        <Skeleton variant='rounded' width=\"100%\" height={300} />\n      </>\n  );\n}\n\nexport default ChartComponentWrapper;\n","import { Box, Typography, Container, Paper } from '@mui/material';\nimport { Comments } from '@hyvor/hyvor-talk-react';\n\nimport { styled } from '@mui/material/styles';\n\nimport parse from 'html-react-parser';\nimport jsonData from '../section_data.json';\nimport UppercaseTitle from './UppercaseTitle';\nimport { replacePlainHTMLWithMuiComponents, capitalizePhrase } from '../Utils/UtilFunctions';\nimport { HYVOR_WEBSITE_ID } from '../Utils/GlobalVariables';\n\nconst StyledHyvorTalk = styled(Box)(({ theme }) => ({\n  paddingBottom: theme.spacing(2),\n  '& *': {\n    color: theme.palette.text.secondary\n  },\n  '& hyvor-talk-comments': {\n    '--ht-color-accent': theme.palette.primary.main,\n    '--ht-color-accent-text': theme.palette.primary.contrastText,\n    '--ht-color-box': theme.palette.customBackground,\n    '--ht-color-box-text': theme.palette.text.secondary,\n    '--ht-color-box-text-light': theme.palette.text.secondaryRGB,\n    '--ht-button-radius': theme.spacing(1)\n  }\n}));\n\nfunction CommentSection({ pageID }) {\n  return (\n    <Container>\n      <UppercaseTitle text={capitalizePhrase(jsonData.commentSection.id)} />\n      <Box maxWidth=\"lg\" margin=\"auto\">\n        <Paper elevation={2} sx={{ p: 3, pb: 0 }}>\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ pb: 1 }}>\n            {parse(jsonData.commentSection.content, {\n              replace: replacePlainHTMLWithMuiComponents,\n            })}\n          </Typography>\n          <StyledHyvorTalk>\n            <Comments\n              website-id={HYVOR_WEBSITE_ID}\n              page-id={pageID}\n              loading=\"lazy\"\n            />\n          </StyledHyvorTalk>\n        </Paper>\n      </Box>\n    </Container>\n  );\n}\n\nexport default CommentSection;\n","import { useState } from 'react';\nimport { isMobile } from 'react-device-detect';\n\nimport { Fab, Fade, Popper, Paper, Typography, Stack } from '@mui/material';\nimport AirIcon from '@mui/icons-material/Air';\nimport { FadeInButtonForSpeedDial } from '../SpeedDial/FadeInButtonForSpeedDial';\n\nimport * as Tracking from '../../Utils/Tracking';\nimport AirQualityIndexTable from './AirQualityIndexTable';\n\nexport default function AirQualityIndexLegendQuickGlance(props) {\n  // Mechanism for opening and closing the Quick Glance on hover\n  const [anchorEl, setAnchorEl] = useState(null);\n  const handlePopperOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n    Tracking.sendEventAnalytics(Tracking.Events.airQualityIndexLegendQuickGlance);\n  };\n  const handlePopperClose = () => {\n    setAnchorEl(null);\n  };\n  const open = Boolean(anchorEl);\n\n  return (\n    <>\n      <FadeInButtonForSpeedDial {...props} distanceFromBottomOfWindow=\"5.5rem\">\n        <Fab\n          sx={{ mt: 1 }}\n          aria-owns={open ? Tracking.Events.airQualityIndexLegendQuickGlance : undefined}\n          aria-haspopup=\"true\"\n          onMouseEnter={handlePopperOpen}\n          onMouseLeave={handlePopperClose}\n          onClick={(event) => isMobile && (open ? handlePopperClose() : handlePopperOpen(event))}\n          aria-label={Tracking.Events.airQualityIndexLegendQuickGlance}\n          color=\"primary\"\n        >\n          <Stack direction=\"column\" alignItems=\"center\">\n            <AirIcon fontSize=\"1rem\" />\n            <Typography variant=\"body2\" fontWeight=\"500\">\n              AQI\n            </Typography>\n          </Stack>\n        </Fab>\n      </FadeInButtonForSpeedDial>\n\n      <Popper\n        id={Tracking.Events.airQualityIndexLegendQuickGlance}\n        sx={{\n          pointerEvents: 'none',\n          mt: -1\n        }}\n        open={open}\n        anchorEl={anchorEl}\n        placement=\"top-end\"\n        onClose={handlePopperClose}\n        keepMounted\n        transition\n      >\n        {({ TransitionProps }) => (\n          <Fade {...TransitionProps} timeout={350}>\n            <Paper elevation={8} sx={{ py: 0.5, mb: 1 }}>\n              <Typography sx={{ mx: 2, mt: 1 }} color=\"text.disabled\" variant=\"body1\" fontWeight={500}>\n                AQI at quick glance\n              </Typography>\n              <AirQualityIndexTable tiny hideAQIDescription />\n            </Paper>\n          </Fade>\n        )}\n\n      </Popper>\n    </>\n  );\n}\n","import React, { useState, useContext } from 'react';\nimport { Chip, Tooltip, IconButton, Dialog, Button, DialogActions, DialogTitle, DialogContent, useMediaQuery } from '@mui/material';\nimport * as Tracking from '../../Utils/Tracking';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport { DashboardContext } from '../../ContextProviders/DashboardContext';\nimport { useTheme } from '@emotion/react';\n\nconst CustomDialog = (props) => {\n  const {\n    buttonIcon,\n    buttonIconAria,\n    buttonLabel,\n    trackingEvent,\n    dialogTitle,\n    dialogOpenHandler = null,\n    dialogCloseHandler = null,\n    displaySchoolID = true,\n    maxWidth = \"lg\",\n    children\n  } = props;\n\n  let iconOnly;\n  if (buttonIcon && !buttonLabel) iconOnly = true;\n  else iconOnly = false;\n\n  const { currentSchoolID } = useContext(DashboardContext);\n\n  const smallScreen = useMediaQuery((theme) => theme.breakpoints.down('sm'));\n\n  const [open, setOpen] = useState(false);\n\n  const onOpen = () => {\n    setOpen(true);\n    if (trackingEvent) Tracking.sendEventAnalytics(trackingEvent);\n    if (dialogOpenHandler) dialogOpenHandler();\n  }\n\n  const onClose = () => {\n    setOpen(false);\n    if (dialogCloseHandler) dialogCloseHandler();\n  }\n\n  const theme = useTheme();\n\n  const displayButton = () => {\n    if (iconOnly) return (\n      <Tooltip title={buttonIconAria}>\n        <IconButton\n          onClick={onOpen}\n          aria-label={buttonIconAria}\n          size=\"small\"\n          sx={{ \"&:hover,:focus\": { color: theme.palette.primary.main } }}\n        >\n          {buttonIcon}\n        </IconButton>\n      </Tooltip>\n    );\n\n    else return (\n      <Button\n        onClick={onOpen}\n        variant=\"contained\"\n      >\n        {buttonIcon}&nbsp;{buttonLabel}\n      </Button>\n    )\n  }\n\n  return (\n    <>\n      {displayButton()}\n\n      <Dialog\n        open={open}\n        onClose={onClose}\n        maxWidth={maxWidth}\n        fullWidth\n        fullScreen={smallScreen}\n        keepMounted\n      >\n        {(\n          smallScreen &&\n          <DialogActions sx={{ justifyContent: \"start\" }}>\n            <Button onClick={onClose}>\n              <ChevronLeftIcon sx={{ fontSize: '1rem' }} />Back\n            </Button>\n          </DialogActions>\n        )}\n\n        <DialogTitle>\n          {displaySchoolID &&\n            (<>\n              <Chip\n                label={currentSchoolID ? `School: ${currentSchoolID.toUpperCase()}` : \"No School\"}\n                size=\"small\"\n                display=\"block\"\n                sx={{ mb: 1 }}\n              />\n              <br />\n            </>\n            )}\n\n          {dialogTitle}\n        </DialogTitle>\n\n        <DialogContent>\n          {children}\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n}\n\nexport default CustomDialog;\n","// disable eslint for this file\n/* eslint-disable */\nimport { useState, useEffect, useContext } from 'react';\nimport { Box, Link, Typography, Stack, Select, FormControl, MenuItem, Grid, Button, useMediaQuery, Table, TableBody, TableCell, TableHead, TableRow } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\nimport DownloadIcon from '@mui/icons-material/Download';\nimport DataObjectIcon from '@mui/icons-material/DataObject';\n\nimport * as Tracking from '../../Utils/Tracking';\nimport { fetchDataFromURL } from '../../API/ApiFetch';\nimport { SupportedFetchExtensions } from \"../../API/Utils\";\nimport { getRawDatasetUrl } from '../../API/ApiUrls';\nimport { RawDatasetType } from \"../../API/Utils\";\nimport LoadingAnimation from '../LoadingAnimation';\n\nimport { DashboardContext } from '../../ContextProviders/DashboardContext';\n\nimport CustomDialog from '../CustomDialog/CustomDialog';\nimport { CITIESair } from '../../Utils/GlobalVariables';\n\nexport default function DatasetDownloadDialog() {\n  const { currentSchoolID, current } = useContext(DashboardContext);\n\n  const [sensorsDatasets, updateSensorsDatasets] = useState({});\n\n  const [previewingDataset, setPreviewingDataset] = useState(\"placeholder\");\n\n  // Construct the structure of sensorsDatasets based on current data\n  useEffect(() => {\n    if (!current) return;\n\n    const sensorsDatasets = current\n      .filter(item => item && item.sensor)  // Filter out null or undefined items and sensors\n      .reduce((acc, item) => {\n        // Use location_short as the key for each sensor\n        const key = item.sensor.location_short;\n        acc[key] = {\n          location_type: item.sensor.location_type,\n          location_short: item.sensor.location_short,\n          location_long: item.sensor.location_long,\n          last_seen: item.sensor.last_seen.split('T')[0],\n          rawDatasets: Object.keys(RawDatasetType).reduce((datasetAcc, datasetKey) => {\n            datasetAcc[RawDatasetType[datasetKey]] = {\n              sample: null,\n              full: null\n            };\n            return datasetAcc;\n          }, {})\n        };\n        return acc;\n      }, {});\n\n    updateSensorsDatasets(sensorsDatasets);\n  }, [current]);\n\n  return (\n    <CustomDialog\n      buttonIcon={<DataObjectIcon sx={{ fontSize: '1rem' }} />}\n      buttonLabel=\"Dataset\"\n      trackingEvent={Tracking.Events.rawDatasetButtonClicked}\n      dialogTitle=\"Preview and download raw dataset(s)\"\n      dialogOpenHandler={(() => {\n        setPreviewingDataset(null);\n      })}\n    >\n      <DatasetSelectorAndPreviewer\n        sensorsDatasets={sensorsDatasets}\n        updateSensorsDatasets={updateSensorsDatasets}\n        previewingDataset={previewingDataset}\n        setPreviewingDataset={setPreviewingDataset}\n        schoolID={currentSchoolID}\n      />\n      {\n        sensorsDatasets &&\n        <Typography variant=\"caption\" sx={{ my: 2, fontStyle: 'italic', display: \"block\" }} >\n          These datasets are provided by {CITIESair} from sensors operated by {CITIESair}. Should you intend to utilize them for your project, research, or publication, we kindly request that you notify us at <Link href='mailto:nyuad.cities@nyu.edu'>nyuad.cities@nyu.edu</Link> to discuss citation requirements.\n        </Typography>\n      }\n    </CustomDialog>\n  );\n}\n\nconst DatasetSelectorAndPreviewer = (props) => {\n  const { sensorsDatasets, updateSensorsDatasets, previewingDataset, setPreviewingDataset, schoolID } = props;\n\n  const theme = useTheme();\n  const smallScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  // Preview the hourly type of the first sensor initially\n  useEffect(() => {\n    if (Object.keys(sensorsDatasets).length > 0 && !previewingDataset) {\n      const firstSensor = Object.keys(sensorsDatasets)[0];\n      const initialDatasetType = RawDatasetType.hourly;\n\n      setPreviewingDataset({\n        sensor: firstSensor,\n        datasetType: initialDatasetType\n      });\n\n      // If this dataset has been fetched before, early return\n      if (sensorsDatasets[firstSensor].rawDatasets[initialDatasetType].sample) return;\n\n      const url = getRawDatasetUrl({\n        school_id: schoolID,\n        sensor_location_short: firstSensor,\n        datasetType: initialDatasetType,\n        isSample: true\n      });\n\n      fetchDataFromURL({ url, extension: SupportedFetchExtensions.csv, needsAuthorization: true })\n        .then((data) => {\n          const tmp = { ...sensorsDatasets };\n          tmp[firstSensor].rawDatasets[initialDatasetType].sample = data;\n          updateSensorsDatasets(tmp);\n        })\n        .catch((error) => console.log(error));\n    }\n  }, [sensorsDatasets, previewingDataset]);\n\n  return (\n    <Grid\n      container\n      justifyContent=\"center\"\n      alignItems=\"start\"\n      spacing={smallScreen ? 1 : 2}\n      sx={{ mt: 0, overflowY: 'scroll', overflowX: 'hidden' }}\n    >\n      <Grid item sm={12} md={6}>\n        <DatasetsTable\n          schoolID={schoolID}\n          sensorsDatasets={sensorsDatasets}\n          updateSensorsDatasets={updateSensorsDatasets}\n          smallScreen={smallScreen}\n          previewingDataset={previewingDataset}\n          setPreviewingDataset={setPreviewingDataset}\n        />\n      </Grid>\n      <Grid item sm={12} md={6} maxWidth={smallScreen ? '100%' : 'unset'} sx={{ mt: 1 }}>\n        <PreviewDataset\n          sensorsDatasets={sensorsDatasets}\n          updateSensorsDatasets={updateSensorsDatasets}\n          previewingDataset={previewingDataset}\n          schoolID={schoolID}\n          smallScreen={smallScreen}\n        />\n      </Grid>\n    </Grid>\n  )\n};\n\nconst DatasetsTable = (props) => {\n  const { schoolID, sensorsDatasets, smallScreen, previewingDataset, setPreviewingDataset, updateSensorsDatasets } = props;\n  return (\n    <Table\n      size=\"small\"\n      sx={{\n        tableLayout: 'fixed'\n      }}\n    >\n      <TableHead>\n        <TableRow>\n          <TableCell sx={{ pl: 1 }}>\n            Sensor Location\n          </TableCell>\n          <TableCell sx={{ width: smallScreen ? '9.5rem' : '11rem' }}>\n            Average Period\n          </TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {sensorsDatasets && Object.keys(sensorsDatasets).map((location_short) => (\n          <Dataset\n            key={location_short}\n            schoolID={schoolID}\n            smallScreen={smallScreen}\n            sensor={location_short}\n            sensorsDatasets={sensorsDatasets}\n            previewingDataset={previewingDataset}\n            setPreviewingDataset={setPreviewingDataset}\n            isPreviewing={location_short === previewingDataset?.sensor}\n            updateSensorsDatasets={updateSensorsDatasets}\n          />\n        ))}\n      </TableBody>\n    </Table>\n  )\n}\n\nconst Dataset = (props) => {\n  const { schoolID, sensorsDatasets, sensor, previewingDataset, setPreviewingDataset, isPreviewing, updateSensorsDatasets } = props;\n\n  const [selectedDatasetType, setSelectedDatasetType] = useState(RawDatasetType.hourly);\n\n  useEffect(() => {\n    if (selectedDatasetType !== RawDatasetType.hourly) setSelectedDatasetType(RawDatasetType.hourly);\n  }, [schoolID])\n\n  const handleDatasetTypeChange = (event) => {\n    const selectedVal = event.target.value;\n    setSelectedDatasetType(selectedVal);\n    setPreviewingDataset({ datasetType: selectedVal, sensor });\n    fetchThisDataset(selectedVal);\n  };\n\n  const fetchThisDataset = (datasetType) => {\n    // If this dataset version hasn't been fetched yet,\n    // fetch it and append it into the object fetchedDatasets\n    if (!sensorsDatasets[sensor].rawDatasets[datasetType].sample) {\n      const url = getRawDatasetUrl({\n        school_id: schoolID,\n        sensor_location_short: sensorsDatasets[sensor].location_short,\n        datasetType: datasetType,\n        isSample: true\n      });\n\n      fetchDataFromURL({ url, extension: SupportedFetchExtensions.csv, needsAuthorization: true })\n        .then((data) => {\n          const tmp = { ...sensorsDatasets };\n          tmp[sensor].rawDatasets[datasetType].sample = data;\n          updateSensorsDatasets(tmp);\n        });\n    }\n  }\n\n  const setThisSensorToPreview = () => {\n    if (previewingDataset?.sensor !== sensor) {\n      setPreviewingDataset({\n        datasetType: selectedDatasetType,\n        sensor: sensor\n      });\n      fetchThisDataset(selectedDatasetType);\n    }\n  }\n\n  const theme = useTheme();\n\n  return (\n    <>\n      <TableRow key={sensor}>\n        <TableCell\n          sx={{\n            pl: 1,\n            cursor: 'pointer',\n            background: isPreviewing && theme.palette.background.NYUpurpleLight\n          }}\n          onClick={setThisSensorToPreview}>\n          {sensorsDatasets[sensor].location_long}\n        </TableCell>\n\n        <TableCell\n          sx={{\n            position: 'relative',\n            background: isPreviewing && theme.palette.background.NYUpurpleLight\n          }}>\n          <FormControl size=\"small\">\n            <Select\n              value={selectedDatasetType}\n              onChange={handleDatasetTypeChange}\n              variant=\"standard\"\n              MenuProps={{ disablePortal: true }}\n            >\n              {Object.keys(sensorsDatasets[sensor].rawDatasets).reverse().map((datasetType, index) => (\n                <MenuItem\n                  key={index}\n                  value={datasetType}\n                >\n                  <Stack direction=\"row\" alignItems=\"center\">\n                    {datasetType.charAt(0).toUpperCase() + datasetType.slice(1).toLowerCase()}\n                  </Stack>\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </TableCell>\n      </TableRow >\n    </>\n  )\n}\n\nconst PreviewDataset = (props) => {\n  const { sensorsDatasets, updateSensorsDatasets, previewingDataset, schoolID, smallScreen } = props;\n  const theme = useTheme();\n\n  const [previewingDatasetName, setPreviewingDatasetName] = useState(\"Not previewing any dataset\");\n  const [csvFileName, setCsvFileName] = useState(\"No dataset\");\n  const [isDatasetLoading, setIsDatasetLoading] = useState(false);\n\n  const downloadPreviewingDataset = () => {\n    if (!previewingDataset) return;\n\n    const fetchedDataset = sensorsDatasets[previewingDataset.sensor].rawDatasets[previewingDataset.datasetType].full;\n\n    // Fetch the full dataset if it has not been fetched before\n    if (!fetchedDataset) {\n      const url = getRawDatasetUrl({\n        school_id: schoolID,\n        sensor_location_short: previewingDataset.sensor,\n        datasetType: previewingDataset.datasetType,\n        isSample: false\n      });\n\n      fetchDataFromURL({ url, extension: SupportedFetchExtensions.csv, needsAuthorization: true }).then((data) => {\n        const tmp = { ...sensorsDatasets };\n        tmp[previewingDataset.sensor].rawDatasets[previewingDataset.datasetType].full = data;\n        updateSensorsDatasets(tmp);\n\n        convertCSVforDownload(data);\n      });\n    }\n    else {\n      convertCSVforDownload(fetchedDataset);\n    }\n\n  };\n\n  const convertCSVforDownload = (dataset) => {\n    const blob = new Blob([dataset], { type: 'application/octet-stream' }); // create a Blob with the raw data\n    const url = URL.createObjectURL(blob); // create a download link for the Blob\n    const downloadLink = document.createElement('a');\n    downloadLink.href = url;\n    downloadLink.download = csvFileName;\n    document.body.appendChild(downloadLink);\n    downloadLink.click(); // simulate a click on the download link\n    URL.revokeObjectURL(url); // clean up by revoking the object URL\n    document.body.removeChild(downloadLink);\n  }\n\n  const [formattedData, setFormattedData] = useState('');\n  const [rowNumber, setRowNumber] = useState('');\n\n  useEffect(() => {\n    // If no dataset is chosen to be previewed, early return\n    if (!previewingDataset) return;\n\n    // Update previewing dataset name regardless if the dataset preview has finished loading\n    setPreviewingDatasetName(`Previewing: ${previewingDataset.sensor} (${previewingDataset.datasetType})`);\n\n    // Get the raw dataset\n    const csvData = sensorsDatasets[previewingDataset.sensor]?.rawDatasets[previewingDataset.datasetType]?.sample;\n\n    // If it is empty, then it hasn't been loaded yet\n    if (!csvData) {\n      setRowNumber(null);\n      setFormattedData(null);\n      setCsvFileName(\"Loading...\");\n      setIsDatasetLoading(true);\n      return;\n    };\n\n    if (isDatasetLoading) setIsDatasetLoading(false);\n\n    const lines = csvData.split('\\n');\n\n    const headers = lines[0].split(',');\n    const rows = lines.slice(1);\n\n    setRowNumber([\n      \"\",\n      ...rows.map(row => row.split(',')[0])\n    ].join('\\n'));\n\n    setFormattedData([\n      headers.slice(1).join(','), // Keep the headers for the rest of the columns\n      ...rows.map(row => row.split(',').slice(1).join(',')) // Remove the first column from each row\n    ].join('\\n'));\n\n    // Get the second column of the last row and extract the date part to set the csv's file name\n    let dateString;\n    if (rows.length > 0) {\n      const lastRow = rows[rows.length - 1];\n      const columns = lastRow.split(',');\n      if (columns.length >= 2) {\n        const dateTimeString = columns[1]; // Get the second column\n        dateString = dateTimeString.split('T')[0]; // Extract the date part\n      }\n    }\n\n    const csvFileName = `${schoolID}-${previewingDataset.sensor}-${previewingDataset.datasetType}-${dateString}.csv`;\n    setCsvFileName(csvFileName);\n  }, [previewingDataset, sensorsDatasets]);\n\n  return (\n    <Stack spacing={1}>\n      <Box sx={{ '& *': { fontFamily: \"monospace !important\" } }}>\n        <Stack direction=\"row\">\n          <Typography variant='body2' gutterBottom fontWeight={500}>\n            {previewingDatasetName}\n          </Typography>\n        </Stack>\n\n        <Box\n          component=\"pre\"\n          sx={{\n            overflowX: 'auto',\n            color: theme.palette.text.secondary,\n            backgroundColor: theme.palette.customBackground,\n            p: 2,\n            pt: 1.5,\n            borderRadius: 1,\n            height: smallScreen ? '11.8rem' : '14rem',\n            width: smallScreen ? '100%' : 'unset',\n            marginTop: 0\n          }}\n        >\n          <Stack\n            direction=\"row\"\n            sx={{ fontSize: '0.75rem' }}\n          >\n            {\n              formattedData ?\n                <>\n                  <Box sx={{ mr: 2, userSelect: 'none' }}>\n                    {rowNumber}\n                  </Box>\n                  <Box>\n                    {formattedData}\n                  </Box>\n                </>\n                :\n                <LoadingAnimation optionalText=\"Loading\" />\n            }\n          </Stack>\n        </Box>\n      </Box>\n      <Box textAlign=\"center\" >\n        <Button\n          variant=\"contained\"\n          sx={{\n            textTransform: 'none',\n            textAlign: 'left',\n            lineHeight: 1.1,\n            px: 1.5,\n            py: 1\n          }}\n          onClick={() => {\n            downloadPreviewingDataset();\n            Tracking.sendEventAnalytics(Tracking.Events.rawDatasetDownloaded, {\n              dataset_type: previewingDataset?.datasetType,\n              sensor: previewingDataset?.sensor\n            });\n          }}\n          disabled={isDatasetLoading}\n        >\n          <DownloadIcon sx={{ fontSize: '1.25rem', mr: 0.5 }} />\n          {csvFileName}\n        </Button>\n      </Box>\n    </Stack >\n  )\n}","// disable eslint for this file\n/* eslint-disable */\nimport { useState, useContext } from \"react\";\nimport { Button, Menu, MenuItem } from \"@mui/material\";\nimport { Link } from 'react-router-dom';\nimport TvIcon from '@mui/icons-material/Tv';\nimport { DashboardContext } from \"../../../ContextProviders/DashboardContext\";\nimport { isValidArray } from \"../../../Utils/UtilFunctions\";\n\nconst ScreenDropDownMenu = () => {\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const { currentSchoolID, schoolMetadata } = useContext(DashboardContext);\n\n  if (!schoolMetadata) return;\n  const screens = schoolMetadata.screens;\n\n  if (!isValidArray(screens)) return null;\n\n  // If there is only 1 screen, display a button linked to that screen\n  if (screens.length <= 1) {\n    return (\n      <Button\n        variant=\"contained\"\n        component={Link}\n        to={`/screen/${currentSchoolID}`}\n      >\n        <TvIcon sx={{ fontSize: '1rem' }} />&nbsp;TV Screen\n      </Button>\n    )\n  }\n  // If there are more than 1 screens to choose from, display a popup dropdown menu\n  const open = Boolean(anchorEl);\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <>\n      <Button\n        id=\"basic-button\"\n        aria-controls={open ? 'tv-screen-list-menu' : undefined}\n        aria-haspopup=\"true\"\n        aria-expanded={open ? 'true' : undefined}\n        onClick={handleClick}\n        variant=\"contained\"\n      >\n        <TvIcon sx={{ fontSize: '1rem' }} />\n        &nbsp;\n        TV Screens\n      </Button>\n      <Menu\n        id=\"tv-screen-list-menu\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        MenuListProps={{\n          'aria-labelledby': 'basic-button',\n        }}\n      >\n        {\n          screens.map((screen, index) => (\n            <MenuItem\n              key={index}\n              component={Link}\n              to={`/screen/${currentSchoolID}/${screen.screen_name}`}\n              onClick={handleClose}\n              sx={{ fontSize: '0.8rem' }}\n            >\n              {screen.location_long}\n            </MenuItem>\n          ))}\n      </Menu>\n    </>\n  );\n};\n\nexport default ScreenDropDownMenu;","// disable eslint for this file\n/* eslint-disable */\n\nimport { useContext, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { Box, Menu, MenuItem, MenuList } from \"@mui/material\";\nimport { CustomChip } from \"../Pages/Project\";\n\nimport PlaceIcon from '@mui/icons-material/Place';\nimport { LocalStorage } from \"../Utils/LocalStorage\";\nimport { AppRoutes } from \"../Utils/AppRoutes\";\n\nimport * as Tracking from '../Utils/Tracking';\n\nimport { DashboardContext } from \"../ContextProviders/DashboardContext\";\nimport { UserContext } from \"../ContextProviders/UserContext\";\n\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport ArrowDropUpIcon from '@mui/icons-material/ArrowDropUp';\n\nconst SchoolSelector = () => {\n  const { currentSchoolID, schoolMetadata } = useContext(DashboardContext);\n  const { user } = useContext(UserContext);\n\n  // If there is only one school, return a Chip displaying the name of that school\n  if (!Array.isArray(user.allowedSchools) || user.allowedSchools.length <= 1)\n    return (\n      <CustomChip\n        icon={<PlaceIcon />}\n        label={schoolMetadata?.name || \"No School Name Given\"}\n        tooltipTitle={\"School\"}\n      />\n    );\n\n  // Else, display a drop down menu that allows choosing between different schools\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const navigate = useNavigate();\n\n  const handleItemSelect = (newSchoolID) => () => {\n    if (currentSchoolID !== newSchoolID) {\n      localStorage.setItem(LocalStorage.schoolID, newSchoolID)\n\n      Tracking.sendEventAnalytics(Tracking.Events.internalNavigation,\n        {\n          origin_school: currentSchoolID,\n          destination_school_id: newSchoolID,\n          origin_id: 'school_selector'\n        });\n\n      navigate(`${AppRoutes.dashboard}/${newSchoolID}`)\n    }\n    handleClose();\n  };\n\n  const returnChipLabel = () => {\n    return (\n      <Box sx={{\n        '& svg': {\n          fontSize: \"1rem\", verticalAlign: \"sub\", marginLeft: \"0.25rem\"\n        }\n      }\n      }>\n        {schoolMetadata?.name || \"Loading...\"}\n        {Boolean(anchorEl) ? (\n          <ArrowDropUpIcon />\n        ) : (\n          <ArrowDropDownIcon />\n        )}\n      </Box>\n    );\n  };\n\n  return (\n    <>\n      <CustomChip\n        icon={<PlaceIcon />}\n        label={returnChipLabel()}\n        tooltipTitle={\"Click to Select School\"}\n        clickable\n        onClick={handleClick}\n        aria-controls={open ? 'basic-menu' : undefined}\n        aria-haspopup=\"true\"\n        aria-expanded={open ? 'true' : undefined}\n      />\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n        MenuListProps={{\n          'aria-labelledby': 'basic-button',\n        }}\n      >\n        <MenuList dense>\n          {user.allowedSchools.map((school, index) => (\n            <MenuItem\n              key={index}\n              onClick={handleItemSelect(school.school_id)}\n            >\n              {school.name}\n            </MenuItem>\n          ))}\n        </MenuList>\n      </Menu>\n    </>\n  );\n};\n\nexport default SchoolSelector;","import React, { useContext, useEffect, useState } from 'react';\nimport { Box, TextField, Chip, Menu, MenuItem, Grid, Typography, Button, Stack, useMediaQuery, Alert } from '@mui/material';\nimport { fetchDataFromURL } from \"../../../API/ApiFetch\";\nimport { RESTmethods } from \"../../../API/Utils\";\nimport { getApiUrl } from '../../../API/ApiUrls';\nimport { GeneralAPIendpoints } from \"../../../API/Utils\";\nimport { DashboardContext } from '../../../ContextProviders/DashboardContext';\nimport { isValidArray } from '../../../Utils/UtilFunctions';\nimport { AlertSeverity, useNotificationContext } from '../../../ContextProviders/NotificationContext';\n\nconst compareArrays = (arr1, arr2) => {\n  return JSON.stringify(arr1) === JSON.stringify(arr2);\n}\n\nconst EmailsInput = () => {\n  const { currentSchoolID } = useContext(DashboardContext);\n\n  const { setShowNotification, setMessage, setSeverity } = useNotificationContext();\n\n  const smallScreen = useMediaQuery((theme) => theme.breakpoints.down('sm'));\n\n  const [serverEmails, setServerEmails] = useState([]);\n  const [localEmails, setLocalEmails] = useState([]);\n\n  const [currentEmail, setCurrentEmail] = useState('');\n  const [menuAnchor, setMenuAnchor] = useState(null);\n\n  const maxEmails = 50;\n  const validateEmail = (email) => {\n    return String(email)\n      .toLowerCase()\n      .match(\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|.(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n      );\n  };\n\n  // Fetch emails from backend\n  useEffect(() => {\n    fetchDataFromURL({\n      url: getApiUrl({\n        endpoint: GeneralAPIendpoints.alertsEmails,\n        school_id: currentSchoolID\n      }),\n      extension: 'json',\n      needsAuthorization: true\n    }).then((data) => {\n      setServerEmails(data);\n    })\n      .catch((error) => {\n        setMessage(\"There was an error loading the email list, please try again.\");\n        setSeverity(AlertSeverity.error);\n        setShowNotification(true);\n      });\n  }, [currentSchoolID]);\n\n  useEffect(() => {\n    setLocalEmails(serverEmails);\n  }, [serverEmails]);\n\n  const handleAddEmail = (passedEmail) => {\n    const email = passedEmail.trim().toLowerCase();\n\n    // If email address follows email format\n    if (validateEmail(email)) {\n      const newEmails = [...localEmails, email];\n\n      // Make sure currentEmail hasn't been added before\n      if (localEmails.includes(email)) {\n        setMessage(`Already added: ${email}`);\n        setSeverity(AlertSeverity.error);\n        setShowNotification(true);\n\n        setCurrentEmail('');\n        return;\n      }\n\n      // Display alert if reached maximum number of email recipients\n      if (newEmails.length === maxEmails) {\n        setMessage('Maximum number of recipients reached');\n        setSeverity(AlertSeverity.warning);\n        setShowNotification(true);\n      }\n\n      setLocalEmails(newEmails);\n      setCurrentEmail('');\n      setMessage();\n    } else {\n      setMessage('Invalid email address. Valid format: abc@def.xyz');\n      setSeverity(AlertSeverity.error);\n      setShowNotification(true);\n    }\n  };\n\n  const handleDeleteEmail = (index) => {\n    const newEmails = localEmails.filter((_, i) => i !== index);\n    setLocalEmails(newEmails);\n  };\n\n  const handleEditEmail = (index) => {\n    setCurrentEmail(localEmails[index]);\n    handleDeleteEmail(index);\n  };\n\n  const handleMenuOpen = (event, index) => {\n    setMenuAnchor({ index, element: event.currentTarget });\n  };\n\n  const handleMenuClose = () => {\n    setMenuAnchor(null);\n  };\n\n  const handlePaste = (event) => {\n    const pastedText = event.clipboardData.getData('text');\n    setCurrentEmail(pastedText);\n    handleAddEmail(pastedText);\n    event.preventDefault();\n  };\n\n  const handleSaveEmails = (_emails) => {\n    const emailsToSave = isValidArray(_emails) ? _emails : (isValidArray(localEmails) ? localEmails : []);\n\n    fetchDataFromURL({\n      url: getApiUrl({\n        endpoint: GeneralAPIendpoints.alertsEmails,\n        school_id: currentSchoolID\n      }),\n      restMethod: RESTmethods.POST,\n      body: emailsToSave\n    }).then((data) => {\n      setServerEmails(data);\n\n      setSeverity(AlertSeverity.success);\n      setMessage('Email list saved successfully!');\n      setShowNotification(true);\n    }).catch(() => {\n      setMessage('There was an error saving the email. Please try again.');\n      setSeverity(AlertSeverity.error);\n      setShowNotification(true);\n    })\n\n    return;\n  }\n\n  useEffect(() => {\n    const handleBeforeUnload = (event) => {\n      if (localEmails !== serverEmails) {\n        event.preventDefault();\n        event.returnValue = '';\n      }\n    };\n\n    window.addEventListener('beforeunload', handleBeforeUnload);\n\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    };\n  }, [localEmails, serverEmails]);\n\n  return (\n    <Box>\n      <Grid container alignItems=\"center\" wrap=\"wrap\">\n        <Grid item>\n          <Typography\n            variant='body1'\n            fontWeight={500}\n            sx={{ p: 0, mb: smallScreen && 1, mr: !smallScreen && 2 }}\n          >\n            Email Recipients:\n          </Typography>\n        </Grid>\n        <Grid item xs={12} sm>\n          <Grid\n            container\n            alignItems=\"center\"\n            sx={{\n              border: '1px solid rgba(0, 0, 0, 0.23)',\n              borderRadius: 2,\n              p: 0.5,\n              flexWrap: 'wrap',\n              width: '100%'\n            }}\n          >\n            {localEmails.map((email, index) => (\n              <Grid item key={index} sx={{ m: 0.5 }}>\n                <Chip\n                  label={email}\n                  onDelete={() => handleDeleteEmail(index)}\n                  onClick={(event) => handleMenuOpen(event, index)}\n                />\n              </Grid>\n            )\n            )}\n            {\n              localEmails.length < maxEmails ? (\n                <Grid item xs={12} sm minWidth=\"200px\">\n                  <TextField\n                    fullWidth\n                    variant=\"standard\"\n                    value={currentEmail}\n                    onChange={(e) => setCurrentEmail(e.target.value)}\n                    onKeyUp={(e) => {\n                      if (['Enter', 'Spacebar', ' '].includes(e.key)) {\n                        handleAddEmail(currentEmail);\n                      }\n                    }}\n                    onPaste={handlePaste}\n                    placeholder=\"Add recipient\"\n                    sx={{\n                      mx: 0.5,\n                    }}\n                    InputProps={{\n                      disableUnderline: true,\n                      style: { textTransform: \"lowercase\" }\n                    }}\n                  />\n                </Grid>\n              ) : null\n            }\n          </Grid>\n        </Grid>\n      </Grid>\n\n      <Stack sx={{ mt: 1 }} spacing={1} alignItems={smallScreen ? \"stretch\" : \"end\"}>\n        <Typography\n          variant=\"caption\"\n          display=\"block\"\n          color=\"text.secondary\"\n          textAlign=\"right\"\n        >\n          {localEmails.length} / {maxEmails} recipient{localEmails.length > 1 ? 's' : null} added\n        </Typography>\n\n        {\n          serverEmails.length === 0 ?\n            (\n              <Alert\n                severity='error'\n                sx={{\n                  mt: 1\n                }}>\n                The alerts above will not be sent unless at least one email recipient is added\n              </Alert>\n            ) : null\n        }\n\n        <Button\n          onClick={handleSaveEmails}\n          variant=\"contained\"\n          sx={{ width: smallScreen ? \"100%\" : \"fit-content\" }}\n          disabled={compareArrays(localEmails, serverEmails)}\n        >\n          SAVE EMAIL LIST\n        </Button>\n      </Stack>\n\n      <Menu\n        anchorEl={menuAnchor?.element}\n        open={Boolean(menuAnchor)}\n        onClose={handleMenuClose}\n      >\n        <MenuItem\n          onClick={() => {\n            handleEditEmail(menuAnchor.index);\n            handleMenuClose();\n          }}\n        >\n          Edit\n        </MenuItem>\n      </Menu>\n    </Box>\n  );\n};\n\nexport default EmailsInput;\n","import SpeedIcon from '@mui/icons-material/Speed';\nimport CalendarMonthIcon from '@mui/icons-material/CalendarMonth';\n\nconst AlertTypes = {\n  threshold: {\n    id: \"threshold\",\n    index: 0,\n    name: \"Threshold\",\n    tableColumnHeader: \"Threshold\",\n    icon: <SpeedIcon />\n  },\n  daily: {\n    id: \"daily\",\n    index: 1,\n    name: \"Daily\",\n    tableColumnHeader: \"Alert Hour\",\n    icon: <CalendarMonthIcon />\n  }\n};\n\nexport const ThresholdAlertTypes = {\n  below_threshold: {\n    id: 'below_threshold',\n    sign: \"<\",\n    name: \"below\"\n  },\n  above_threshold: {\n    id: 'above_threshold',\n    sign: \">\",\n    name: \"exceed\"\n  }\n}\n\nexport default AlertTypes;","import { createContext, useMemo, useState, useContext, useEffect } from 'react';\nimport { DashboardContext } from './DashboardContext';\nimport { fetchDataFromURL } from '../API/ApiFetch';\nimport { getAlertsApiUrl } from '../API/ApiUrls';\nimport { GeneralAPIendpoints } from \"../API/Utils\";\nimport AlertTypes, { ThresholdAlertTypes } from '../Components/AirQuality/AirQualityAlerts/AlertTypes';\nimport { isValidArray } from '../Utils/UtilFunctions';\nimport { DataTypes } from '../Utils/AirQuality/DataTypes';\n\nconst AirQualityAlertContext = createContext();\n\nexport const AirQualityAlertKeys = {\n  id: \"id\",\n  alert_type: \"alert_type\",\n  sensor_id: \"sensor_id\",\n  location_short: \"location_short\",\n  datatypekey: \"datatypekey\",\n  threshold_value: \"threshold_value\",\n  minutespastmidnight: \"minutespastmidnight\"\n};\n\nexport const getAlertPlaceholder = (alert_type = AlertTypes.daily.id) => {\n  let localAlertType;\n  if (alert_type === AlertTypes.threshold.id) localAlertType = ThresholdAlertTypes.above_threshold.id;\n\n  return {\n    [AirQualityAlertKeys.id]: '',\n    [AirQualityAlertKeys.alert_type]: localAlertType || alert_type,\n    [AirQualityAlertKeys.sensor_id]: '',\n    [AirQualityAlertKeys.datatypekey]: '',\n    [AirQualityAlertKeys.threshold_value]: -1,\n    [AirQualityAlertKeys.minutespastmidnight]: ''\n  }\n}\n\nexport function AirQualityAlertProvider({ children }) {\n  const { schoolMetadata, currentSchoolID } = useContext(DashboardContext);\n\n  const [selectedAlert, setSelectedAlert] = useState(getAlertPlaceholder());\n\n  const [editingAlert, setEditingAlert] = useState(selectedAlert);\n\n  const [allowedDataTypesForSensor, setAllowedDataTypesForSensor] = useState([]);\n\n  const [alerts, setAlerts] = useState([]);\n\n  useEffect(() => {\n    setEditingAlert({ ...selectedAlert });\n  }, [selectedAlert]);\n\n  useEffect(() => {\n    const sensor_id = editingAlert[AirQualityAlertKeys.sensor_id];\n    if (sensor_id && sensor_id !== '') {\n      setAllowedDataTypesForSensor(\n        returnAllowedDataTypesForThisSensor(sensor_id)\n      )\n    }\n  }, [editingAlert]);\n\n  const returnAllowedDataTypesForThisSensor = (sensor) => {\n    if (!schoolMetadata) return;\n\n    const { sensors } = schoolMetadata;\n    if (!isValidArray(sensors)) return;\n\n    const sensorData = sensors.find(elem => elem.sensor_id === sensor) || [];\n    const allowedDataTypesForThisSensor = sensorData.allowedDataTypes;\n\n    if (allowedDataTypesForThisSensor) {\n      return allowedDataTypesForThisSensor\n        .map(dataType => ({ value: dataType, label: DataTypes[dataType].name_title }));\n    }\n    else return [];\n  }\n\n  // Fetch alerts for individual school\n  useEffect(() => {\n    if (!currentSchoolID) return;\n\n    fetchDataFromURL({\n      url: getAlertsApiUrl({\n        endpoint: GeneralAPIendpoints.alerts,\n        school_id: currentSchoolID\n      })\n    }).then((data) => {\n      setAlerts(data);\n    }).catch((error) => {\n      console.log(error);\n    });\n\n  }, [currentSchoolID]);\n\n  const contextValue = useMemo(() => ({\n    selectedAlert, setSelectedAlert,\n    editingAlert, setEditingAlert,\n    allowedDataTypesForSensor, setAllowedDataTypesForSensor,\n    alerts, setAlerts\n  }), [selectedAlert, editingAlert, allowedDataTypesForSensor, alerts]);\n\n  return (\n    <AirQualityAlertContext.Provider value={contextValue}>\n      {children}\n    </AirQualityAlertContext.Provider>\n  );\n}\n\n// Custom hook \nexport const useAirQualityAlert = () => useContext(AirQualityAlertContext);","export const returnHoursFromMinutesPastMidnight = (minutes) => {\n  const hoursPastMidnight = Math.floor(minutes / 60);\n  return hoursPastMidnight.toString().padStart(2, '0') + ':00';\n}\n\nexport const CrudTypes = {\n  add: 'ADD',\n  edit: 'EDIT',\n  delete: 'DELETE'\n}\n\nexport const SharedColumnHeader = {\n  location: \"Sensor Location\",\n  dataType: \"Data Type\"\n}","import { CrudTypes } from '../Utils';\n\nexport const DialogData = {\n  [CrudTypes.add]: {\n    title: \"Add A New Alert\",\n    primaryButtonLabel: \"Save Alert\",\n    errorMessage: \"Server error: new alert was not saved. Please try again\",\n    successMessage: \"New alert added successfully\"\n  },\n  [CrudTypes.edit]: {\n    title: \"Edit Alert\",\n    primaryButtonLabel: \"Save Edit\",\n    errorMessage: \"Server error: changes were not saved. Please try again\",\n    successMessage: \"Changes saved successfully\"\n  },\n  [CrudTypes.delete]: {\n    title: \"Delete Alert\",\n    contentText: \"Are you sure you want to delete this alert?\",\n    primaryButtonLabel: \"Delete\",\n    errorMessage: \"Server error: alert not deleted. Please try again.\",\n    successMessage: \"Alert deleted successfully\"\n  }\n};\n","import { ToggleButtonGroup, ToggleButton } from '@mui/material';\nimport { ThresholdAlertTypes } from '../AlertTypes';\n\nexport const ThresholdTypeToggle = ({ thisAlertType, handleChange, disabled, ...others }) => {\n  return (\n    <ToggleButtonGroup\n      color={disabled ? \"standard\" : \"primary\"}\n      disabled={disabled}\n      defaultValue={ThresholdAlertTypes.above_threshold.id}\n      value={thisAlertType}\n      exclusive\n      aria-label=\"toggle to choose alert below or above a threshold\"\n      size=\"small\"\n      onChange={handleChange}\n      {...others}\n    >\n      {Object.keys(ThresholdAlertTypes).map((key) => {\n        const thresholdAlertType = ThresholdAlertTypes[key];\n\n        return (\n          <ToggleButton\n            key={thresholdAlertType.id}\n            size=\"small\"\n            sx={{\n              textTransform: \"capitalize !important\",\n              px: 1.25,\n              py: 0.5\n            }}\n            value={thresholdAlertType.id}\n            aria-label={thresholdAlertType.id}\n          >\n            {thresholdAlertType.sign}&nbsp;{thresholdAlertType.name}\n          </ToggleButton>\n        );\n      })}\n    </ToggleButtonGroup>\n  );\n};\n","import { Box, FormControl, InputLabel, Select, MenuItem, Stack } from '@mui/material';\nimport { useTheme } from '@emotion/react';\nimport { isValidArray } from '../../../../Utils/UtilFunctions';\n\nexport const SimplePicker = (props) => {\n  const { icon, label, value, options, handleChange, disabled } = props;\n  const theme = useTheme();\n\n  return (\n    <Stack\n      direction=\"row\"\n      spacing={1}\n      alignItems=\"center\">\n      <Box\n        aria-hidden={true}\n        sx={{\n          '& .MuiSvgIcon-root': {\n            color: disabled ? theme.palette.text.secondary : theme.palette.text.primary\n          }\n        }}\n      >\n        {icon}\n      </Box>\n\n      <FormControl\n        fullWidth\n        size='small'\n        disabled={disabled}\n        sx={{ minWidth: \"200px\" }}\n      >\n        <InputLabel id={`${label}-picker-label`}>{label}</InputLabel>\n        <Select\n          labelId={`${label}-picker-label`}\n          id={`${label}-picker`}\n          value={value}\n          label={label}\n          onChange={handleChange}\n        >\n          {isValidArray(options) &&\n            options.map((option) => (\n              <MenuItem key={option.value} value={option.value}>\n                {option.label}\n              </MenuItem>\n            ))}\n        </Select>\n      </FormControl>\n    </Stack>\n\n  );\n};\n","import { returnHoursFromMinutesPastMidnight } from '../Utils';\n\nexport const HOURS = Array.from({ length: 23 }, (_, i) => {\n  const minutesPastMidnight = (i + 1) * 60;\n  return {\n    label: returnHoursFromMinutesPastMidnight(minutesPastMidnight),\n    value: minutesPastMidnight\n  };\n});\n","import { Slider, colors, TextField, Grid, Typography } from '@mui/material';\nimport { useEffect, useState } from 'react';\nimport { useTheme } from '@emotion/react';\n\nexport const ThresholdSlider = (props) => {\n  const {\n    min = 0,\n    max = 100,\n    value,\n    defaultValue,\n    stepsForThreshold = 10,\n    marks = null,\n    handleChange,\n    disabled,\n    backgroundCssGradient,\n    invertSelection = false,\n    showInput = true,\n    inputUnit\n  } = props;\n\n  const theme = useTheme();\n\n  // sliderValue is an array\n  const [sliderRangeMin, setSliderRangeMin] = useState(invertSelection ? value || defaultValue : min);\n  const [sliderRangeMax, setSliderRangeMax] = useState(invertSelection ? max : value || defaultValue);\n  const [nearestDataIndex, setNearestDataIndex] = useState(-1);\n\n  const [error, setError] = useState(false);\n  const [helperText, setHelperText] = useState('');\n\n  useEffect(() => {\n    const localSliderRangeMin = invertSelection ? value : min;\n    const localSliderRangeMax = invertSelection ? max : value;\n    setSliderRangeMin(localSliderRangeMin);\n    setSliderRangeMax(localSliderRangeMax);\n\n    setNearestDataIndex(findNearestDataIndex(invertSelection ? localSliderRangeMin : localSliderRangeMax));\n  }, [invertSelection, value, max, min]);\n\n  const handleSliderChange = (event, newValue) => {\n    const val = newValue[invertSelection ? 0 : 1];\n\n    setSliderRangeMin(invertSelection ? val : min);\n    setSliderRangeMax(invertSelection ? max : val);\n\n    handleChange(val);\n    setNearestDataIndex(findNearestDataIndex(val));\n  };\n\n  const handleInputChange = (event) => {\n    const val = event.target.value === '' ? '' : Number(event.target.value);\n\n    if (val !== '' && (val >= min && val <= max)) {\n      setSliderRangeMin(invertSelection ? val : min);\n      setSliderRangeMax(invertSelection ? max : val);\n\n      handleChange(val);\n      setNearestDataIndex(findNearestDataIndex(val));\n\n      setError(false);\n      setHelperText('');\n    } else {\n      setError(true);\n      setHelperText(`Threshold must be between ${min} and ${max}`);\n    }\n  };\n\n  const findNearestDataIndex = (val) => {\n    if (!marks) return -1;\n\n    // Filter marks to get those with values greater than currentVal\n    const greaterMarks = marks.filter(mark => mark.value >= val);\n\n    // If no marks are greater, return -1\n    if (greaterMarks.length === 0) {\n      return -1;\n    }\n\n    // Find the mark with the nearest value greater than val\n    const nearestMark = greaterMarks.reduce((prev, curr) => {\n      return (curr.value - val) < (prev.value - val) ? curr : prev;\n    });\n\n    // Return the index of the nearest mark in the original marks array\n    const index = marks.indexOf(nearestMark)\n    return invertSelection ? index - 1 : index;\n  }\n\n  const stripedGradient = `repeating-linear-gradient(-45deg, ${colors.grey[800]}, ${colors.grey[800]} 4px, ${colors.common.white} 4px, ${colors.common.white} 8px)`;\n\n  return (\n    <>\n      <Grid container item xs=\"auto\" alignItems=\"end\" spacing={0.5}>\n        <Grid item xs=\"auto\" minWidth=\"4.5rem\">\n          {showInput ? (\n            <TextField\n              variant='standard'\n              type=\"number\"\n              label=\"Threshold\"\n              value={invertSelection ? sliderRangeMin : sliderRangeMax}\n              onChange={handleInputChange}\n              error={error}\n              helperText={helperText}\n              size='small'\n              fullWidth\n              disabled={disabled}\n              inputProps={{\n                step: stepsForThreshold,\n                min,\n                max,\n                type: 'number',\n                'aria-labelledby': 'input-threshold-slider'\n              }}\n            />\n          ) : null}\n        </Grid>\n\n        {\n          inputUnit ? (\n            <Grid item>\n              <Typography variant='body2'>\n                {inputUnit}\n              </Typography>\n            </Grid>\n          ) : null\n        }\n      </Grid>\n\n\n      <Grid item xs={12} sx={{ mt: 2, ml: 6 }}>\n        <Slider\n          aria-label=\"Alert Threshold Slider\"\n          aria-labelledby=\"input-threshold-slider\"\n          value={[sliderRangeMin, sliderRangeMax]}\n          defaultValue={[sliderRangeMin, sliderRangeMax]}\n          step={marks === null ? stepsForThreshold : null} // only allow discrete equal step if marks are not provided\n          marks={marks}\n          disabled={disabled}\n          min={min}\n          max={max}\n          onChange={handleSliderChange}\n          valueLabelDisplay=\"on\"\n          orientation=\"vertical\"\n          sx={{\n            height: \"35vh\",\n            minHeight: \"250px\",\n            maxHeight: \"500px\",\n            cursor: disabled ? 'not-allowed' : 'inherit',\n            pointerEvents: 'all',\n            '& *': {\n              transition: 'none !important'\n            },\n            '& .MuiSlider-thumb': {\n              width: '2rem',\n              height: '4px',\n              borderRadius: 1,\n              color: colors.common.black,\n            },\n            [`& .MuiSlider-thumb[data-index=\"${invertSelection ? 1 : 0}\"]`]: {\n              display: 'none',\n            },\n            '& .MuiSlider-mark, .MuiSlider-markActive': {\n              width: '2rem',\n              height: '3px',\n              background: theme.palette.background.paper,\n              backgroundImage: theme.palette.background.paperBackgroundGradient\n            },\n            '& .MuiSlider-thumb, .MuiSlider-mark': {\n              transform: `translate(-50%,50%})`\n            },\n            '& .MuiSlider-rail, .MuiSlider-track': {\n              width: '1rem',\n              opacity: 0.75,\n              border: 'none'\n            },\n            '& .MuiSlider-rail': {\n              background: disabled ? colors.grey[400] : backgroundCssGradient,\n            },\n            '& .MuiSlider-track': {\n              background: stripedGradient,\n              ...(invertSelection ? {\n                borderBottomLeftRadius: 0,\n                borderBottomRightRadius: 0\n              } : {\n                borderTopLeftRadius: 0,\n                borderTopRightRadius: 0\n              })\n            },\n            [`& .MuiSlider-markLabel, .MuiSlider-markLabel[data-index=\"${nearestDataIndex}\"]`]: {\n              color: theme.palette.text.primary,\n              fontWeight: 500,\n              textDecoration: 'underline',\n            },\n            '& .MuiSlider-markLabelActive': {\n              color: theme.palette.text.secondary,\n              fontWeight: 'inherit',\n              textDecoration: 'inherit',\n            },\n            '& .MuiSlider-valueLabel': {\n              transform: 'translate(-10px, -50%)',\n            }\n          }} />\n      </Grid>\n\n      <Grid item sx={{ mt: 1 }}>\n        <Typography variant='caption' display='block' fontStyle=\"italic\">\n          Move the slider to change the alert's threshold value or use the text input box for more precise control.\n        </Typography>\n      </Grid>\n    </>\n  );\n};\n\n","import { Button, Dialog, DialogTitle, DialogActions, DialogContent, DialogContentText, Stack, useMediaQuery, Typography, Grid } from '@mui/material';\nimport { useTheme } from '@emotion/react';\nimport AlertTypes from '../AlertTypes';\nimport { ThresholdAlertTypes } from '../AlertTypes';\nimport { CrudTypes, SharedColumnHeader } from '../Utils';\n\nimport { AirQualityAlertKeys, getAlertPlaceholder, useAirQualityAlert } from '../../../../ContextProviders/AirQualityAlertContext';\n\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\nimport PlaceIcon from '@mui/icons-material/Place';\nimport CategoryIcon from '@mui/icons-material/Category';\n\nimport { capitalizePhrase } from '../../../../Utils/UtilFunctions';\nimport { DataTypeKeys, DataTypes } from '../../../../Utils/AirQuality/DataTypes';\nimport { useContext, useEffect, useState } from 'react';\nimport { DashboardContext } from '../../../../ContextProviders/DashboardContext';\nimport { fetchDataFromURL } from '../../../../API/ApiFetch';\nimport { RESTmethods } from \"../../../../API/Utils\";\nimport { getAlertsApiUrl } from '../../../../API/ApiUrls';\nimport { GeneralAPIendpoints } from \"../../../../API/Utils\";\nimport { generateCssBackgroundGradient } from '../../../../Utils/Gradient/GradientUtils';\nimport { AQI_Database, VOC_Database } from '../../../../Utils/AirQuality/AirQualityIndexHelper';\n\nimport { DialogData } from './DialogData';\nimport { ThresholdTypeToggle } from './ThresholdTypeToggle';\nimport { SimplePicker } from './SimplePicker';\nimport { HOURS } from './HOURS';\nimport { ThresholdSlider } from './ThresholdSlider';\nimport { AlertSeverity, useNotificationContext } from '../../../../ContextProviders/NotificationContext';\n\nimport isEqual from 'lodash.isequal';\n\nconst AlertModificationDialog = (props) => {\n  const {\n    alertTypeKey,\n    openAlertModificationDialog,\n    crudType,\n    handleClose\n  } = props;\n\n  const { schoolMetadata, currentSchoolID } = useContext(DashboardContext);\n\n  const { selectedAlert, setSelectedAlert, editingAlert, allowedDataTypesForSensor, setEditingAlert, setAlerts } = useAirQualityAlert();\n\n  const [shouldDisableButton, setShouldDisableButton] = useState(false);\n\n  const { setShowNotification, setMessage, setSeverity } = useNotificationContext();\n\n  useEffect(() => {\n    setMessage();\n    setShowNotification(false);\n  }, [crudType, setMessage, setShowNotification]);\n\n  const handleCurrentSensorChange = (event) => {\n    const newSensor = event.target.value;\n    setEditingAlert({\n      ...editingAlert,\n      [AirQualityAlertKeys.sensor_id]: newSensor,\n      [AirQualityAlertKeys.datatypekey]: ''\n    });\n  }\n\n  const handleCurrentDataTypeChange = (event) => {\n    const selectedDataTypeKey = event.target.value;\n    const dataType = DataTypes[selectedDataTypeKey];\n    const dataTypeColorAxis = theme.palette.chart.colorAxes[dataType.color_axis];\n    const { defaultValueForAlert } = dataTypeColorAxis;\n\n    setEditingAlert({\n      ...editingAlert,\n      [AirQualityAlertKeys.datatypekey]: selectedDataTypeKey,\n      [AirQualityAlertKeys.threshold_value]: defaultValueForAlert\n    });\n\n\n  }\n\n  const handleCurrentThresholdValueChange = (value) => {\n    setEditingAlert({\n      ...editingAlert,\n      [AirQualityAlertKeys.threshold_value]: value\n    });\n  }\n\n  const handleCurrentAlertTypeChange = (event) => {\n    setEditingAlert({\n      ...editingAlert,\n      [AirQualityAlertKeys.alert_type]: event.target.value\n    });\n  }\n\n  const handleCurrentMinutesPastMidnightChange = (event) => {\n    setEditingAlert({\n      ...editingAlert,\n      [AirQualityAlertKeys.minutespastmidnight]: event.target.value\n    });\n  }\n\n  const theme = useTheme();\n\n  const locations = schoolMetadata?.sensors?.map(sensor => (\n    {\n      value: sensor.sensor_id,\n      label: capitalizePhrase(sensor.location_short)\n    }\n  ));\n\n  const returnDialogContent = () => {\n\n    // Helper function to check if the previous field has a value to disable this field\n    // or disable everything if the crudType is DELETE\n    const isDisabled = (key) => {\n      if (crudType === CrudTypes.delete) return true;\n\n      const dependencies = {\n        [AirQualityAlertKeys.sensor_id]: null,\n        [AirQualityAlertKeys.datatypekey]: AirQualityAlertKeys.sensor_id,\n        [AirQualityAlertKeys.alert_type]: AirQualityAlertKeys.datatypekey,\n        [AirQualityAlertKeys.threshold_value]: AirQualityAlertKeys.datatypekey,\n        [AirQualityAlertKeys.minutespastmidnight]: AirQualityAlertKeys.datatypekey\n      };\n\n      const dependentKey = dependencies[key];\n\n      if (!dependentKey) return false; // if this datatypekey doesnt depend on another one, always return disabled == false\n\n      const placeholder = getAlertPlaceholder(alertTypeKey);\n      return editingAlert[dependentKey] === placeholder[dependentKey];\n    };\n\n    let alertTypeSpecificData = null;\n\n    switch (alertTypeKey) {\n      case AlertTypes.daily.id:\n        alertTypeSpecificData = (\n          <SimplePicker\n            icon={<AccessTimeIcon />}\n            label={AlertTypes.daily.tableColumnHeader}\n            value={editingAlert[AirQualityAlertKeys.minutespastmidnight]}\n            options={HOURS}\n            disabled={isDisabled(AirQualityAlertKeys.minutespastmidnight)}\n            handleChange={handleCurrentMinutesPastMidnightChange}\n          />\n        );\n        break;\n      case AlertTypes.threshold.id:\n        let thresholdSlider = null;\n\n        const currentDataTypeKey = editingAlert[AirQualityAlertKeys.datatypekey];\n        if (currentDataTypeKey && currentDataTypeKey !== \"\") {\n          const dataType = DataTypes[currentDataTypeKey];\n          const dataTypeColorAxis = theme.palette.chart.colorAxes[dataType.color_axis];\n          const { colors, minValue, maxValue, defaultValueForAlert, stepsForThreshold } = dataTypeColorAxis;\n\n          const backgroundCssGradient = generateCssBackgroundGradient({\n            gradientDirection: 'to top',\n            colors: colors\n          });\n\n          // Check if this dataType exists in the AQI_Database\n          // If yes, return value and label accordingly to the marks\n          let marks, database;\n          const invertSelection = editingAlert[AirQualityAlertKeys.alert_type] === ThresholdAlertTypes.below_threshold.id;\n\n          if (currentDataTypeKey === DataTypeKeys.voc) {\n            database = VOC_Database;\n          } else if ([DataTypeKeys.aqi, DataTypeKeys.pm2_5, DataTypeKeys.pm10_raw, DataTypeKeys.co2].includes(currentDataTypeKey)) {\n            database = AQI_Database;\n          }\n\n          if (database) {\n            marks = database\n              .filter((_, index) => index !== 0) // do not return the lowest category\n              .map((elem) => {\n                const val = elem[dataType.threshold_mapping_name].low;\n                return {\n                  value: val,\n                  label: elem.category\n                }\n              })\n          }\n\n          const inputUnit = Object.keys(DataTypes)\n            .filter(key => key === editingAlert[AirQualityAlertKeys.datatypekey])\n            .map(key => DataTypes[key].unit)[0]\n\n          thresholdSlider = (\n            <ThresholdSlider\n              min={minValue}\n              max={maxValue}\n              marks={marks}\n              defaultValue={defaultValueForAlert}\n              value={editingAlert[AirQualityAlertKeys.threshold_value]}\n              stepsForThreshold={stepsForThreshold}\n              disabled={isDisabled(AirQualityAlertKeys.threshold_value)}\n              backgroundCssGradient={backgroundCssGradient}\n              invertSelection={invertSelection}\n              handleChange={handleCurrentThresholdValueChange}\n              inputUnit={inputUnit}\n            />\n          )\n        } else {\n          thresholdSlider = (\n            <ThresholdSlider\n              min={0}\n              max={100}\n              defaultValue={50}\n              value={50}\n              disabled={true}\n              showInput={false}\n            />\n          )\n        }\n\n        alertTypeSpecificData = (\n          <Grid\n            container\n            alignItems=\"stretch\"\n          >\n            <Grid item xs={12}>\n              <Typography\n                variant='body1'\n                fontWeight={500}\n                color=\"text.secondary\"\n                sx={{ mb: 1 }}\n              >\n                Alert me if {DataTypes[currentDataTypeKey]?.name_title || 'selected data type'} is:\n              </Typography>\n            </Grid>\n\n            <Grid item sx={{ mr: 2 }}>\n              <ThresholdTypeToggle\n                thisAlertType={editingAlert[AirQualityAlertKeys.alert_type]}\n                handleChange={handleCurrentAlertTypeChange}\n                disabled={isDisabled(AirQualityAlertKeys.alert_type)}\n                sx={{\n                  height: \"100%\"\n                }}\n              />\n            </Grid>\n\n            {thresholdSlider}\n          </Grid>\n        )\n        break;\n      default:\n        break;\n\n    }\n    return (\n      <Stack\n        direction=\"column\"\n        spacing={3}\n        mt={1}\n        width=\"100%\"\n      >\n        {\n          DialogData[crudType]?.contentText ?\n            (\n              <DialogContentText fontWeight=\"500\">\n                {DialogData[crudType].contentText}\n              </DialogContentText>\n            ) : null\n        }\n\n        <SimplePicker\n          icon={<PlaceIcon />}\n          label={SharedColumnHeader.location}\n          value={editingAlert[AirQualityAlertKeys.sensor_id]}\n          options={locations}\n          disabled={isDisabled(AirQualityAlertKeys.sensor_id)}\n          handleChange={handleCurrentSensorChange}\n        />\n\n        <SimplePicker\n          icon={<CategoryIcon />}\n          label={SharedColumnHeader.dataType}\n          value={editingAlert[AirQualityAlertKeys.datatypekey]}\n          options={allowedDataTypesForSensor}\n          disabled={isDisabled(AirQualityAlertKeys.datatypekey)}\n          handleChange={handleCurrentDataTypeChange}\n        />\n\n        {alertTypeSpecificData}\n\n      </Stack>\n    );\n  }\n\n  const handleAlertModification = () => {\n    const handleFetchError = (error) => {\n      setSeverity(AlertSeverity.error);\n      setMessage(DialogData[crudType].errorMessage);\n      setShowNotification(true);\n    };\n\n    const handleFetchSuccess = () => {\n      setSeverity(AlertSeverity.success);\n      setMessage(DialogData[crudType].successMessage);\n      setShowNotification(true);\n      handleClose();\n    }\n\n    switch (crudType) {\n      case CrudTypes.add:\n        fetchDataFromURL({\n          url: getAlertsApiUrl({\n            endpoint: GeneralAPIendpoints.alerts,\n            school_id: currentSchoolID\n          }),\n          restMethod: RESTmethods.POST,\n          body: editingAlert\n        }).then((data) => {\n          setAlerts(prevAlerts => [...prevAlerts, data]);\n          handleFetchSuccess();\n\n          const placeholder = getAlertPlaceholder(alertTypeKey);\n          setSelectedAlert(placeholder);\n          setEditingAlert(placeholder);\n        }).catch((error) => handleFetchError(error));\n\n        break;\n      case CrudTypes.edit:\n        const alert_id = selectedAlert[AirQualityAlertKeys.id];\n        fetchDataFromURL({\n          url: getAlertsApiUrl({\n            endpoint: GeneralAPIendpoints.alerts,\n            school_id: currentSchoolID,\n            alert_id: alert_id\n          }),\n          restMethod: RESTmethods.PUT,\n          body: editingAlert\n        }).then((data) => {\n          setAlerts(prevAlerts =>\n            prevAlerts.map(alert =>\n              alert.id === alert_id ? data : alert\n            )\n          );\n          handleFetchSuccess();\n        }).catch((error) => handleFetchError(error));\n\n        break;\n      case CrudTypes.delete:\n        fetchDataFromURL({\n          url: getAlertsApiUrl({\n            endpoint: GeneralAPIendpoints.alerts,\n            school_id: currentSchoolID,\n            alert_id: selectedAlert.id\n          }),\n          restMethod: RESTmethods.DELETE\n        }).then(() => {\n          setAlerts(prevAlerts => prevAlerts.filter(alert => alert.id !== selectedAlert.id));\n          handleFetchSuccess();\n        }).catch((error) => handleFetchError(error));\n\n        break;\n      default:\n        break;\n    }\n  }\n\n  // Disable / Enable save button depends on context\n  useEffect(() => {\n    switch (crudType) {\n      case CrudTypes.add:\n        const placeholder = getAlertPlaceholder(alertTypeKey);\n\n        if (editingAlert[AirQualityAlertKeys.sensor_id] === placeholder[AirQualityAlertKeys.sensor_id] ||\n          editingAlert[AirQualityAlertKeys.datatypekey] === placeholder[AirQualityAlertKeys.datatypekey]) {\n          if (alertTypeKey === AlertTypes.daily.id) {\n            setShouldDisableButton(editingAlert[AirQualityAlertKeys.minutespastmidnight] === placeholder[AirQualityAlertKeys.minutespastmidnight]);\n          } else {\n            setShouldDisableButton(true);\n          }\n        } else {\n          if (alertTypeKey === AlertTypes.daily.id) {\n            setShouldDisableButton(editingAlert[AirQualityAlertKeys.minutespastmidnight] === placeholder[AirQualityAlertKeys.minutespastmidnight]);\n          } else {\n            setShouldDisableButton(false);\n          }\n        }\n        break;\n\n      case CrudTypes.edit:\n        setShouldDisableButton(isEqual(selectedAlert, editingAlert));\n        break;\n      default:\n        setShouldDisableButton(false);\n        break;\n    }\n  }, [crudType, selectedAlert, editingAlert, alertTypeKey]);\n\n  const smallScreen = useMediaQuery((theme) => theme.breakpoints.down('sm'));\n\n  return (\n    <Dialog\n      open={openAlertModificationDialog}\n      onClose={handleClose}\n      aria-labelledby=\"alert-modification-dialog\"\n      maxWidth=\"xs\"\n      fullWidth\n      fullScreen={smallScreen}\n    >\n      <DialogTitle id=\"alert-modification-dialog\">\n        {DialogData[crudType]?.title}\n      </DialogTitle>\n\n      <DialogContent>\n        {returnDialogContent()}\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={handleClose}\n          sx={{\n            color: theme.palette.text.secondary\n          }}\n        >\n          Cancel\n        </Button>\n        <Button\n          onClick={handleAlertModification}\n          color=\"primary\"\n          disabled={crudType === CrudTypes.delete ? false : shouldDisableButton} // Delete dialog button can never be disabled\n        >\n          {DialogData[crudType]?.primaryButtonLabel}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default AlertModificationDialog;\n\n\n","import { useState } from 'react';\nimport { Box, Button, IconButton, Stack, Table, TableBody, TableCell, TableHead, TableRow, Tooltip, Alert, Grow } from '@mui/material';\n\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport AddAlarmIcon from '@mui/icons-material/AddAlarm';\n\nimport { useTheme } from '@emotion/react';\nimport { AirQualityAlertKeys, getAlertPlaceholder, useAirQualityAlert } from '../../../ContextProviders/AirQualityAlertContext';\n\nimport AlertTypes from './AlertTypes';\nimport { ThresholdAlertTypes } from './AlertTypes';\n\nimport { isValidArray } from '../../../Utils/UtilFunctions';\nimport AlertModificationDialog from './AlertModificationDialog/AlertModificationDialog';\n\nimport { returnHoursFromMinutesPastMidnight, CrudTypes, SharedColumnHeader } from './Utils';\nimport { TransitionGroup } from 'react-transition-group';\nimport { DataTypes } from '../../../Utils/AirQuality/DataTypes';\n\nconst AlertsTable = (props) => {\n\n  const { selectedAlert, setSelectedAlert } = useAirQualityAlert();\n\n  const { alertTypeKey, alertsForTable } = props;\n\n  const theme = useTheme();\n\n  const [openAlertModificationDialog, setOpenAlertModificationDialog] = useState(false);\n  const [crudType, setCrudType] = useState(null);\n\n  const handleModifyClick = ({ alert, crudType }) => {\n    setSelectedAlert(alert);\n    setCrudType(crudType);\n    setOpenAlertModificationDialog(true);\n  };\n\n  const handleClose = () => {\n    setOpenAlertModificationDialog(false);\n    setSelectedAlert(getAlertPlaceholder(alertTypeKey));\n  }\n\n  return (\n    <>\n      <Stack spacing={2} alignItems=\"center\">\n        <Box width=\"100%\">\n          {\n            isValidArray(alertsForTable) ?\n              (\n                <Table size=\"small\" sx={{ my: 1 }}>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell sx={{ pl: 1 }}>\n                        {SharedColumnHeader.location}\n                      </TableCell>\n\n                      <TableCell>\n                        {SharedColumnHeader.dataType}\n                      </TableCell>\n\n                      <TableCell>\n                        {AlertTypes[alertTypeKey]?.tableColumnHeader || \"\"}\n                      </TableCell>\n\n                      <TableCell sx={{ width: \"5rem\", px: 0 }}></TableCell>\n                    </TableRow>\n                  </TableHead>\n\n                  <TransitionGroup component={TableBody}>\n                    {isValidArray(alertsForTable) ? alertsForTable.map((alert, index) => (\n                      <Grow key={index}>\n                        <TableRow\n                          sx={{\n                            background: alert?.id === selectedAlert?.id && theme.palette.background.NYUpurpleLight\n                          }}\n                        >\n                          <TableCell sx={{ textTransform: 'capitalize' }}>\n                            {alert?.[AirQualityAlertKeys.location_short]}\n                          </TableCell>\n\n                          <TableCell>\n                            {\n                              Object.keys(DataTypes)\n                                .filter(key => key === alert?.[AirQualityAlertKeys.datatypekey])\n                                .map(key => DataTypes[key].name_title)[0]\n                            }\n                          </TableCell>\n\n                          {alertTypeKey === AlertTypes.threshold.id ? (\n                            <TableCell>\n                              {ThresholdAlertTypes[alert?.alert_type].sign}{alert?.threshold_value}\n                              &nbsp;\n                              {\n                                Object.keys(DataTypes)\n                                  .filter(key => key === alert?.[AirQualityAlertKeys.datatypekey])\n                                  .map(key => DataTypes[key].unit)[0]\n                              }\n                            </TableCell>\n                          ) : null}\n\n                          {alertTypeKey === AlertTypes.daily.id ? (\n                            <TableCell>\n                              {returnHoursFromMinutesPastMidnight(alert?.minutespastmidnight)}\n                            </TableCell>\n                          ) : null}\n\n                          <TableCell sx={{ width: \"5rem\", px: 0 }}>\n                            <Tooltip title=\"Edit Alert\">\n                              <IconButton\n                                aria-label=\"edit\"\n                                size=\"small\"\n                                sx={{ \"&:hover,:focus\": { color: theme.palette.primary.main } }}\n                                onClick={() => handleModifyClick({ alert, crudType: CrudTypes.edit })}\n                              >\n                                <EditIcon />\n                              </IconButton>\n                            </Tooltip>\n\n                            <Tooltip title=\"Delete Alert\">\n                              <IconButton\n                                aria-label=\"delete\"\n                                size=\"small\"\n                                sx={{ \"&:hover,:focus\": { color: theme.palette.primary.main } }}\n                                onClick={() => handleModifyClick({ alert, crudType: CrudTypes.delete })}\n                              >\n                                <DeleteIcon />\n                              </IconButton>\n                            </Tooltip>\n                          </TableCell>\n                        </TableRow>\n                      </Grow>\n\n                    )) : null\n                    }\n                  </TransitionGroup>\n                </Table>\n              ) : (\n                <Alert\n                  severity='warning'\n                  sx={{\n                    mt: 2\n                  }}>\n                  No {AlertTypes[alertTypeKey].name.toLowerCase()} alert has been set up\n                </Alert>\n              )\n          }\n        </Box>\n\n        <Button\n          variant=\"outlined\"\n          startIcon={<AddAlarmIcon />}\n          fullWidth\n          sx={{ maxWidth: \"sm\", textTransform: 'uppercase' }}\n          onClick={() => handleModifyClick({\n            alert: getAlertPlaceholder(alertTypeKey), crudType: CrudTypes.add\n          })}\n        >\n          Add Alert\n        </Button>\n      </Stack>\n\n      <AlertModificationDialog\n        alertTypeKey={alertTypeKey}\n        crudType={crudType}\n        openAlertModificationDialog={openAlertModificationDialog}\n        handleClose={handleClose}\n      />\n    </>\n  );\n};\n\nexport default AlertsTable;","import { useState } from 'react';\nimport { Box, Tab, useMediaQuery } from '@mui/material';\n\nimport StyledTabs from '../../StyledTabs';\nimport AlertsTable from './AlertsTable';\n\nimport { getAlertPlaceholder, useAirQualityAlert } from '../../../ContextProviders/AirQualityAlertContext';\nimport AlertTypes from './AlertTypes';\nimport { isValidArray } from '../../../Utils/UtilFunctions';\n\nfunction AlertTab(props) {\n  const { children, value, index, alertTypeKey, alertsArray, ...other } = props;\n\n  return (\n    <Box\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`alert-tabpanel-${alertTypeKey}`}\n      aria-labelledby={`alert-tab-${alertTypeKey}`}\n      width=\"100%\"\n      {...other}\n    >\n      <AlertsTable\n        alertTypeKey={alertTypeKey}\n        alertsForTable={alertsArray}\n      />\n    </Box>\n  );\n}\n\nexport default function AlertsTabs(props) {\n  const smallScreen = useMediaQuery((theme) => theme.breakpoints.down('sm'));\n  const [currentTab, setCurrentTab] = useState(0);\n\n  const { setSelectedAlert } = useAirQualityAlert();\n\n  const handleTabChange = (event, newVal) => {\n    setCurrentTab(newVal);\n    setSelectedAlert(\n      getAlertPlaceholder(AlertTypes[Object.keys(AlertTypes)?.[newVal]]?.id)\n    );\n  };\n\n  const { alerts } = useAirQualityAlert();\n\n  const returnFilteredAlertsBasedOnAlertType = (alertTypeKey) => {\n    const filteredAlerts = alerts.filter((alert) => {\n      const alertType = alert?.alert_type?.toLowerCase();\n      if (alertType.includes(alertTypeKey)) return alert;\n      else return null;\n    });\n\n    const alertsLength = isValidArray(filteredAlerts) ? filteredAlerts.length : \"0\";\n\n    return {\n      array: filteredAlerts,\n      alertsLength\n    }\n  }\n\n  return (\n    <Box>\n      <StyledTabs\n        value={currentTab}\n        onChange={handleTabChange}\n        variant={smallScreen ? 'fullWidth' : 'standard'}\n        smallFontSize=\"0.825rem\"\n      >\n        {Object.values(AlertTypes).map((type) => {\n          const filteredAlerts = returnFilteredAlertsBasedOnAlertType(type.id);\n          return (\n            <Tab\n              key={type.id}\n              value={type.index}\n              icon={type.icon}\n              label={`${type.name} (${filteredAlerts?.alertsLength})`}\n              iconPosition=\"start\"\n              sx={{ py: 0 }}\n            />\n          )\n        }\n        )}\n      </StyledTabs>\n\n      {Object.values(AlertTypes).map((type) => {\n        const filteredAlerts = returnFilteredAlertsBasedOnAlertType(type.id);\n        return (\n          <AlertTab\n            key={type.id}\n            alertTypeKey={type.id}\n            value={currentTab}\n            index={type.index}\n            alertsArray={filteredAlerts.array}\n          />\n        )\n      }\n      )}\n    </Box>\n  );\n}\n","import { Stack } from '@mui/material';\n\nimport NotificationImportantIcon from '@mui/icons-material/NotificationImportant';\nimport * as Tracking from '../../../Utils/Tracking';\n\nimport CustomDialog from '../../CustomDialog/CustomDialog';\nimport EmailsInput from './EmailsInput';\nimport AlertsTabs from './AlertsTabs';\nimport { AirQualityAlertProvider } from '../../../ContextProviders/AirQualityAlertContext';\n\nexport default function AirQualityAlerts() {\n  return (\n    <CustomDialog\n      buttonIcon={<NotificationImportantIcon sx={{ fontSize: '1rem' }} />}\n      buttonLabel=\"Alerts\"\n      trackingEvent={Tracking.Events.rawDatasetButtonClicked}\n      dialogTitle=\"Air quality alerts\"\n    >\n      <Stack width=\"100%\" spacing={5}>\n        <AirQualityAlertProvider>\n          <AlertsTabs />\n        </AirQualityAlertProvider>\n\n        <EmailsInput />\n      </Stack>\n\n    </CustomDialog>\n  );\n}","// disable eslint for this file\n/* eslint-disable */\nimport { useState, useEffect, useContext } from 'react';\nimport parse from 'html-react-parser';\nimport ChartComponentWrapper from '../Graphs/ChartComponentWrapper';\nimport UppercaseTitle from '../Components/UppercaseTitle';\nimport CommentSection from '../Components/CommentSection';\nimport { HYVOR_PAGE_NAME } from '../Utils/GlobalVariables';\nimport { Button, Box, Typography, Container, Divider, Chip, Grid, Tooltip, Stack, Skeleton } from '@mui/material';\n\nimport { useTheme } from '@mui/material/styles';\n\nimport ThemePreferences from '../Themes/ThemePreferences';\n\nimport AirQualityIndexLegendQuickGlance from '../Components/AirQuality/AirQualityIndexLegendQuickGlance';\n\nimport jsonData from '../section_data.json';\n\nimport PersonIcon from '@mui/icons-material/Person';\nimport EmailIcon from '@mui/icons-material/Email';\nimport PublishedWithChangesIcon from '@mui/icons-material/PublishedWithChanges';\nimport BarChartIcon from '@mui/icons-material/BarChart';\nimport CommentIcon from '@mui/icons-material/Comment';\n\nimport { replacePlainHTMLWithMuiComponents } from '../Utils/UtilFunctions';\nimport DatasetDownloadDialog from '../Components/DatasetDownload/DatasetDownloadDialog';\nimport ScreenDropDownMenu from '../Components/AirQuality/AirQualityScreen/ScreenDropDownMenu';\n\nimport { scrollToSection } from '../Components/Header/MenuItemAsNavLink';\nimport FullWidthBox from '../Components/FullWidthBox';\n\nimport * as Tracking from '../Utils/Tracking';\n\nimport CurrentAQIGrid from '../Components/AirQuality/CurrentAQIGrid';\nimport SchoolSelector from '../Components/SchoolSelector';\n\nimport LoadingAnimation from '../Components/LoadingAnimation';\n\nimport { MetadataContext } from '../ContextProviders/MetadataContext';\n\nimport NYUADbanner from './Embeds/NYUADbanner';\n\nimport { DashboardContext } from '../ContextProviders/DashboardContext';\nimport { PreferenceContext } from '../ContextProviders/PreferenceContext';\n\nimport AQIexplanation from '../Components/AirQuality/AQIexplanation';\nimport { DateRangePickerProvider } from '../ContextProviders/DateRangePickerContext';\nimport { AxesPickerProvider } from '../ContextProviders/AxesPickerContext';\nimport AirQualityAlerts from '../Components/AirQuality/AirQualityAlerts/AirQualityAlert';\nimport { NYUAD } from '../Utils/GlobalVariables';\n\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\n\n// Custom Chip component to display metadata\nexport const CustomChip = (props) => {\n  const { tooltipTitle, label, ...otherProps } = props;\n  return (\n    <Tooltip title={tooltipTitle} enterDelay={0} leaveDelay={200}>\n      <Chip\n        size=\"small\"\n        label={label || <Skeleton variant=\"text\" sx={{ minWidth: '5rem' }} />}\n        {...otherProps}\n      />\n    </Tooltip>\n  );\n}\n\nconst Project = () => {\n  let lastUpdate;\n\n  const { commentCounts, fetchCommentCounts, setCommentCounts, setChartsTitlesList } = useContext(MetadataContext);\n\n  const { schoolMetadata, current, allChartsData, loadMoreCharts, currentSchoolID, setLoadMoreCharts } = useContext(DashboardContext);\n  const { themePreference, temperatureUnitPreference } = useContext(PreferenceContext);\n\n  const [displayCommentSection, setDisplayCommentSection] = useState(false);\n  const [displayMapOfSensors, setDisplayMapOfSensors] = useState(false);\n\n  // If NYUAD, display comment section and map of sensors\n  useEffect(() => {\n    if (!schoolMetadata) return;\n\n    const isNYUAD = schoolMetadata.school_id === NYUAD;\n    setDisplayCommentSection(isNYUAD);\n    setDisplayMapOfSensors(isNYUAD);\n\n    // Fetch comment count for NYUAD\n    if (isNYUAD && !commentCounts) {\n      fetchCommentCounts().then((data) => {\n        setCommentCounts(data);\n      });\n    }\n  }, [schoolMetadata])\n\n  // Update the chart title list for quick navigation\n  useEffect(() => {\n    if (!allChartsData) return;\n\n    const chartsTitles = Object.keys(allChartsData).map((key, index) => ({ chartTitle: allChartsData[key]?.title || \"\", chartID: `chart-${index + 1}` }));\n\n    setChartsTitlesList(chartsTitles);\n  }, [allChartsData]);\n\n  const theme = useTheme();\n\n  const getDashboardTitle = () => {\n    if (schoolMetadata?.school_id) return `Air Quality | ${schoolMetadata?.school_id}`\n  }\n\n  const displayProjectDescription = () => {\n    if (schoolMetadata) return (\n      <Typography\n        component=\"div\"\n        variant=\"body1\"\n        color=\"text.secondary\"\n        sx={{\n          textAlign: 'justify', pb: 2, mb: 0, \"& table *\": {\n            color: `${theme.palette.text.secondary}`\n          }\n        }}\n        gutterBottom\n      >\n        {\n          parse(schoolMetadata.description || '', {\n            replace: replacePlainHTMLWithMuiComponents,\n          })\n        }\n      </Typography>\n    )\n    else {\n      return (\n        Array.from({ length: 3 }).map((_, index) => (\n          <Skeleton key={index} variant='text' />\n        ))\n      )\n    }\n  };\n\n  const displayCharts = () => {\n    // Display if there are at least one chart\n    if (Object.keys(allChartsData).length > 0) {\n      return (\n        <>\n          {Object.keys(allChartsData).map((chartID, index) => (\n            <FullWidthBox\n              key={chartID}\n              backgroundColor={index % 2 !== 0 ? 'customAlternateBackground' : ''}\n            >\n              <Container\n                sx={{ pt: 4, pb: 4 }}\n                height=\"auto\"\n                className={themePreference === ThemePreferences.dark ? 'dark' : ''}\n                id={`chart-${index + 1}`}\n              >\n\n                <AxesPickerProvider>\n                  <DateRangePickerProvider>\n                    <ChartComponentWrapper\n                      chartTitle={allChartsData[chartID].title}\n                      generalChartSubtitle={allChartsData[chartID].subtitle}\n                      generalChartReference={allChartsData[chartID].reference}\n                      chartData={{\n                        chartIndex: index,\n                        ...allChartsData[chartID],\n                      }}\n                      chartID={chartID}\n                      chartIndex={index}\n                    />\n                  </DateRangePickerProvider>\n                </AxesPickerProvider>\n                {\n                  // Optionally display the button to load more charts at the bottom of the last chart\n                  // (if not already fetched every chart)\n                  displayLoadMoreButton(index === Object.keys(allChartsData).length - 1)\n                }\n              </Container>\n            </FullWidthBox>\n          ))}\n\n        </>\n      );\n    } else {\n      // Else display loading animation\n      return <LoadingAnimation optionalText=\"Loading Visualizations\" />;\n    }\n  };\n\n  const displayLoadMoreButton = (isLastChartInList) => {\n    if (isLastChartInList === true && loadMoreCharts === false) {\n      return (\n        <Stack sx={{ mt: 6, mx: 'auto', maxWidth: 'sm' }}>\n          <Button\n            variant=\"contained\"\n            onClick={() => {\n              setLoadMoreCharts(true);\n            }}\n          >\n            <KeyboardArrowDownIcon sx={{ fontSize: '1rem' }} />&nbsp;Load More Charts\n          </Button>\n        </Stack>\n      )\n    }\n    else {\n      return null;\n    }\n  }\n\n  const GridOfMetadataChips = () => {\n    return (\n      <Grid container spacing={1} sx={{ mt: -3, pb: 3 }}>\n        <Grid item>\n          <SchoolSelector />\n        </Grid>\n\n        <Grid item>\n          <CustomChip\n            icon={<PersonIcon />}\n            label={schoolMetadata?.contactPerson}\n            tooltipTitle=\"Contact Person\"\n          />\n        </Grid>\n\n        <Grid item>\n          <CustomChip\n            icon={<EmailIcon />}\n            label={schoolMetadata?.contactEmail}\n            tooltipTitle=\"Contact Email\"\n            component=\"a\"\n            href={`mailto:${schoolMetadata?.contactEmail}`}\n            clickable\n          />\n        </Grid>\n\n        <Grid item>\n          <CustomChip\n            icon={<BarChartIcon />}\n            label={`${Object.keys(allChartsData).length || \"...\"} Chart${Object.keys(allChartsData).length !== 1 ? 's' : ''}`}\n            tooltipTitle=\"Number of Charts\"\n            onClick={() => {\n              scrollToSection(jsonData.charts.id);\n              Tracking.sendEventAnalytics(Tracking.Events.internalNavigation,\n                {\n                  destination_id: jsonData.charts.id,\n                  destination_label: jsonData.chartData?.toString(),\n                  origin_id: 'chip'\n                });\n            }}\n          />\n        </Grid>\n\n        {\n          lastUpdate &&\n          <Grid item>\n            <CustomChip\n              icon={<PublishedWithChangesIcon />}\n              label={`Last update: ${lastUpdate}`}\n              tooltipTitle=\"Last Update\" />\n          </Grid>\n        }\n\n        {(displayCommentSection === true && commentCounts !== null) ?\n          (\n            <Grid item>\n              <CustomChip\n                icon={<CommentIcon />}\n                label={`${commentCounts[HYVOR_PAGE_NAME]} Comment${commentCounts[HYVOR_PAGE_NAME] > 1 ? \"s\" : \"\"}`}\n                tooltipTitle=\"Number of Comments\"\n                onClick={() => {\n                  scrollToSection(jsonData.commentSection.id);\n                  Tracking.sendEventAnalytics(Tracking.Events.internalNavigation,\n                    {\n                      destination_id: jsonData.commentSection.id,\n                      destination_label: jsonData.commentSection.toString(),\n                      origin_id: 'chip'\n                    })\n                }}\n              />\n            </Grid>\n          ) : null}\n      </Grid>\n    )\n  }\n\n  return (\n    <Box width=\"100%\">\n      <AirQualityIndexLegendQuickGlance />\n\n      <FullWidthBox backgroundColor='customAlternateBackground'>\n        <Container sx={{ pt: 2, pb: 2 }}>\n          <UppercaseTitle text={getDashboardTitle()} />\n          <GridOfMetadataChips />\n\n          {displayMapOfSensors === true &&\n            (\n              <NYUADbanner\n                initialNyuadCurrentData={current}\n                isOnBannerPage={false}\n                themePreference={themePreference}\n                minMapHeight={\"250px\"}\n              />\n            )\n          }\n\n          {displayMapOfSensors === false &&\n            (<Box textAlign=\"center\" sx={{ mb: 2 }}>\n              <CurrentAQIGrid\n                currentSensorsData={current}\n                isScreen={false}\n                temperatureUnitPreference={temperatureUnitPreference}\n              />\n            </Box>)\n          }\n\n          {displayProjectDescription()}\n\n          <Grid container spacing={1}>\n            <Grid item>\n              <ScreenDropDownMenu />\n            </Grid>\n            <Grid item>\n              <DatasetDownloadDialog />\n            </Grid>\n            {\n              // only show Air Quality Alerts for schools other than nyuad at the moment\n              (currentSchoolID && currentSchoolID !== NYUAD) ? <Grid item>\n                <AirQualityAlerts />\n              </Grid> : null\n            }\n\n          </Grid>\n\n          <AQIexplanation />\n\n        </Container>\n      </FullWidthBox>\n\n      <Box id={jsonData.charts.id}>\n        {displayCharts(allChartsData)}\n      </Box>\n      <Divider />\n\n      {displayCommentSection === true &&\n        <FullWidthBox id={jsonData.commentSection.id} sx={{ pt: 3, pb: 4 }}>\n          <CommentSection pageID={HYVOR_PAGE_NAME} />\n        </FullWidthBox>\n      }\n    </Box >\n  );\n};\n\nexport default Project;\n","// disable eslint for this file\n/* eslint-disable */\n\nimport { useEffect, useContext } from \"react\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\n\nimport { fetchDataFromURL } from \"../API/ApiFetch\";\nimport Project from \"./Project\";\nimport { getApiUrl, getChartApiUrl, getHistoricalChartApiUrl } from \"../API/ApiUrls\";\nimport { ChartAPIendpointsOrder, GeneralAPIendpoints } from \"../API/Utils\";\nimport { fetchAndProcessCurrentSensorsData } from \"../API/ApiFetch\";\nimport { MetadataContext } from \"../ContextProviders/MetadataContext\";\nimport { DashboardContext } from \"../ContextProviders/DashboardContext\";\n\nimport { UserContext } from \"../ContextProviders/UserContext\";\nimport { LocalStorage } from \"../Utils/LocalStorage\";\nimport { AppRoutes } from \"../Utils/AppRoutes\";\nimport { CITIESair, NUMBER_OF_CHARTS_TO_LOAD_INITIALLY, NYUAD } from \"../Utils/GlobalVariables\";\nimport { AlertSeverity, useNotificationContext } from \"../ContextProviders/NotificationContext\";\n\nconst Dashboard = () => {\n  const { school_id_param } = useParams();\n  const navigate = useNavigate();\n\n  const location = useLocation();\n  const locationPath = location.pathname;\n\n  // Update the page's title based on school_id_param\n  useEffect(() => {\n    if (!school_id_param) return;\n\n    document.title = `${CITIESair} | ${school_id_param.toUpperCase()}`;\n  }, [school_id_param]);\n\n  // Update current page type\n  const { setCurrentPage } = useContext(MetadataContext);\n  useEffect(() => {\n    setCurrentPage(AppRoutes.dashboard);\n  }, []);\n\n  const {\n    currentSchoolID, setCurrentSchoolID,\n    schoolMetadata, setSchoolMetadata,\n    current, setCurrent,\n    allChartsData, setIndividualChartData,\n    loadMoreCharts\n  } = useContext(DashboardContext);\n  const { user } = useContext(UserContext);\n\n  const { setShowNotification, setMessage, setSeverity } = useNotificationContext();\n\n  useEffect(() => {\n    // NYUAD is public --> skip authentication and just fetch data\n    if (school_id_param === NYUAD) {\n      fetchInitialDataForDashboard(NYUAD);\n      setCurrentSchoolID(NYUAD);\n      return;\n    };\n\n    if (user.checkedAuthentication === true && user.authenticated === false) {\n      navigate(`${AppRoutes.login}?${AppRoutes.redirectQuery}=${locationPath}`);\n    }\n\n    const allowedSchools = user.allowedSchools;\n\n    if (Array.isArray(allowedSchools) && allowedSchools.length > 0) {\n      // If no school_id_param is given\n      if (!school_id_param) {\n        let school_id;\n\n        // If there has been a previouslySelectedSchoolID, then load dashboard data for this one\n        const previouslySelectedSchoolID = localStorage.getItem(LocalStorage.schoolID);\n\n        if (allowedSchools.map((school) => school.school_id).includes(previouslySelectedSchoolID)) {\n          school_id = previouslySelectedSchoolID;\n        }\n        // If not existed yet, then just get the first school in the list\n        else {\n          school_id = allowedSchools[0].school_id;\n          setCurrentSchoolID(school_id);\n          localStorage.setItem(LocalStorage.schoolID, school_id);\n        }\n\n        navigate(school_id, { replace: true }); // navigate to the correct url: /dashboard/:school_id_param\n\n        // If there is no schoolMetadata or current or chartData, then fetch them\n        if (!(!schoolMetadata && !current && !allChartsData)) fetchInitialDataForDashboard(school_id);\n      }\n      // If there is school_id_param, check if school_id_param is in the allowedSchools\n      else {\n        if (allowedSchools.map((school) => school.school_id).includes(school_id_param)) {\n          setCurrentSchoolID(school_id_param);\n          fetchInitialDataForDashboard(school_id_param);\n          localStorage.setItem(LocalStorage.schoolID, school_id_param);\n        }\n        // If the school_id_param is not in the allowedSchools\n        else {\n          navigate(AppRoutes[404], { replace: true });\n          setShowNotification(true);\n          setMessage(\"You don't have permission to view this school or this school does not exist.\");\n          setSeverity(AlertSeverity.error);\n        }\n      }\n    }\n  }, [user, school_id_param]);\n\n  const fetchInitialDataForDashboard = async (school_id) => {\n    try {\n      setSchoolMetadata();\n      setCurrent();\n\n      const response = await Promise.all([\n        fetchDataFromURL({\n          url: getApiUrl({\n            endpoint: GeneralAPIendpoints.schoolmetadata,\n            school_id: school_id\n          })\n        }),\n        fetchAndProcessCurrentSensorsData(getApiUrl({\n          endpoint: GeneralAPIendpoints.current,\n          school_id: school_id\n        }))\n      ])\n\n      setSchoolMetadata(response[0]);\n      setCurrent(response[1]);\n\n    } catch (error) {\n      console.log(error);\n    }\n\n    const chartsToFetch = loadMoreCharts ? ChartAPIendpointsOrder : ChartAPIendpointsOrder.slice(0, NUMBER_OF_CHARTS_TO_LOAD_INITIALLY);\n    chartsToFetch.forEach((endpoint, index) => {\n      setIndividualChartData(index, {}); // set empty chartData to create a placeholder for this chart\n\n      fetchDataFromURL({\n        url: getHistoricalChartApiUrl({\n          endpoint: endpoint,\n          school_id: school_id\n        })\n      })\n        .then(data => {\n          setIndividualChartData(index, data);\n        })\n        .catch((error) => {\n          console.log(error);\n        })\n    });\n  }\n\n  useEffect(() => {\n    if (loadMoreCharts === true) {\n      const restOfCharts = ChartAPIendpointsOrder.slice(NUMBER_OF_CHARTS_TO_LOAD_INITIALLY);\n      restOfCharts.forEach((endpoint, index) => {\n        const chartIndexInPage = NUMBER_OF_CHARTS_TO_LOAD_INITIALLY + index;\n        setIndividualChartData(chartIndexInPage, {}); // set empty chartData to create a placeholder for this chart\n\n        fetchDataFromURL({\n          url: getChartApiUrl({\n            endpoint: endpoint,\n            school_id: currentSchoolID\n          })\n        })\n          .then(data => {\n            setIndividualChartData(chartIndexInPage, data);\n          })\n          .catch((error) => {\n            console.log(error);\n          })\n      });\n    }\n\n  }, [loadMoreCharts]);\n\n  return (\n    <Project />\n  )\n};\n\nexport default Dashboard;"],"names":["Explanation","AQIexplanation","themePreference","useContext","PreferenceContext","_jsx","ExpandableSection","title","content","_jsxs","Box","children","AirQualityIndexTable","Typography","component","variant","color","sx","mt","parse","replace","replacePlainHTMLWithMuiComponents","StyledTable","styled","Table","shouldForwardProp","prop","_ref","theme","tiny","minWidth","fontSize","palette","text","secondary","breakpoints","down","fontWeight","primary","lineHeight","props","hideAQIDescription","returnFormattedBreakpoints","low","high","Infinity","concat","_Fragment","overflow","size","TableHead","TableRow","TableCell","pr","width","height","pl","align","CITIESair","TableBody","AQI_Database","map","element","index","border","backgroundColor","category","whiteSpace","aqiUS","rawPM2_5","description","healthSuggestions","outdoors","StyledAccordion","MuiAccordion","expanded","backgroundImage","background","default","boxShadow","shadows","transition","StyledAccordionSummary","MuiAccordionSummary","_ref2","marginTop","spacing","flexDirection","paddingLeft","textDecoration","main","marginBottom","TooltipText","_ref3","setExpanded","useState","undefined","onChange","panel","event","isExpanded","Tracking","expandSection","collapseSection","section","expandIcon","ArrowDropDownIcon","id","Tooltip","enterDelay","leaveDelay","InfoIcon","marginLeft","MuiAccordionDetails","UppercaseTitle","display","textTransform","pb","Skeleton","SELECT_ALL","ITEM_HEIGHT","ITEM_PADDING_TOP","SeriesSelector","items","itemsFromChart","selectorID","allowMultiple","seriesLabel","onSeriesSelection","displayChip","useTheme","MenuProps","PaperProps","style","maxHeight","customAlternateBackground","anchorOrigin","vertical","horizontal","transformOrigin","getContentAnchorEl","setItems","selectAll","setSelectAll","useEffect","every","item","selected","handleChange","target","value","includes","updatedItems","newDataColumns","selectedItems","filter","label","some","selectedItem","handleItemToggle","existingItem","Stack","direction","alignItems","FormControl","borderRadius","shape","Select","labelId","multiple","renderValue","VisibilityIcon","length","renderedLabel","MenuItem","disabled","Checkbox","checked","onClick","p","transform","Radio","borderTop","borderColor","position","bottom","zIndex","justifyContent","Switch","Grid","container","Chip","onDelete","ChartControlType","CategoryFilter","stackDirection","DateRangeFilter","ChartRangeFilter","NumberRangeFilter","generateRandomID","Math","random","toString","substr","hideAnnotations","stem","textStyle","opacity","boxStyle","returnResponsiveFontSizeInPixels","isPortrait","isSmaller","returnGenericOptions","_chartData$subcharts","_chartData$options","_chartData$options2","_chartData$options2$b","_chartData$options3","_chartData$options4","_chartData$options4$c","_chartData$options4$c2","_chartData$options5","_chartData$options5$c","_chartData$options5$c2","_chartData$options6","_chartData$options6$c","_chartData$options6$c2","_chartData$options7","_chartData$options7$c","_chartData$options7$c2","_chartData$options8","_chartData$options8$w","_chartData$options9","_chartData$options9$w","_chartData$options$le","_chartData$options10","_chartData$options10$","_options$vAxis$format","_options$vAxis","_options$vAxis$title","_options$vAxis2","_options$vAxis$viewWi","_options$vAxis3","_options$vAxis3$viewW","_options$vAxis$viewWi2","_options$vAxis4","_options$vAxis4$viewW","_options$vAxis$viewWi3","_options$vAxis5","_options$vAxis5$viewW","_options$hAxis$title","_options$hAxis","_options$vAxis6","_options$vAxis7","_options$vAxis7$gridl","_options$hAxis2","_options$hAxis3","_options$hAxis3$gridl","_options$hAxis4","_options$hAxis5","_options$hAxis5$gridl","_options$annotations","chartData","subchartIndex","axisTitleTextStyle","italic","bold","chart","axisTitle","axisTextStyle","axisText","options","subcharts","curveType","crosshair","orientation","trigger","fill","chartArea","portrait","landscape","tooltip","isHtml","showColorCode","legend","alignment","scrollArrows","activeColor","inactiveColor","pagingTextStyle","vAxis","format","viewWindow","min","max","hAxis","slantedText","slantedTextAngle","colors","optionsColors","series","Object","values","forEach","_serie","serie","trendlines","_item","colorAxis","colorAxisFirstColor","multiColor","colorIndex","NYUpurple","colorAxes","titleTextStyle","gridlines","minorGridlines","count","annotations","highContrast","contrastText","thickness","rx","ry","annotationBoxFill","fillOpacity","returnChartControlUI","_chartControl$options","chartControl","mainChartData","mainChartOptions","chartControlUI","ui","snapToData","controlType","chartType","chartView","columns","chartOptions","textPosition","addTouchEventListenerForChartControl","controlWrapper","chartID","touchHandler","first","changedTouches","type","simulatedEvent","MouseEvent","bubbles","cancelable","view","window","detail","screenX","screenY","clientX","clientY","button","relatedTarget","dispatchEvent","preventDefault","isMounted","controlDOM","document","querySelector","touchEvent","addEventListener","capture","removeEventListener","gradientBackgroundId","maxWidth","padding","mozBoxShadow","webkitBoxShadow","secondaryRGB","margin","verticalAlign","paper","paddingTop","paddingBottom","paddingRight","borderWidth","top","left","right","stroke","strokeWidth","cursor","normalizeColorStops","optionalMinValue","optionalMaxValue","isValidArray","offset","totalColors","clampedStops","colorStop","offsets","normalizedOffsets","minOffset","maxOffset","normalizeColorStopOffsets","generateDiscreteColorGradientArray","numSteps","rgbToHex","r","g","b","x","hex","join","interpolateColor","color1","color2","factor","result","slice","i","round","normalizedColors","m","exec","parseInt","hexToRgb","colorArray","stepPositions","Array","from","_","pos","offset1","offset2","j","interpolatedColor","push","generateCssBackgroundGradient","_ref4","gradientDirection","generateSvgFillGradient","_ref5","BackgroundGradient","_ref6","visibility","x1","y1","x2","y2","stopColor","valueRange","minValue","maxValue","rangeBoxMinValue","rangeBoxMaxValue","calculateMarkerPositionOnRangeBox","labelStyle","textAlign","bottomLabelStyle","triangleStyle","borderLeft","borderRight","topTriangleStyle","bottomTriangleStyle","borderBottom","my","float","day","tooltipText","dateRange","inFirstTwoRowsOfChart","tooltipBoxRef","useRef","current","parentDiv","parentElement","ref","className","mr","getCalendarChartMargin","_options$legend","_options$colorAxis","_options$colorAxis2","_options$colorAxis3","_options$colorAxis4","dataArray","valueRangeBoxTitle","windowSize","setDateRange","setValueRange","calendarHeight","setCalendarHeight","thisDateRange","dateStrings","reduce","getDateRangeForCalendarChart","getValueRangeForCalendarChart","numberOfYears","Date","getFullYear","calendarChartMargin","totalHeight","displayLegend","dateStr","date","dayOfWeek","getDay","isFirstTwoDaysOfWeek","firstYear","isInFirstYear","calendarCellColors","gradientSteps","GoogleChartStyleWrapper","ValueRangeBox","overflowY","ResponsiveCalendar","data","to","emptyColor","yearSpacing","monthBorderColor","monthBorderWidth","daySpacing","dayBorderWidth","tooltipData","find","DOMParser","parseFromString","body","innerHTML","TooltipCalendarChart","returnCustomStaticRanges","today","minDateOfDataset","aggregationType","hourlyReturn","range","startDate","startOfDay","addDays","endDate","endOfDay","dailyReturn","AggregationType","hourly","StyledDateRangePicker","Paper","showPickerPanel","smallScreen","action","customBackground","borderTopRightRadius","borderBottomRightRadius","borderTopLeftRadius","borderBottomLeftRadius","returnFormattedDates","startDateObject","endDateObject","AggregationTypeToggle","setAggregationType","ToggleButtonGroup","exclusive","newType","ToggleButton","px","py","daily","DateRangePickerContext","createContext","initDateRange","key","DateRangePickerProvider","contextValue","useMemo","Provider","useDateRangePicker","InvalidRangeMessages","historicalChartIndex","ChartAPIendpointsOrder","findIndex","endpoint","ChartAPIendpoints","historical","displayErrorMessage","invalidRangeMessage","Alert","severity","dataType","currentSchoolID","setIndividualChartData","DashboardContext","setInvalidRangeMessage","shouldDisableApplyButton","setShouldDisableApplyButton","useMediaQuery","chartUrl","setChartUrl","setShowPickerPanel","paperRef","isFetchingData","setIsFetchingData","handleClickOutside","contains","checkValidRange","selectedRange","isSameDay","invalidRange","differenceInDays","elevation","DateRangePicker","ranges","selection","staticRanges","createStaticRanges","inputRanges","rangeColors","minDate","maxDate","months","showMonthAndYearPickers","fixedHeight","preventSnapRefocus","calendarFocus","startDatePlaceholder","endDatePlaceholder","editableDateInputs","showMonthArrow","Button","stopPropagation","formattedDates","newUrl","getHistoricalChartApiUrl","school_id","fetchDataFromURL","url","then","catch","error","console","log","CircularProgress","disableShrink","AxesPickerContext","AxesPickerProvider","setHAxis","setVAxis","useAxesPicker","correlationChartIndex","correlationDailyAverage","LeftSelect","RightSelect","allowedAxes","selectedAxes","receivedHAxis","receivedVAxis","shouldDisableOption","option","allowedDataTypes","xs","sm","fullWidth","InputLabel","newHAxis","autoWidth","sensor","applyChanges","getCorrelationChartApiUrl","sensorX","sensorY","NoChartToRender","selectableAxes","messagePrefix","messageSuffix","SubChart","selectedDataType","google","GoogleContext","dataTable","setDataTable","chartWrapper","setChartWrapper","setControlWrapper","previousChartData","setPreviousChartData","isFirstRender","setIsFirstRender","shouldRenderChart","setShouldRenderChart","renderChartNow","setRenderChartNow","allInitialColumns","setAllInitialColumns","dataColumns","setDataColumns","initialVAxisRange","setInitialVAxisRage","__","calendarDataArray","setCalendarDataArray","NivoCalendarChart","returnSelectedDataType","dataTypeKey","dataTypes","showUnit","LoadingAnimation","chartControlOptions","hasChartControl","control","seriesSelector","dateRangePicker","formatters","handleSeriesSelection","setOptions","draw","method","setInitialColumnsColors","col","_options$series2","seriesIndex","serieAttribute","getInitialVAxisRange","vAxisMin","vAxisMax","getColumnRange","sourceColumn","isNaN","useCallback","_allInitialColumns","_chartWrapper","_controlWrapper","hiddenSeriesObject","enableInteractivity","visibleInLegend","currentControlOptions","getOptions","newViewColumns","dataColumn","indexIn_","role","setView","newOptions","selectedSeriesCount","JSON","stringify","_shouldRenderChart","visualization","arrayToDataTable","hasOwnProperty","numberFormat","NumberFormat","numberFormatter","reconstructedColumns","evaluatedColumns","column","calc","calcFunction","Function","reconstructFunctionFromJSONstring","thisChartWrapper","ChartWrapper","containerId","thisControlWrapper","thisDashboardWrapper","Dashboard","getElementById","events","addListener","onChartReady","ControlWrapper","bind","initAllInitialColumns","initDataColumns","initialView","getView","viewFromDataTable","DataView","shouldAssignDomainRoleToFistColumn","dataSeriesIndex","getColumnLabel","indexInAllInitialColumns","defaultSeriesToDisplayInitially","_options$series","_options$series$col$s","getInitialColumns","gradientBackgroundColor","svgFillGradient","_options$vAxis2$viewW","minHeight","gap","CustomDateRangePicker","AxesPicker","renderChart","chartContainer","_ChartControlType$cha","parseFloat","wordLimit","reference","setIsExpanded","isMobile","subtitleRef","words","split","displayText","lastFullStop","lastIndexOf","ClickAwayListener","onClickAway","subtitleParent","closest","chartElements","Set","has","tagName","parentNode","isClickWithinSharedParent","ml","fetchChartDataType","anchorEl","setAnchorEl","name_title","open","Boolean","handleClose","currentTarget","Menu","onClose","MenuListProps","handleMenuItemClick","Tabs","smallFontSize","ChartStyleWrapper","mode","overflowX","scrollbarGutter","StyledMenuItem","chartTitle","generalChartSubtitle","generalChartReference","passedChartData","chartHeight","passedChartHeight","chartIndex","isSmallWidth","setIsPortrait","matchMedia","matches","setWindowSize","innerWidth","innerHeight","chartMaxHeight","currentTab","setCurrentTab","previousTab","setPreviousTab","dropdownMenuTabIndex","setDropdownMenuTabIndex","dropdownMenuCurrentTitle","setDropdownMenuCurrentTitle","setAllowedDataTypes","setSelectedDataType","dataTypesArr","name_short","unit","DataTypes","timeoutID","handleWindowResize","clearTimeout","setTimeout","DataTypeDropDownMenu","async","getChartApiUrl","renderMultipleSubcharts","needsDropdownMenu","MAX_NUM_TABS_TO_DISPLAY","subchartsDataForTabs","subchartsDataForDropDownMenu","shouldDisplayThisSubchart","StyledTabs","handleTabChange","newIndex","Tab","subchartTitle","flex","ExpandMoreIcon","subchartTitleShort","handleDropdownMenuSelection","WebkitOverflowScrolling","pointerEvents","currentSubchart","mb","CollapsibleSubtitle","getSubtitles","_chartData$subcharts$","subchartSubtitle","getReferences","_chartData$subcharts$2","StyledHyvorTalk","pageID","Container","capitalizePhrase","jsonData","Comments","HYVOR_WEBSITE_ID","loading","AirQualityIndexLegendQuickGlance","handlePopperOpen","airQualityIndexLegendQuickGlance","handlePopperClose","FadeInButtonForSpeedDial","distanceFromBottomOfWindow","Fab","onMouseEnter","onMouseLeave","AirIcon","Popper","placement","keepMounted","TransitionProps","Fade","timeout","mx","buttonIcon","buttonIconAria","buttonLabel","trackingEvent","dialogTitle","dialogOpenHandler","dialogCloseHandler","displaySchoolID","iconOnly","setOpen","onOpen","IconButton","Dialog","fullScreen","DialogActions","ChevronLeftIcon","DialogTitle","toUpperCase","DialogContent","DatasetDownloadDialog","sensorsDatasets","updateSensorsDatasets","previewingDataset","setPreviewingDataset","acc","location_short","location_type","location_long","last_seen","rawDatasets","keys","RawDatasetType","datasetAcc","datasetKey","sample","full","CustomDialog","DataObjectIcon","rawDatasetButtonClicked","DatasetSelectorAndPreviewer","schoolID","fontStyle","Link","href","firstSensor","initialDatasetType","datasetType","getRawDatasetUrl","sensor_location_short","isSample","extension","SupportedFetchExtensions","csv","needsAuthorization","tmp","md","DatasetsTable","PreviewDataset","tableLayout","Dataset","isPreviewing","selectedDatasetType","setSelectedDatasetType","fetchThisDataset","NYUpurpleLight","setThisSensorToPreview","selectedVal","disablePortal","reverse","charAt","toLowerCase","previewingDatasetName","setPreviewingDatasetName","csvFileName","setCsvFileName","isDatasetLoading","setIsDatasetLoading","convertCSVforDownload","dataset","blob","Blob","URL","createObjectURL","downloadLink","createElement","download","appendChild","click","revokeObjectURL","removeChild","formattedData","setFormattedData","rowNumber","setRowNumber","_sensorsDatasets$prev","_sensorsDatasets$prev2","csvData","lines","headers","rows","dateString","row","fontFamily","gutterBottom","pt","userSelect","optionalText","downloadPreviewingDataset","fetchedDataset","rawDatasetDownloaded","dataset_type","DownloadIcon","ScreenDropDownMenu","schoolMetadata","screens","TvIcon","screen","screen_name","SchoolSelector","user","UserContext","isArray","allowedSchools","CustomChip","icon","PlaceIcon","name","tooltipTitle","navigate","useNavigate","ArrowDropUpIcon","clickable","MenuList","dense","school","newSchoolID","localStorage","setItem","LocalStorage","internalNavigation","origin_school","destination_school_id","origin_id","AppRoutes","dashboard","EmailsInput","setShowNotification","setMessage","setSeverity","useNotificationContext","serverEmails","setServerEmails","localEmails","setLocalEmails","currentEmail","setCurrentEmail","menuAnchor","setMenuAnchor","getApiUrl","GeneralAPIendpoints","alertsEmails","AlertSeverity","handleAddEmail","passedEmail","email","trim","String","match","validateEmail","newEmails","warning","handleDeleteEmail","handleMenuClose","handleBeforeUnload","returnValue","wrap","flexWrap","handleMenuOpen","TextField","e","onKeyUp","onPaste","pastedText","clipboardData","getData","placeholder","InputProps","disableUnderline","_emails","emailsToSave","restMethod","RESTmethods","POST","success","arr1","arr2","compareArrays","AlertTypes","threshold","tableColumnHeader","SpeedIcon","CalendarMonthIcon","ThresholdAlertTypes","below_threshold","sign","above_threshold","AirQualityAlertContext","AirQualityAlertKeys","alert_type","sensor_id","datatypekey","threshold_value","minutespastmidnight","getAlertPlaceholder","localAlertType","arguments","AirQualityAlertProvider","selectedAlert","setSelectedAlert","editingAlert","setEditingAlert","allowedDataTypesForSensor","setAllowedDataTypesForSensor","alerts","setAlerts","returnAllowedDataTypesForThisSensor","sensors","allowedDataTypesForThisSensor","elem","getAlertsApiUrl","useAirQualityAlert","returnHoursFromMinutesPastMidnight","minutes","floor","padStart","CrudTypes","SharedColumnHeader","DialogData","primaryButtonLabel","errorMessage","successMessage","contentText","ThresholdTypeToggle","thisAlertType","others","defaultValue","thresholdAlertType","SimplePicker","HOURS","minutesPastMidnight","ThresholdSlider","stepsForThreshold","marks","backgroundCssGradient","invertSelection","showInput","inputUnit","sliderRangeMin","setSliderRangeMin","sliderRangeMax","setSliderRangeMax","nearestDataIndex","setNearestDataIndex","setError","helperText","setHelperText","localSliderRangeMin","localSliderRangeMax","findNearestDataIndex","val","greaterMarks","mark","nearestMark","prev","curr","indexOf","stripedGradient","white","Number","inputProps","step","Slider","handleSliderChange","newValue","valueLabelDisplay","black","paperBackgroundGradient","_schoolMetadata$senso","_DialogData$crudType2","_DialogData$crudType3","alertTypeKey","openAlertModificationDialog","crudType","shouldDisableButton","setShouldDisableButton","handleCurrentSensorChange","newSensor","handleCurrentDataTypeChange","selectedDataTypeKey","dataTypeColorAxis","color_axis","defaultValueForAlert","handleCurrentThresholdValueChange","handleCurrentAlertTypeChange","handleCurrentMinutesPastMidnightChange","locations","isEqual","returnDialogContent","_DataTypes$currentDat","_DialogData$crudType","isDisabled","dependentKey","alertTypeSpecificData","AccessTimeIcon","thresholdSlider","currentDataTypeKey","database","DataTypeKeys","voc","VOC_Database","aqi","pm2_5","pm10_raw","co2","threshold_mapping_name","DialogContentText","CategoryIcon","handleAlertModification","handleFetchError","handleFetchSuccess","prevAlerts","alert_id","PUT","alert","DELETE","_AlertTypes$alertType","alertsForTable","setOpenAlertModificationDialog","setCrudType","handleModifyClick","TransitionGroup","Grow","EditIcon","DeleteIcon","startIcon","AddAlarmIcon","AlertModificationDialog","AlertTab","alertsArray","other","hidden","AlertsTable","AlertsTabs","returnFilteredAlertsBasedOnAlertType","filteredAlerts","_alert$alert_type","array","alertsLength","newVal","_AlertTypes$Object$ke","_Object$keys","iconPosition","AirQualityAlerts","NotificationImportantIcon","otherProps","Project","lastUpdate","commentCounts","fetchCommentCounts","setCommentCounts","setChartsTitlesList","MetadataContext","allChartsData","loadMoreCharts","setLoadMoreCharts","temperatureUnitPreference","displayCommentSection","setDisplayCommentSection","displayMapOfSensors","setDisplayMapOfSensors","isNYUAD","NYUAD","chartsTitles","_allChartsData$key","displayLoadMoreButton","isLastChartInList","KeyboardArrowDownIcon","GridOfMetadataChips","PersonIcon","contactPerson","EmailIcon","contactEmail","BarChartIcon","_jsonData$chartData","scrollToSection","destination_id","destination_label","CommentIcon","HYVOR_PAGE_NAME","FullWidthBox","getDashboardTitle","NYUADbanner","initialNyuadCurrentData","isOnBannerPage","minMapHeight","CurrentAQIGrid","currentSensorsData","isScreen","ThemePreferences","dark","ChartComponentWrapper","subtitle","Divider","CommentSection","school_id_param","useParams","locationPath","useLocation","pathname","setCurrentPage","setCurrentSchoolID","setSchoolMetadata","setCurrent","fetchInitialDataForDashboard","checkedAuthentication","authenticated","login","redirectQuery","previouslySelectedSchoolID","getItem","response","Promise","all","schoolmetadata","fetchAndProcessCurrentSensorsData","NUMBER_OF_CHARTS_TO_LOAD_INITIALLY","chartIndexInPage"],"sourceRoot":""}